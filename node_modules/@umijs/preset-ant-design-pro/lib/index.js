"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

var _chainWebpack = _interopRequireDefault(require("./chainWebpack"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = api => {
  const REACT_APP_ENV = process.env.REACT_APP_ENV; // support dev tools

  api.modifyDefaultConfig(config => {
    const define = config.define;
    config.define = _objectSpread({
      ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION: '',
      REACT_APP_ENV: REACT_APP_ENV || false
    }, define || {});
    return config;
  });

  if (api.chainWebpack) {
    api.chainWebpack(_chainWebpack.default);
  }

  const plugins = [require.resolve('umi-plugin-pro-block')]; // 有 plugin-react 时不加 plugin-antd-icon-config，因为已经内置了
  // 在 ant-design-pro 5 之后，用 plugin-react，去 plugin-antd-icon-config

  if (!api.hasPlugins(['@umijs/plugin-react'])) {
    plugins.push(require.resolve('umi-plugin-antd-icon-config'));
  }

  return {
    plugins
  };
};

exports.default = _default;