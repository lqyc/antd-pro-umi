"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react2() {
  const data = _interopRequireDefault(require("react"));

  _react2 = function _react2() {
    return data;
  };

  return data;
}

function _umi() {
  const data = require("umi");

  _umi = function _umi() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

function _fs() {
  const data = require("fs");

  _fs = function _fs() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const semver = _umi().utils.semver;

var _default = api => {
  const isReact17 = () => {
    var _react;

    let react;

    try {
      react = require(require.resolve('react', {
        paths: [api.cwd]
      }));
    } catch (e) {}

    return semver.valid((_react = react) === null || _react === void 0 ? void 0 : _react.version) && semver.gte(react.version, '17.0.0-alpha.0');
  };

  api.onStart(() => {
    var _tsconfigContent;

    const tsconfigPath = (0, _path().join)(api.cwd, 'tsconfig.json');
    let tsconfigContent = '';

    try {
      if ((0, _fs().existsSync)(tsconfigPath)) {
        tsconfigContent = (0, _fs().readFileSync)(tsconfigPath, 'utf-8');
      }
    } catch (e) {}

    if (isReact17() && tsconfigContent && !((_tsconfigContent = tsconfigContent) === null || _tsconfigContent === void 0 ? void 0 : _tsconfigContent.includes('react-jsx'))) {
      api.logger.warn('[WARN] update `jsx: "react"` into `jsx: "react-jsx"` to suport the new JSX transform in React 17 in tsconfig.json');
    }
  }); // support react 17

  api.modifyBabelPresetOpts(opts => {
    return _objectSpread(_objectSpread({}, opts), {}, {
      reactRequire: !isReact17(),
      react: _objectSpread(_objectSpread({}, opts.react || {}), {}, {
        // support React 17 New Jsx syntax
        runtime: isReact17() ? 'automatic' : 'classic'
      })
    });
  });
};

exports.default = _default;