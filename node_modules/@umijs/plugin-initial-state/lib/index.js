"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _umi() {
  const data = require("umi");

  _umi = function _umi() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

var _getProviderContent = _interopRequireDefault(require("./utils/getProviderContent"));

var _getModelContent = _interopRequireDefault(require("./utils/getModelContent"));

var _getExportContent = _interopRequireDefault(require("./utils/getExportContent"));

var _shouldPluginEnable = require("./utils/shouldPluginEnable");

var _constants = require("./constants");

function _fs() {
  const data = require("fs");

  _fs = function _fs() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const winPath = _umi().utils.winPath,
      getFile = _umi().utils.getFile;

var _default = api => {
  // 注册 getInitialState 方法
  api.addRuntimePluginKey(() => 'getInitialState');
  api.addRuntimePluginKey(() => 'initialStateConfig');
  api.addRuntimePlugin(() => '../plugin-initial-state/runtime');
  api.addUmiExports(() => [{
    exportAll: true,
    source: winPath(`../${_constants.RELATIVE_EXPORT}`)
  }]);
  api.register({
    key: 'addExtraModels',
    fn: () => [{
      absPath: winPath((0, _path().join)(api.paths.absTmpPath, _constants.RELATIVE_MODEL_PATH)),
      namespace: '@@initialState'
    }]
  });
  api.addTmpGenerateWatcherPaths(() => ['./app.ts', './app.js', './app.jsx', './app.tsx']);
  api.onGenerateFiles( /*#__PURE__*/_asyncToGenerator(function* () {
    var _getFile;

    const entryFile = (_getFile = getFile({
      base: api.paths.absSrcPath,
      type: 'javascript',
      fileNameWithoutExt: 'app'
    })) === null || _getFile === void 0 ? void 0 : _getFile.path;
    api.writeTmpFile({
      path: winPath((0, _path().join)(_constants.DIR_NAME, 'Provider.tsx')),
      content: _getProviderContent.default
    });
    api.writeTmpFile({
      path: winPath(_constants.RELATIVE_EXPORT_PATH),
      content: (0, _getExportContent.default)(_constants.RELATIVE_MODEL)
    });
    const relEntryFile = (0, _path().relative)(api.paths.cwd, entryFile || '');
    const enable = (0, _shouldPluginEnable.shouldPluginEnable)(entryFile);
    api.writeTmpFile({
      path: _constants.RELATIVE_MODEL_PATH,
      content: (0, _getModelContent.default)(enable ? relEntryFile : '')
    });
    api.writeTmpFile({
      path: 'plugin-initial-state/runtime.tsx',
      content: _umi().utils.Mustache.render((0, _fs().readFileSync)((0, _path().join)(__dirname, 'runtime.tsx.tpl'), 'utf-8'), {})
    });
  }));
};

exports.default = _default;