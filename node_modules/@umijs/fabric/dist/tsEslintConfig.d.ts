declare const _default: {
    'no-undef': number;
    '@typescript-eslint/adjacent-overload-signatures': number;
    '@typescript-eslint/array-type': string;
    '@typescript-eslint/await-thenable': number;
    '@typescript-eslint/ban-ts-comment': number;
    '@typescript-eslint/ban-tslint-comment': number;
    'brace-style': string;
    '@typescript-eslint/brace-style': number;
    '@typescript-eslint/class-literal-property-style': number;
    'comma-dangle': string;
    '@typescript-eslint/comma-dangle': number;
    'comma-spacing': string;
    '@typescript-eslint/comma-spacing': number;
    '@typescript-eslint/consistent-indexed-object-style': number;
    '@typescript-eslint/consistent-type-assertions': number;
    '@typescript-eslint/consistent-type-definitions': number;
    '@typescript-eslint/consistent-type-imports': number;
    'default-param-last': string;
    '@typescript-eslint/default-param-last': number;
    'dot-notation': string;
    '@typescript-eslint/dot-notation': number;
    '@typescript-eslint/explicit-function-return-type': number;
    'func-call-spacing': string;
    '@typescript-eslint/func-call-spacing': number;
    indent: string;
    'init-declarations': string;
    '@typescript-eslint/init-declarations': number;
    'keyword-spacing': string;
    '@typescript-eslint/keyword-spacing': number;
    'lines-between-class-members': string;
    '@typescript-eslint/lines-between-class-members': number;
    '@typescript-eslint/member-delimiter-style': number;
    '@typescript-eslint/member-ordering': number;
    '@typescript-eslint/method-signature-style': string;
    'no-array-constructor': string;
    '@typescript-eslint/no-array-constructor': number;
    '@typescript-eslint/no-base-to-string': number;
    '@typescript-eslint/no-confusing-non-null-assertion': string;
    '@typescript-eslint/no-confusing-void-expression': number;
    'no-dupe-class-members': string;
    '@typescript-eslint/no-dupe-class-members': string;
    'no-duplicate-imports': string;
    '@typescript-eslint/no-duplicate-imports': number;
    '@typescript-eslint/no-dynamic-delete': number;
    'no-empty-function': string;
    '@typescript-eslint/no-empty-function': number;
    '@typescript-eslint/no-empty-interface': number;
    '@typescript-eslint/no-extra-non-null-assertion': number;
    'no-extra-parens': string;
    '@typescript-eslint/no-extra-parens': number;
    'no-extra-semi': string;
    '@typescript-eslint/no-extra-semi': number;
    '@typescript-eslint/no-extraneous-class': number;
    '@typescript-eslint/no-floating-promises': number;
    '@typescript-eslint/no-for-in-array': string;
    '@typescript-eslint/no-implicit-any-catch': number;
    'no-implied-eval': string;
    '@typescript-eslint/no-implied-eval': number;
    '@typescript-eslint/no-inferrable-types': number;
    'no-invalid-this': string;
    '@typescript-eslint/no-invalid-this': string;
    '@typescript-eslint/no-invalid-void-type': number;
    'no-loop-func': string;
    '@typescript-eslint/no-loop-func': string;
    'no-loss-of-precision': string;
    '@typescript-eslint/no-loss-of-precision': number;
    'no-magic-numbers': string;
    '@typescript-eslint/no-magic-numbers': number;
    '@typescript-eslint/no-misused-new': string;
    '@typescript-eslint/no-misused-promises': number;
    '@typescript-eslint/no-namespace': number;
    '@typescript-eslint/no-non-null-asserted-optional-chain': string;
    '@typescript-eslint/no-parameter-properties': string;
    'no-redeclare': string;
    '@typescript-eslint/no-redeclare': string;
    '@typescript-eslint/no-require-imports': number;
    'no-shadow': string;
    '@typescript-eslint/no-shadow': string;
    '@typescript-eslint/no-this-alias': string;
    'no-throw-literal': string;
    '@typescript-eslint/no-throw-literal': string;
    '@typescript-eslint/no-type-alias': number;
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': number;
    '@typescript-eslint/no-unnecessary-condition': number;
    '@typescript-eslint/no-unnecessary-qualifier': number;
    '@typescript-eslint/no-unnecessary-type-arguments': number;
    '@typescript-eslint/no-unnecessary-type-assertion': number;
    '@typescript-eslint/no-unnecessary-type-constraint': number;
    '@typescript-eslint/no-unsafe-assignment': number;
    '@typescript-eslint/no-unsafe-call': number;
    '@typescript-eslint/no-unsafe-member-access': number;
    '@typescript-eslint/no-unsafe-return': number;
    'no-unused-expressions': string;
    '@typescript-eslint/no-unused-expressions': string;
    'no-unused-vars': string;
    'no-use-before-define': string;
    'no-useless-constructor': string;
    '@typescript-eslint/no-useless-constructor': string;
    '@typescript-eslint/non-nullable-type-assertion-style': number;
    '@typescript-eslint/prefer-as-const': number;
    '@typescript-eslint/prefer-enum-initializers': number;
    '@typescript-eslint/prefer-for-of': number;
    '@typescript-eslint/prefer-function-type': number;
    '@typescript-eslint/prefer-includes': number;
    '@typescript-eslint/prefer-literal-enum-member': number;
    '@typescript-eslint/prefer-namespace-keyword': number;
    '@typescript-eslint/prefer-nullish-coalescing': number;
    '@typescript-eslint/prefer-optional-chain': number;
    '@typescript-eslint/prefer-readonly': number;
    '@typescript-eslint/prefer-readonly-parameter-types': number;
    '@typescript-eslint/prefer-reduce-type-parameter': number;
    '@typescript-eslint/prefer-regexp-exec': number;
    '@typescript-eslint/prefer-string-starts-ends-with': number;
    '@typescript-eslint/prefer-ts-expect-error': number;
    '@typescript-eslint/promise-function-async': number;
    quotes: string;
    '@typescript-eslint/quotes': number;
    '@typescript-eslint/require-array-sort-compare': number;
    'require-await': string;
    '@typescript-eslint/require-await': number;
    '@typescript-eslint/restrict-plus-operands': number;
    '@typescript-eslint/restrict-template-expressions': number;
    'no-return-await': string;
    '@typescript-eslint/return-await': number;
    semi: string;
    '@typescript-eslint/semi': number;
    'space-before-function-paren': string;
    '@typescript-eslint/space-before-function-paren': number;
    'space-infix-ops': string;
    '@typescript-eslint/space-infix-ops': number;
    '@typescript-eslint/strict-boolean-expressions': number;
    '@typescript-eslint/switch-exhaustiveness-check': string;
    '@typescript-eslint/triple-slash-reference': string;
    '@typescript-eslint/type-annotation-spacing': string;
    '@typescript-eslint/typedef': string;
    '@typescript-eslint/unbound-method': number;
    '@typescript-eslint/unified-signatures': string;
    '@typescript-eslint/indent': number;
    '@typescript-eslint/no-use-before-define': (string | {
        functions: boolean;
        classes: boolean;
        variables: boolean;
        typedefs: boolean;
    })[];
    camelcase: number;
    '@typescript-eslint/camelcase': number;
    '@typescript-eslint/no-var-requires': number;
    '@typescript-eslint/explicit-member-accessibility': number;
    '@typescript-eslint/interface-name-prefix': number;
    '@typescript-eslint/no-non-null-assertion': number;
    '@typescript-eslint/no-explicit-any': number;
    '@typescript-eslint/ban-types': number;
    '@typescript-eslint/explicit-module-boundary-types': number;
    '@typescript-eslint/naming-convention': number;
    '@typescript-eslint/no-unused-vars': (string | {
        vars: string;
        args: string;
        ignoreRestSiblings: boolean;
    })[];
};
export default _default;
