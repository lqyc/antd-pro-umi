import _initializerDefineProperty from "@babel/runtime/helpers/initializerDefineProperty";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/initializerWarningHelper";

var _dec, _dec2, _class, _descriptor, _descriptor2, _temp;

import { BlendType, lazyInject, TYPES } from '@antv/l7-core';
import { BlendTypes } from '../utils/blend';
var BaseModel = (_dec = lazyInject(TYPES.IGlobalConfigService), _dec2 = lazyInject(TYPES.IShaderModuleService), (_class = (_temp = function () {
  function BaseModel(layer) {
    _classCallCheck(this, BaseModel);

    this.triangulation = void 0;
    this.layer = void 0;

    _initializerDefineProperty(this, "configService", _descriptor, this);

    _initializerDefineProperty(this, "shaderModuleService", _descriptor2, this);

    this.rendererService = void 0;
    this.iconService = void 0;
    this.fontService = void 0;
    this.styleAttributeService = void 0;
    this.mapService = void 0;
    this.cameraService = void 0;
    this.layerService = void 0;
    this.layer = layer;
    this.rendererService = layer.getContainer().get(TYPES.IRendererService);
    this.styleAttributeService = layer.getContainer().get(TYPES.IStyleAttributeService);
    this.mapService = layer.getContainer().get(TYPES.IMapService);
    this.iconService = layer.getContainer().get(TYPES.IIconService);
    this.fontService = layer.getContainer().get(TYPES.IFontService);
    this.cameraService = layer.getContainer().get(TYPES.ICameraService);
    this.layerService = layer.getContainer().get(TYPES.ILayerService);
    this.registerBuiltinAttributes();
    this.startModelAnimate();
  }

  _createClass(BaseModel, [{
    key: "getBlend",
    value: function getBlend() {
      var _this$layer$getLayerC = this.layer.getLayerConfig(),
          _this$layer$getLayerC2 = _this$layer$getLayerC.blend,
          blend = _this$layer$getLayerC2 === void 0 ? 'normal' : _this$layer$getLayerC2;

      return BlendTypes[BlendType[blend]];
    }
  }, {
    key: "getDefaultStyle",
    value: function getDefaultStyle() {
      return {};
    }
  }, {
    key: "getUninforms",
    value: function getUninforms() {
      throw new Error('Method not implemented.');
    }
  }, {
    key: "getAnimateUniforms",
    value: function getAnimateUniforms() {
      return {};
    }
  }, {
    key: "needUpdate",
    value: function needUpdate() {
      return false;
    }
  }, {
    key: "buildModels",
    value: function buildModels() {
      throw new Error('Method not implemented.');
    }
  }, {
    key: "initModels",
    value: function initModels() {
      throw new Error('Method not implemented.');
    }
  }, {
    key: "clearModels",
    value: function clearModels() {
      return;
    }
  }, {
    key: "getAttribute",
    value: function getAttribute() {
      throw new Error('Method not implemented.');
    }
  }, {
    key: "render",
    value: function render() {
      throw new Error('Method not implemented.');
    }
  }, {
    key: "registerBuiltinAttributes",
    value: function registerBuiltinAttributes() {
      throw new Error('Method not implemented.');
    }
  }, {
    key: "animateOption2Array",
    value: function animateOption2Array(option) {
      return [option.enable ? 0 : 1.0, option.duration || 4.0, option.interval || 0.2, option.trailLength || 0.1];
    }
  }, {
    key: "startModelAnimate",
    value: function startModelAnimate() {
      var _ref = this.layer.getLayerConfig(),
          animateOption = _ref.animateOption;

      if (animateOption.enable) {
        this.layer.setAnimateStartTime();
      }
    }
  }]);

  return BaseModel;
}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "configService", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "shaderModuleService", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), _class));
export { BaseModel as default };
//# sourceMappingURL=BaseModel.js.map