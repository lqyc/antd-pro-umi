{"version":3,"sources":["../../src/plugins/UpdateStyleAttributePlugin.ts"],"names":["TYPES","inject","injectable","UpdateStyleAttributePlugin","ILogService","layer","styleAttributeService","hooks","init","tap","initStyleAttribute","beforeRender","layerModelNeedUpdate","updateStyleAtrribute","attributes","getLayerStyleAttributes","filter","getLayerStyleAttribute","shape","needRegenerateVertices","forEach","attr","attribute","updateAttributeByFeatureRange","name","getEncodedData","featureRange","startIndex","endIndex","logger","debug"],"mappings":";;;;;;;;AAAA,SAKEA,KALF,QAMO,eANP;AAOA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,WAAnC;IAMqBC,0B,WADpBD,UAAU,E,UAERD,MAAM,CAACD,KAAK,CAACI,WAAP,C;;;;;;;;;WAGP,eACEC,KADF,QAKE;AAAA;;AAAA,UAFEC,qBAEF,QAFEA,qBAEF;AACAD,MAAAA,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBC,GAAjB,CAAqB,4BAArB,EAAmD,YAAM;AACvD,QAAA,KAAI,CAACC,kBAAL,CAAwBL,KAAxB,EAA+B;AAAEC,UAAAA,qBAAqB,EAArBA;AAAF,SAA/B;AACD,OAFD;AASAD,MAAAA,KAAK,CAACE,KAAN,CAAYI,YAAZ,CAAyBF,GAAzB,CAA6B,4BAA7B,EAA2D,YAAM;AAC/D,YAAIJ,KAAK,CAACO,oBAAV,EAAgC;AAC9B;AACD;;AACD,QAAA,KAAI,CAACC,oBAAL,CAA0BR,KAA1B,EAAiC;AAAEC,UAAAA,qBAAqB,EAArBA;AAAF,SAAjC;AACD,OALD;AAMD;;;WACD,8BACED,KADF,SAKE;AAAA;;AAAA,UAFEC,qBAEF,SAFEA,qBAEF;AACA,UAAMQ,UAAU,GAAGR,qBAAqB,CAACS,uBAAtB,MAAmD,EAAtE;AACA,UAAMC,MAAM,GAAGV,qBAAqB,CAACW,sBAAtB,CAA6C,QAA7C,CAAf;AACA,UAAMC,KAAK,GAAGZ,qBAAqB,CAACW,sBAAtB,CAA6C,OAA7C,CAAd;;AACA,UACGD,MAAM,IAAIA,MAAM,CAACG,sBAAlB,IACCD,KAAK,IAAIA,KAAK,CAACC,sBAFlB,EAGE;AACAd,UAAAA,KAAK,CAACO,oBAAN,GAA6B,IAA7B;AACAE,UAAAA,UAAU,CAACM,OAAX,CAAmB,UAACC,IAAD;AAAA,mBAAWA,IAAI,CAACF,sBAAL,GAA8B,KAAzC;AAAA,WAAnB;AACA;AACD;;AACDL,MAAAA,UAAU,CACPE,MADH,CACU,UAACM,SAAD;AAAA,eAAeA,SAAS,CAACH,sBAAzB;AAAA,OADV,EAEGC,OAFH,CAEW,UAACE,SAAD,EAAe;AAEtBhB,QAAAA,qBAAqB,CAACiB,6BAAtB,CACED,SAAS,CAACE,IADZ,EAEEnB,KAAK,CAACoB,cAAN,EAFF,EAGEH,SAAS,CAACI,YAAV,CAAuBC,UAHzB,EAIEL,SAAS,CAACI,YAAV,CAAuBE,QAJzB;AAMAN,QAAAA,SAAS,CAACH,sBAAV,GAAmC,KAAnC;;AACA,QAAA,MAAI,CAACU,MAAL,CAAYC,KAAZ,yCACmCR,SAAS,CAACE,IAD7C;AAGD,OAdH;AAeD;;;WAED,4BACEnB,KADF,SAKE;AAAA;;AAAA,UAFEC,qBAEF,SAFEA,qBAEF;AACA,UAAMQ,UAAU,GAAGR,qBAAqB,CAACS,uBAAtB,MAAmD,EAAtE;AACAD,MAAAA,UAAU,CACPE,MADH,CACU,UAACM,SAAD;AAAA,eAAeA,SAAS,CAACH,sBAAzB;AAAA,OADV,EAEGC,OAFH,CAEW,UAACE,SAAD,EAAe;AAEtBhB,QAAAA,qBAAqB,CAACiB,6BAAtB,CACED,SAAS,CAACE,IADZ,EAEEnB,KAAK,CAACoB,cAAN,EAFF,EAGEH,SAAS,CAACI,YAAV,CAAuBC,UAHzB,EAIEL,SAAS,CAACI,YAAV,CAAuBE,QAJzB;AAMAN,QAAAA,SAAS,CAACH,sBAAV,GAAmC,KAAnC;;AACA,QAAA,MAAI,CAACU,MAAL,CAAYC,KAAZ,mCAA6CR,SAAS,CAACE,IAAvD;AACD,OAZH;AAaD;;;;;;;;;;SAhFkBrB,0B","sourcesContent":["import {\n  ILayer,\n  ILayerPlugin,\n  ILogService,\n  IStyleAttributeService,\n  TYPES,\n} from '@antv/l7-core';\nimport { inject, injectable } from 'inversify';\n\n/**\n * 在初始化阶段完成属性的注册，以及首次根据 Layer 指定的三角化方法完成 indices 和 attribute 的创建\n */\n@injectable()\nexport default class UpdateStyleAttributePlugin implements ILayerPlugin {\n  @inject(TYPES.ILogService)\n  private readonly logger: ILogService;\n\n  public apply(\n    layer: ILayer,\n    {\n      styleAttributeService,\n    }: { styleAttributeService: IStyleAttributeService },\n  ) {\n    layer.hooks.init.tap('UpdateStyleAttributePlugin', () => {\n      this.initStyleAttribute(layer, { styleAttributeService });\n    });\n\n    // layer.hooks.beforeRenderData.tap('styleAttributeService', () => {\n    //   // layer.layerModelNeedUpdate = true;\n    //   return true;\n    // });\n\n    layer.hooks.beforeRender.tap('UpdateStyleAttributePlugin', () => {\n      if (layer.layerModelNeedUpdate) {\n        return;\n      }\n      this.updateStyleAtrribute(layer, { styleAttributeService });\n    });\n  }\n  private updateStyleAtrribute(\n    layer: ILayer,\n    {\n      styleAttributeService,\n    }: { styleAttributeService: IStyleAttributeService },\n  ) {\n    const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n    const filter = styleAttributeService.getLayerStyleAttribute('filter');\n    const shape = styleAttributeService.getLayerStyleAttribute('shape');\n    if (\n      (filter && filter.needRegenerateVertices) ||\n      (shape && shape.needRegenerateVertices) // TODO:Shape 更新重新build\n    ) {\n      layer.layerModelNeedUpdate = true;\n      attributes.forEach((attr) => (attr.needRegenerateVertices = false));\n      return;\n    }\n    attributes\n      .filter((attribute) => attribute.needRegenerateVertices)\n      .forEach((attribute) => {\n        // 精确更新某个/某些 feature(s)，需要传入 featureIdx d\n        styleAttributeService.updateAttributeByFeatureRange(\n          attribute.name,\n          layer.getEncodedData(), // 获取经过 mapping 最新的数据\n          attribute.featureRange.startIndex,\n          attribute.featureRange.endIndex,\n        );\n        attribute.needRegenerateVertices = false;\n        this.logger.debug(\n          `regenerate vertex attributes: ${attribute.name} finished`,\n        );\n      });\n  }\n\n  private initStyleAttribute(\n    layer: ILayer,\n    {\n      styleAttributeService,\n    }: { styleAttributeService: IStyleAttributeService },\n  ) {\n    const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n    attributes\n      .filter((attribute) => attribute.needRegenerateVertices)\n      .forEach((attribute) => {\n        // 精确更新某个/某些 feature(s)，需要传入 featureIdx d\n        styleAttributeService.updateAttributeByFeatureRange(\n          attribute.name,\n          layer.getEncodedData(), // 获取经过 mapping 最新的数据\n          attribute.featureRange.startIndex,\n          attribute.featureRange.endIndex,\n        );\n        attribute.needRegenerateVertices = false;\n        this.logger.debug(`init vertex attributes: ${attribute.name} finished`);\n      });\n  }\n}\n"],"file":"UpdateStyleAttributePlugin.js"}