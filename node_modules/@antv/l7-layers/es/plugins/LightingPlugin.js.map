{"version":3,"sources":["../../src/plugins/LightingPlugin.ts"],"names":["injectable","lightTypeUniformMap","directional","lights","num","spot","DEFAULT_LIGHT","type","direction","ambient","diffuse","specular","DEFAULT_DIRECTIONAL_LIGHT","DEFAULT_SPOT_LIGHT","position","constant","linear","quadratic","angle","exponent","blur","COLOR_ATTRIBUTES","generateLightingUniforms","lightsMap","u_DirectionalLights","Array","fill","u_NumOfDirectionalLights","u_SpotLights","u_NumOfSpotLights","length","forEach","i","rest","lightsUniformName","lightsNumUniformName","LightingPlugin","layer","hooks","beforeRender","tap","getLayerConfig","enableLighting","models","model","addUniforms"],"mappings":"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","sourcesContent":["import {\n  CameraUniform,\n  CoordinateUniform,\n  ICameraService,\n  ICoordinateSystemService,\n  ILayer,\n  ILayerPlugin,\n  IRendererService,\n  TYPES,\n} from '@antv/l7-core';\nimport { inject, injectable } from 'inversify';\n\nconst lightTypeUniformMap = {\n  directional: {\n    lights: 'u_DirectionalLights',\n    num: 'u_NumOfDirectionalLights',\n  },\n  spot: {\n    lights: 'u_SpotLights',\n    num: 'u_NumOfSpotLights',\n  },\n};\n\ninterface IDirectionalLight {\n  type: 'directional';\n  direction: [number, number, number];\n  ambient: [number, number, number];\n  diffuse: [number, number, number];\n  specular: [number, number, number];\n}\n\ninterface ISpotLight {\n  type: 'spot';\n  position: [number, number, number];\n  direction: [number, number, number];\n  ambient: [number, number, number];\n  diffuse: [number, number, number];\n  specular: [number, number, number];\n  constant: number;\n  linear: number;\n  quadratic: number;\n  angle: number;\n  exponent: number;\n  blur: number;\n}\n\nconst DEFAULT_LIGHT: IDirectionalLight = {\n  type: 'directional',\n  direction: [1, 10.5, 12],\n  ambient: [0.2, 0.2, 0.2],\n  diffuse: [0.6, 0.6, 0.6],\n  specular: [0.1, 0.1, 0.1],\n};\n\nconst DEFAULT_DIRECTIONAL_LIGHT = {\n  direction: [0, 0, 0],\n  ambient: [0, 0, 0],\n  diffuse: [0, 0, 0],\n  specular: [0, 0, 0],\n};\n\nconst DEFAULT_SPOT_LIGHT = {\n  position: [0, 0, 0],\n  direction: [0, 0, 0],\n  ambient: [0, 0, 0],\n  diffuse: [0, 0, 0],\n  specular: [0, 0, 0],\n  constant: 1,\n  linear: 0,\n  quadratic: 0,\n  angle: 14,\n  exponent: 40,\n  blur: 5,\n};\n\nconst COLOR_ATTRIBUTES = ['ambient', 'diffuse', 'specular'];\n\nexport function generateLightingUniforms(\n  lights?: Array<Partial<IDirectionalLight | ISpotLight>>,\n) {\n  const lightsMap: {\n    u_DirectionalLights: Array<Omit<IDirectionalLight, 'type'>>;\n    u_NumOfDirectionalLights: number;\n    u_SpotLights: Array<Omit<ISpotLight, 'type'>>;\n    u_NumOfSpotLights: number;\n  } = {\n    u_DirectionalLights: new Array(3).fill({ ...DEFAULT_DIRECTIONAL_LIGHT }),\n    u_NumOfDirectionalLights: 0,\n    u_SpotLights: new Array(3).fill({ ...DEFAULT_SPOT_LIGHT }),\n    u_NumOfSpotLights: 0,\n  };\n  if (!lights || !lights.length) {\n    lights = [DEFAULT_LIGHT];\n  }\n  lights.forEach(({ type = 'directional', ...rest }, i) => {\n    const lightsUniformName = lightTypeUniformMap[type].lights;\n    const lightsNumUniformName = lightTypeUniformMap[type].num;\n\n    // Object.keys(rest).forEach(key => {\n    //   if (Util.isString(rest[key]) && COLOR_ATTRIBUTES.indexOf(key) > -1) {\n    //     rest[key] = ColorUtil.color2RGBA(rest[key]).slice(0, 3);\n    //   }\n    // });\n\n    // @ts-ignore\n    const num = lightsMap[lightsNumUniformName];\n    // @ts-ignore\n    lightsMap[lightsUniformName][num] = {\n      // @ts-ignore\n      ...lightsMap[lightsUniformName][num],\n      ...rest,\n    };\n    // @ts-ignore\n    lightsMap[lightsNumUniformName]++;\n  });\n  return lightsMap;\n}\n\n/**\n * 光照 & Shadow\n */\n@injectable()\nexport default class LightingPlugin implements ILayerPlugin {\n  public apply(layer: ILayer) {\n    layer.hooks.beforeRender.tap('LightingPlugin', () => {\n      const { enableLighting } = layer.getLayerConfig();\n      if (enableLighting) {\n        layer.models.forEach((model) =>\n          // @ts-ignore\n          model.addUniforms({\n            ...generateLightingUniforms(),\n          }),\n        );\n      }\n    });\n  }\n}\n"],"file":"LightingPlugin.js"}