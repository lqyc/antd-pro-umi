{"version":3,"sources":["../../../src/point/models/icon-font.ts"],"names":["AttributeType","gl","BaseModel","PointImageTriangulation","IconeModel","texture","layer","getLayerConfig","opacity","u_opacity","u_texture","u_textSize","iconService","canvasHeight","initIconFontGlyphs","registerBuiltinAttributes","updateTexture","on","render","buildLayerModel","moduleName","vertexShader","pointImageVert","fragmentShader","pointImageFrag","triangulation","primitive","POINTS","depth","enable","blend","getBlend","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","featureIdx","vertex","attributeIdx","Array","isArray","mapping","fontService","shape","icon","getGlyph","x","y","createTexture2D","rendererService","canvas","mag","LINEAR","min","width","height","fontWeight","fontFamily","getEncodedData","characterSet","forEach","item","toString","indexOf","push","setFontOptions","fontSize"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IEncodeFeature,\n  IModel,\n  IModelUniform,\n  ITexture2D,\n} from '@antv/l7-core';\n\nimport BaseModel from '../../core/BaseModel';\nimport { PointImageTriangulation } from '../../core/triangulation';\nimport pointImageFrag from '../shaders/image_frag.glsl';\nimport pointImageVert from '../shaders/image_vert.glsl';\ninterface IIconIFontStyleOptions {\n  opacity: number;\n  fontWeight: string;\n  fontFamily: string;\n}\n\nexport default class IconeModel extends BaseModel {\n  private texture: ITexture2D;\n\n  public getUninforms(): IModelUniform {\n    const { opacity } = this.layer.getLayerConfig() as IIconIFontStyleOptions;\n    return {\n      u_opacity: opacity || 1.0,\n      u_texture: this.texture,\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n    };\n  }\n\n  public initModels(): IModel[] {\n    this.initIconFontGlyphs();\n    this.registerBuiltinAttributes();\n    this.updateTexture();\n    this.iconService.on('imageUpdate', () => {\n      this.updateTexture();\n      this.layer.render(); // TODO 调用全局render\n    });\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'pointiconImage',\n        vertexShader: pointImageVert,\n        fragmentShader: pointImageFrag,\n        triangulation: PointImageTriangulation,\n        primitive: gl.POINTS,\n        depth: { enable: false },\n        blend: this.getBlend(),\n      }),\n    ];\n  }\n\n  protected registerBuiltinAttributes() {\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size } = feature;\n          return Array.isArray(size) ? [size[0]] : [size as number];\n        },\n      },\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { mapping } = this.fontService;\n          const { shape } = feature;\n          const icon = this.fontService.getGlyph(shape as string);\n          const { x, y } = mapping[icon];\n          return [x, y];\n        },\n      },\n    });\n  }\n\n  private updateTexture() {\n    const { createTexture2D } = this.rendererService;\n    const { canvas } = this.fontService;\n    this.texture = createTexture2D({\n      data: canvas,\n      mag: gl.LINEAR,\n      min: gl.LINEAR,\n      width: canvas.width,\n      height: canvas.height,\n    });\n  }\n\n  private initIconFontGlyphs() {\n    const {\n      fontWeight = 'normal',\n      fontFamily = 'sans-serif',\n    } = this.layer.getLayerConfig() as IIconIFontStyleOptions;\n    const data = this.layer.getEncodedData();\n    const characterSet: string[] = [];\n    data.forEach((item: IEncodeFeature) => {\n      let { shape = '' } = item;\n      shape = shape.toString();\n      const icon = this.fontService.getGlyph(shape);\n      if (characterSet.indexOf(icon) === -1) {\n        characterSet.push(icon);\n      }\n    });\n    this.fontService.setFontOptions({\n      characterSet,\n      fontWeight,\n      fontFamily,\n      fontSize: 48,\n    });\n  }\n}\n"],"file":"icon-font.js"}