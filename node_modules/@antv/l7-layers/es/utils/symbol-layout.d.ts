interface IPoint {
    x: number;
    y: number;
}
export declare type anchorType = 'right' | 'top-right' | 'left' | 'bottom-right' | 'left' | 'top-left' | 'bottom-left' | 'bottom' | 'bottom-right' | 'bottom-left' | 'top' | 'top-right' | 'top-left' | 'center';
export interface IGlyphQuad {
    tr: IPoint;
    tl: IPoint;
    bl: IPoint;
    br: IPoint;
    tex: {
        x: number;
        y: number;
        height: number;
        width: number;
        advance: number;
    };
    glyphOffset: [number, number];
}
/**
 * 计算文本中每个独立字符相对锚点的位置
 *
 * @param {string} text 原始文本
 * @param {*} glyphs mapping
 * @param {number} lineHeight 行高
 * @param {string} textAnchor 文本相对于锚点的位置
 * @param {string} textJustify 左右对齐
 * @param {number} spacing 字符间距
 * @param {[number, number]} translate 文本水平 & 垂直偏移量
 * @return {boolean|shaping} 每个字符相对于锚点的位置
 */
export declare function shapeText(text: string, glyphs: any, lineHeight: number, textAnchor: anchorType, textJustify: string, spacing: number, translate?: [number, number]): false | {
    positionedGlyphs: any[];
    top: number;
    bottom: number;
    left: number;
    right: number;
    lineCount: number;
    text: string;
};
export declare function getGlyphQuads(shaping: any, textOffset: [number, number] | undefined, alongLine: boolean): IGlyphQuad[];
export {};
