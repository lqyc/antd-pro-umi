{"version":3,"sources":["../../src/core/BaseLayer.ts"],"names":["layerIdCounter","BaseLayer","TYPES","ILogService","IGlobalConfigService","IShaderModuleService","config","id","name","type","visible","zIndex","minZoom","maxZoom","inited","layerModelNeedUpdate","pickedFeatureID","selectedFeatureID","styleNeedUpdate","dataState","dataSourceNeedUpdate","dataMappingNeedUpdate","filterNeedUpdate","featureScaleNeedUpdate","StyleAttrNeedUpdate","hooks","init","SyncBailHook","afterInit","beforeRender","beforeRenderData","SyncWaterfallHook","afterRender","SyncHook","beforePickingEncode","afterPickingEncode","beforeHighlight","afterHighlight","beforeSelect","afterSelect","beforeDestroy","afterDestroy","models","multiPassRenderer","plugins","sourceOption","layerModel","cameraService","coordinateService","iconService","fontService","pickingService","rendererService","layerService","interactionService","mapService","styleAttributeService","layerSource","postProcessingPassFactory","normalPassFactory","animateOptions","enable","container","encodedData","configSchema","currentPickId","rawConfig","needUpdateConfig","pendingStyleAttributes","scaleOptions","animateStartTime","aniamateStatus","sourceEvent","getLayerConfig","autoFit","fitBoundsOptions","fitBounds","emit","reRender","configService","configToUpdate","sceneId","get","SceneID","setLayerConfig","plugin","push","enableMultiPassRenderer","IIconService","IFontService","IRendererService","ILayerService","IInteractionService","IPickingService","IMapService","ICameraService","ICoordinateSystemService","IFactoryPostProcessingPass","IFactoryNormalPass","IStyleAttributeService","IMultiPassRenderer","setLayer","forEach","attributeName","attributeField","attributeValues","updateOptions","updateStyleAttribute","scale","field","splitValuesAndCallbackInAttribute","getAll","ILayerPlugin","apply","call","target","updateLayerConfig","getDefaultConfig","animateOption","startAnimate","values","options","rawAnimate","data","setData","on","passes","rest","pass","postProcessingPass","getPostProcessor","getPostProcessingPassByName","cfg","renderModels","activeOption","enableHighlight","color","highlightColor","x","y","pick","then","setTimeout","option","enableSelect","selectColor","blend","index","updateRenderOrder","zoom","getZoom","Infinity","source","getSource","extent","isValid","some","v","Math","abs","off","destroy","clearAllAttributes","removeAllListeners","model","clearModels","getLayerStyleAttributes","filter","attribute","needRescale","needRemapping","needRegenerateVertices","length","cluster","updateClusterData","baseLayerSchema","getConfigSchema","getLayerAttributeScale","ticks","items","map","item","value","invertExtent","range","triggerHover","box","cb","boxPickLayer","moduleName","vertexShader","fragmentShader","triangulation","shaderModuleService","registerModule","vs","fs","getModule","uniforms","createModel","createAttributesAndIndices","attributes","elements","BlendTypes","BlendType","normal","clock","getDelta","getElapsedTime","stopAnimate","isPick","eventNames","indexOf","isVisible","Error","buildModels","draw","getUninforms","renderLayers","valuesOrCallback","defaultValues","undefined","callback","EventEmitter"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { SyncBailHook, SyncHook, SyncWaterfallHook } from '@antv/async-hook';\nimport {\n  BlendType,\n  gl,\n  IActiveOption,\n  IAnimateOption,\n  ICameraService,\n  ICoordinateSystemService,\n  IDataState,\n  IEncodeFeature,\n  IFontService,\n  IGlobalConfigService,\n  IIconService,\n  IInteractionService,\n  ILayer,\n  ILayerConfig,\n  ILayerModel,\n  ILayerModelInitializationOptions,\n  ILayerPlugin,\n  ILayerService,\n  ILogService,\n  IMapService,\n  IModel,\n  IModelInitializationOptions,\n  IMultiPassRenderer,\n  IPass,\n  IPickingService,\n  IPostProcessingPass,\n  IRendererService,\n  IScale,\n  IScaleOptions,\n  IShaderModuleService,\n  ISourceCFG,\n  IStyleAttributeInitializationOptions,\n  IStyleAttributeService,\n  IStyleAttributeUpdateOptions,\n  lazyInject,\n  ScaleAttributeType,\n  ScaleTypeName,\n  ScaleTypes,\n  StyleAttributeField,\n  StyleAttributeOption,\n  TYPES,\n} from '@antv/l7-core';\nimport Source from '@antv/l7-source';\nimport { encodePickingColor } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\nimport { isFunction, isObject } from 'lodash';\n// @ts-ignore\nimport mergeJsonSchemas from 'merge-json-schemas';\nimport { normalizePasses } from '../plugins/MultiPassRendererPlugin';\nimport { BlendTypes } from '../utils/blend';\nimport baseLayerSchema from './schema';\n/**\n * 分配 layer id\n */\nlet layerIdCounter = 0;\n\nexport default class BaseLayer<ChildLayerStyleOptions = {}> extends EventEmitter\n  implements ILayer {\n  public id: string = `${layerIdCounter++}`;\n  public name: string = `${layerIdCounter}`;\n  public type: string;\n  public visible: boolean = true;\n  public zIndex: number = 0;\n  public minZoom: number;\n  public maxZoom: number;\n  public inited: boolean = false;\n  public layerModelNeedUpdate: boolean = false;\n  public pickedFeatureID: number | null = null;\n  public selectedFeatureID: number | null = null;\n  public styleNeedUpdate: boolean = false;\n\n  public dataState: IDataState = {\n    dataSourceNeedUpdate: false,\n    dataMappingNeedUpdate: false,\n    filterNeedUpdate: false,\n    featureScaleNeedUpdate: false,\n    StyleAttrNeedUpdate: false,\n  };\n  // 生命周期钩子\n  public hooks = {\n    init: new SyncBailHook(),\n    afterInit: new SyncBailHook(),\n    beforeRender: new SyncBailHook(),\n    beforeRenderData: new SyncWaterfallHook(),\n    afterRender: new SyncHook(),\n    beforePickingEncode: new SyncHook(),\n    afterPickingEncode: new SyncHook(),\n    beforeHighlight: new SyncHook(['pickedColor']),\n    afterHighlight: new SyncHook(),\n    beforeSelect: new SyncHook(['pickedColor']),\n    afterSelect: new SyncHook(),\n    beforeDestroy: new SyncHook(),\n    afterDestroy: new SyncHook(),\n  };\n\n  // 待渲染 model 列表\n  public models: IModel[] = [];\n\n  // 每个 Layer 都有一个\n  public multiPassRenderer: IMultiPassRenderer;\n\n  // 注入插件集\n  public plugins: ILayerPlugin[];\n\n  public sourceOption: {\n    data: any;\n    options?: ISourceCFG;\n  };\n\n  public layerModel: ILayerModel;\n\n  @lazyInject(TYPES.ILogService)\n  protected readonly logger: ILogService;\n\n  @lazyInject(TYPES.IGlobalConfigService)\n  protected readonly configService: IGlobalConfigService;\n\n  @lazyInject(TYPES.IShaderModuleService)\n  protected readonly shaderModuleService: IShaderModuleService;\n\n  protected cameraService: ICameraService;\n\n  protected coordinateService: ICoordinateSystemService;\n\n  protected iconService: IIconService;\n\n  protected fontService: IFontService;\n\n  protected pickingService: IPickingService;\n\n  protected rendererService: IRendererService;\n\n  protected layerService: ILayerService;\n\n  protected interactionService: IInteractionService;\n\n  protected mapService: IMapService;\n\n  protected styleAttributeService: IStyleAttributeService;\n\n  protected layerSource: Source;\n\n  protected postProcessingPassFactory: (\n    name: string,\n  ) => IPostProcessingPass<unknown>;\n  protected normalPassFactory: (name: string) => IPass<unknown>;\n\n  protected animateOptions: IAnimateOption = { enable: false };\n\n  /**\n   * 图层容器\n   */\n  private container: Container;\n\n  private encodedData: IEncodeFeature[];\n\n  private configSchema: object;\n\n  private currentPickId: number | null = null;\n\n  private rawConfig: Partial<ILayerConfig & ChildLayerStyleOptions>;\n\n  private needUpdateConfig: Partial<ILayerConfig & ChildLayerStyleOptions>;\n\n  /**\n   * 待更新样式属性，在初始化阶段完成注册\n   */\n  private pendingStyleAttributes: Array<{\n    attributeName: string;\n    attributeField: StyleAttributeField;\n    attributeValues?: StyleAttributeOption;\n    defaultName?: string;\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>;\n  }> = [];\n\n  private scaleOptions: IScaleOptions = {};\n\n  private animateStartTime: number;\n\n  private aniamateStatus: boolean = false;\n\n  // private pickingPassRender: IPass<'pixelPicking'>;\n\n  constructor(config: Partial<ILayerConfig & ChildLayerStyleOptions> = {}) {\n    super();\n    this.name = config.name || this.id;\n    this.zIndex = config.zIndex || 0;\n    this.rawConfig = config;\n  }\n\n  public getLayerConfig() {\n    return this.configService.getLayerConfig<ChildLayerStyleOptions>(this.id);\n  }\n\n  public updateLayerConfig(\n    configToUpdate: Partial<ILayerConfig | ChildLayerStyleOptions>,\n  ) {\n    if (!this.inited) {\n      this.needUpdateConfig = {\n        ...this.needUpdateConfig,\n        ...configToUpdate,\n      };\n    } else {\n      const sceneId = this.container.get<string>(TYPES.SceneID);\n      this.configService.setLayerConfig(sceneId, this.id, {\n        ...this.configService.getLayerConfig(this.id),\n        ...this.needUpdateConfig,\n        ...configToUpdate,\n      });\n      this.needUpdateConfig = {};\n    }\n  }\n\n  /**\n   * 注入图层容器，父容器为场景容器\n   * RootContainer 1\n   *  -> SceneContainer 1.*\n   *   -> LayerContainer 1.*\n   */\n  public setContainer(container: Container) {\n    this.container = container;\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public addPlugin(plugin: ILayerPlugin) {\n    // TODO: 控制插件注册顺序\n    // @example:\n    // pointLayer.addPlugin(new MyCustomPlugin(), {\n    //   before: 'L7BuiltinPlugin'\n    // });\n    this.plugins.push(plugin);\n    return this;\n  }\n\n  public init() {\n    // 设置配置项\n    const sceneId = this.container.get<string>(TYPES.SceneID);\n    // 初始化图层配置项\n    const { enableMultiPassRenderer = false } = this.rawConfig;\n    this.configService.setLayerConfig(sceneId, this.id, {\n      enableMultiPassRenderer,\n    });\n\n    // 全局容器服务\n\n    // 场景容器服务\n    this.iconService = this.container.get<IIconService>(TYPES.IIconService);\n    this.fontService = this.container.get<IFontService>(TYPES.IFontService);\n\n    this.rendererService = this.container.get<IRendererService>(\n      TYPES.IRendererService,\n    );\n    this.layerService = this.container.get<ILayerService>(TYPES.ILayerService);\n    this.interactionService = this.container.get<IInteractionService>(\n      TYPES.IInteractionService,\n    );\n\n    this.pickingService = this.container.get<IPickingService>(\n      TYPES.IPickingService,\n    );\n    this.mapService = this.container.get<IMapService>(TYPES.IMapService);\n    this.cameraService = this.container.get<ICameraService>(\n      TYPES.ICameraService,\n    );\n    this.coordinateService = this.container.get<ICoordinateSystemService>(\n      TYPES.ICoordinateSystemService,\n    );\n    this.postProcessingPassFactory = this.container.get(\n      TYPES.IFactoryPostProcessingPass,\n    );\n    this.normalPassFactory = this.container.get(TYPES.IFactoryNormalPass);\n\n    // 图层容器服务\n    this.styleAttributeService = this.container.get<IStyleAttributeService>(\n      TYPES.IStyleAttributeService,\n    );\n    this.multiPassRenderer = this.container.get<IMultiPassRenderer>(\n      TYPES.IMultiPassRenderer,\n    );\n    this.multiPassRenderer.setLayer(this);\n\n    // 完成样式服务注册完成前添加的属性\n    this.pendingStyleAttributes.forEach(\n      ({ attributeName, attributeField, attributeValues, updateOptions }) => {\n        this.styleAttributeService.updateStyleAttribute(\n          attributeName,\n          {\n            // @ts-ignore\n            scale: {\n              field: attributeField,\n              ...this.splitValuesAndCallbackInAttribute(\n                // @ts-ignore\n                attributeValues,\n                // @ts-ignore\n                this.getLayerConfig()[attributeName],\n              ),\n            },\n          },\n          // @ts-ignore\n          updateOptions,\n        );\n      },\n    );\n    this.pendingStyleAttributes = [];\n\n    // 获取插件集\n    this.plugins = this.container.getAll<ILayerPlugin>(TYPES.ILayerPlugin);\n    // 完成插件注册，传入场景和图层容器内的服务\n    for (const plugin of this.plugins) {\n      plugin.apply(this, {\n        rendererService: this.rendererService,\n        mapService: this.mapService,\n        styleAttributeService: this.styleAttributeService,\n        normalPassFactory: this.normalPassFactory,\n        postProcessingPassFactory: this.postProcessingPassFactory,\n      });\n    }\n\n    // 触发 init 生命周期插件\n    this.hooks.init.call();\n    // this.pickingPassRender = this.normalPassFactory('pixelPicking');\n    // this.pickingPassRender.init(this);\n    this.hooks.afterInit.call();\n\n    // 触发初始化完成事件;\n    this.emit('inited', {\n      target: this,\n      type: 'inited',\n    });\n    this.emit('add', {\n      target: this,\n      type: 'add',\n    });\n    return this;\n  }\n  /**\n   * Model初始化前需要更新Model样式\n   */\n  public prepareBuildModel() {\n    this.inited = true;\n    this.updateLayerConfig({\n      ...(this.getDefaultConfig() as object),\n      ...this.rawConfig,\n    });\n\n    // 启动动画\n    const { animateOption } = this.getLayerConfig();\n    if (animateOption?.enable) {\n      this.layerService.startAnimate();\n      this.aniamateStatus = true;\n    }\n  }\n  public color(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    // 设置 color、size、shape、style 时由于场景服务尚未完成（并没有调用 scene.addLayer），因此暂时加入待更新属性列表\n    this.updateStyleAttribute('color', field, values, updateOptions);\n\n    // this.pendingStyleAttributes.push({\n    //   attributeName: 'color',\n    //   attributeField: field,\n    //   attributeValues: values,\n    //   defaultName: 'colors',\n    //   updateOptions,\n    // });\n    return this;\n  }\n\n  public rotate(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('rotate', field, values, updateOptions);\n    return this;\n  }\n  public size(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('size', field, values, updateOptions);\n    return this;\n  }\n  // 对mapping后的数据过滤，scale保持不变\n  public filter(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('filter', field, values, updateOptions);\n    return this;\n  }\n\n  public shape(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('shape', field, values, updateOptions);\n    return this;\n  }\n  public label(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.pendingStyleAttributes.push({\n      attributeName: 'label',\n      attributeField: field,\n      attributeValues: values,\n      updateOptions,\n    });\n    return this;\n  }\n  public animate(options: IAnimateOption | boolean) {\n    let rawAnimate: Partial<IAnimateOption> = {};\n    if (isObject(options)) {\n      rawAnimate.enable = true;\n      rawAnimate = {\n        ...rawAnimate,\n        ...options,\n      };\n    } else {\n      rawAnimate.enable = options;\n    }\n    this.updateLayerConfig({\n      animateOption: rawAnimate,\n    });\n    // this.animateOptions = options;\n    return this;\n  }\n\n  public source(data: any, options?: ISourceCFG): ILayer {\n    this.sourceOption = {\n      data,\n      options,\n    };\n    return this;\n  }\n\n  public setData(data: any, options?: ISourceCFG) {\n    if (this.inited) {\n      this.layerSource.setData(data, options);\n    } else {\n      this.on('inited', () => {\n        this.layerSource.setData(data, options);\n      });\n    }\n\n    return this;\n  }\n  public style(\n    options: Partial<ChildLayerStyleOptions> & Partial<ILayerConfig>,\n  ): ILayer {\n    const { passes, ...rest } = options;\n\n    // passes 特殊处理\n    if (passes) {\n      normalizePasses(passes).forEach(\n        (pass: [string, { [key: string]: unknown }]) => {\n          const postProcessingPass = this.multiPassRenderer\n            .getPostProcessor()\n            .getPostProcessingPassByName(pass[0]);\n          if (postProcessingPass) {\n            postProcessingPass.updateOptions(pass[1]);\n          }\n        },\n      );\n    }\n\n    this.rawConfig = {\n      ...this.rawConfig,\n      ...rest,\n    };\n\n    if (this.container) {\n      this.updateLayerConfig(this.rawConfig);\n      this.styleNeedUpdate = true;\n    }\n    return this;\n  }\n  public scale(field: string | IScaleOptions, cfg: IScale) {\n    if (isObject(field)) {\n      this.scaleOptions = {\n        ...this.scaleOptions,\n        ...field,\n      };\n    } else {\n      this.scaleOptions[field] = cfg;\n    }\n    return this;\n  }\n  public render(): ILayer {\n    // if (\n    //   this.needPick() &&\n    //   this.multiPassRenderer &&\n    //   this.multiPassRenderer.getRenderFlag()\n    // ) {\n    //   this.multiPassRenderer.render();\n    // } else if (this.needPick() && this.multiPassRenderer) {\n    //   this.renderModels();\n    // } else {\n    //   this.renderModels();\n    // }\n    this.renderModels();\n    // this.multiPassRenderer.render();\n    // this.renderModels();\n    return this;\n  }\n\n  public active(options: IActiveOption) {\n    const activeOption: Partial<ILayerConfig> = {};\n    activeOption.enableHighlight = isObject(options) ? true : options;\n    if (isObject(options)) {\n      activeOption.enableHighlight = true;\n      if (options.color) {\n        activeOption.highlightColor = options.color;\n      }\n    } else {\n      activeOption.enableHighlight = !!options;\n    }\n    this.updateLayerConfig(activeOption);\n    return this;\n  }\n  public setActive(\n    id: number | { x: number; y: number },\n    options?: IActiveOption,\n  ): void {\n    if (isObject(id)) {\n      const { x = 0, y = 0 } = id;\n      this.updateLayerConfig({\n        highlightColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().highlightColor,\n      });\n      this.pick({ x, y });\n    } else {\n      this.updateLayerConfig({\n        pickedFeatureID: id,\n        highlightColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().highlightColor,\n      });\n      this.hooks.beforeSelect\n        .call(encodePickingColor(id as number) as number[])\n        // @ts-ignore\n        .then(() => {\n          setTimeout(() => {\n            this.reRender();\n          }, 1);\n        });\n    }\n  }\n\n  public select(option: IActiveOption | boolean): ILayer {\n    const activeOption: Partial<ILayerConfig> = {};\n    activeOption.enableSelect = isObject(option) ? true : option;\n    if (isObject(option)) {\n      activeOption.enableSelect = true;\n      if (option.color) {\n        activeOption.selectColor = option.color;\n      }\n    } else {\n      activeOption.enableSelect = !!option;\n    }\n    this.updateLayerConfig(activeOption);\n    return this;\n  }\n\n  public setSelect(\n    id: number | { x: number; y: number },\n    options?: IActiveOption,\n  ): void {\n    if (isObject(id)) {\n      const { x = 0, y = 0 } = id;\n      this.updateLayerConfig({\n        selectColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().selectColor,\n      });\n      this.pick({ x, y });\n    } else {\n      this.updateLayerConfig({\n        pickedFeatureID: id,\n        selectColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().selectColor,\n      });\n      this.hooks.beforeSelect\n        .call(encodePickingColor(id as number) as number[])\n        // @ts-ignore\n        .then(() => {\n          setTimeout(() => {\n            this.reRender();\n          }, 1);\n        });\n    }\n  }\n  public setBlend(type: keyof typeof BlendType): void {\n    this.updateLayerConfig({\n      blend: type,\n    });\n    this.layerModelNeedUpdate = true;\n    this.reRender();\n  }\n  public show(): ILayer {\n    this.updateLayerConfig({\n      visible: true,\n    });\n    this.reRender();\n    return this;\n  }\n\n  public hide(): ILayer {\n    this.updateLayerConfig({\n      visible: false,\n    });\n    this.reRender();\n    return this;\n  }\n  public setIndex(index: number): ILayer {\n    this.zIndex = index;\n    this.layerService.updateRenderOrder();\n    return this;\n  }\n\n  public setCurrentPickId(id: number) {\n    this.currentPickId = id;\n  }\n\n  public getCurrentPickId(): number | null {\n    return this.currentPickId;\n  }\n\n  public setCurrentSelectedId(id: number) {\n    this.selectedFeatureID = id;\n  }\n\n  public getCurrentSelectedId(): number | null {\n    return this.selectedFeatureID;\n  }\n  public isVisible(): boolean {\n    const zoom = this.mapService.getZoom();\n    const {\n      visible,\n      minZoom = -Infinity,\n      maxZoom = Infinity,\n    } = this.getLayerConfig();\n    return !!visible && zoom >= minZoom && zoom <= maxZoom;\n  }\n\n  public setMinZoom(minZoom: number): ILayer {\n    this.updateLayerConfig({\n      minZoom,\n    });\n    return this;\n  }\n\n  public getMinZoom(): number {\n    const { minZoom } = this.getLayerConfig();\n    return minZoom as number;\n  }\n\n  public getMaxZoom(): number {\n    const { maxZoom } = this.getLayerConfig();\n    return maxZoom as number;\n  }\n\n  public get(name: string) {\n    const cfg = this.getLayerConfig();\n    // @ts-ignore\n    return cfg[name];\n  }\n\n  public setMaxZoom(maxZoom: number): ILayer {\n    this.updateLayerConfig({\n      maxZoom,\n    });\n    return this;\n  }\n  /**\n   * zoom to layer Bounds\n   */\n  public fitBounds(fitBoundsOptions?: unknown): ILayer {\n    if (!this.inited) {\n      this.updateLayerConfig({\n        autoFit: true,\n      });\n      return this;\n    }\n    const source = this.getSource();\n    const extent = source.extent;\n    const isValid = extent.some((v) => Math.abs(v) === Infinity);\n    if (isValid) {\n      return this;\n    }\n    this.mapService.fitBounds(\n      [\n        [extent[0], extent[1]],\n        [extent[2], extent[3]],\n      ],\n      fitBoundsOptions,\n    );\n    return this;\n  }\n\n  public destroy() {\n    this.hooks.beforeDestroy.call();\n    // 清除sources事件\n    this.layerSource.off('update', this.sourceEvent);\n\n    this.multiPassRenderer.destroy();\n\n    // 清除所有属性以及关联的 vao\n    this.styleAttributeService.clearAllAttributes();\n    // 销毁所有 model\n    // this.models.forEach((model) => model.destroy());\n\n    this.hooks.afterDestroy.call();\n\n    this.emit('remove', {\n      target: this,\n      type: 'remove',\n    });\n\n    this.removeAllListeners();\n\n    // 解绑图层容器中的服务\n    // this.container.unbind(TYPES.IStyleAttributeService);\n  }\n  public clear() {\n    this.styleAttributeService.clearAllAttributes();\n    // 销毁所有 model\n  }\n  public clearModels() {\n    this.models.forEach((model) => model.destroy());\n    this.layerModel.clearModels();\n  }\n\n  public isDirty() {\n    return !!(\n      this.styleAttributeService.getLayerStyleAttributes() || []\n    ).filter(\n      (attribute) =>\n        attribute.needRescale ||\n        attribute.needRemapping ||\n        attribute.needRegenerateVertices,\n    ).length;\n  }\n\n  public setSource(source: Source) {\n    this.layerSource = source;\n    const zoom = this.mapService.getZoom();\n    if (this.layerSource.cluster) {\n      this.layerSource.updateClusterData(zoom);\n    }\n    // source 可能会复用，会在其它layer被修改\n    this.layerSource.on('update', this.sourceEvent);\n  }\n  public getSource() {\n    return this.layerSource;\n  }\n\n  public getScaleOptions() {\n    return this.scaleOptions;\n  }\n\n  public setEncodedData(encodedData: IEncodeFeature[]) {\n    this.encodedData = encodedData;\n  }\n  public getEncodedData() {\n    return this.encodedData;\n  }\n\n  public getConfigSchemaForValidation() {\n    if (!this.configSchema) {\n      // 相比 allOf, merge 有一些优势\n      // @see https://github.com/goodeggs/merge-json-schemas\n      this.configSchema = mergeJsonSchemas([\n        baseLayerSchema,\n        this.getConfigSchema(),\n      ]);\n    }\n    return this.configSchema;\n  }\n  public getLegendItems(name: string): any {\n    const scale = this.styleAttributeService.getLayerAttributeScale(name);\n    if (scale) {\n      if (scale.ticks) {\n        const items = scale.ticks().map((item: any) => {\n          return {\n            value: item,\n            [name]: scale(item),\n          };\n        });\n        return items;\n      } else if (scale.invertExtent) {\n        const items = scale.range().map((item: any) => {\n          return {\n            value: scale.invertExtent(item),\n            [name]: item,\n          };\n        });\n        return items;\n      }\n    } else {\n      return [];\n    }\n  }\n\n  public pick({ x, y }: { x: number; y: number }) {\n    this.interactionService.triggerHover({ x, y });\n  }\n\n  public boxSelect(\n    box: [number, number, number, number],\n    cb: (...args: any[]) => void,\n  ) {\n    this.pickingService.boxPickLayer(this, box, cb);\n  }\n\n  public buildLayerModel(\n    options: ILayerModelInitializationOptions &\n      Partial<IModelInitializationOptions>,\n  ): IModel {\n    const {\n      moduleName,\n      vertexShader,\n      fragmentShader,\n      triangulation,\n      ...rest\n    } = options;\n    this.shaderModuleService.registerModule(moduleName, {\n      vs: vertexShader,\n      fs: fragmentShader,\n    });\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule(moduleName);\n    const { createModel } = this.rendererService;\n    const {\n      attributes,\n      elements,\n    } = this.styleAttributeService.createAttributesAndIndices(\n      this.encodedData,\n      triangulation,\n    );\n    return createModel({\n      attributes,\n      uniforms,\n      fs,\n      vs,\n      elements,\n      blend: BlendTypes[BlendType.normal],\n      ...rest,\n    });\n  }\n\n  public getTime() {\n    return this.layerService.clock.getDelta();\n  }\n  public setAnimateStartTime() {\n    this.animateStartTime = this.layerService.clock.getElapsedTime();\n  }\n  public stopAnimate() {\n    if (this.aniamateStatus) {\n      this.layerService.stopAnimate();\n      this.aniamateStatus = false;\n      this.updateLayerConfig({\n        animateOption: {\n          enable: false,\n        },\n      });\n    }\n  }\n  public getLayerAnimateTime(): number {\n    return this.layerService.clock.getElapsedTime() - this.animateStartTime;\n  }\n\n  public needPick(type: string): boolean {\n    const {\n      enableHighlight = true,\n      enableSelect = true,\n    } = this.getLayerConfig();\n    // 判断layer是否监听事件;\n    let isPick =\n      this.eventNames().indexOf(type) !== -1 ||\n      this.eventNames().indexOf('un' + type) !== -1;\n    if ((type === 'click' || type === 'dblclick') && enableSelect) {\n      isPick = true;\n    }\n    if (\n      type === 'mousemove' &&\n      (enableHighlight ||\n        this.eventNames().indexOf('mouseenter') !== -1 ||\n        this.eventNames().indexOf('unmousemove') !== -1 ||\n        this.eventNames().indexOf('mouseout') !== -1)\n    ) {\n      isPick = true;\n    }\n    return this.isVisible() && isPick;\n  }\n\n  public buildModels() {\n    throw new Error('Method not implemented.');\n  }\n  public rebuildModels() {\n    throw new Error('Method not implemented.');\n  }\n\n  public renderModels() {\n    if (this.layerModelNeedUpdate && this.layerModel) {\n      this.models = this.layerModel.buildModels();\n      this.hooks.beforeRender.call();\n      this.layerModelNeedUpdate = false;\n    }\n    this.models.forEach((model) => {\n      model.draw({\n        uniforms: this.layerModel.getUninforms(),\n      });\n    });\n    return this;\n  }\n\n  protected getConfigSchema() {\n    throw new Error('Method not implemented.');\n  }\n\n  protected getModelType(): unknown {\n    throw new Error('Method not implemented.');\n  }\n  protected getDefaultConfig() {\n    return {};\n  }\n\n  private sourceEvent = () => {\n    this.dataState.dataSourceNeedUpdate = true;\n    const { autoFit, fitBoundsOptions } = this.getLayerConfig();\n    if (autoFit) {\n      this.fitBounds(fitBoundsOptions);\n    }\n\n    this.emit('dataUpdate');\n    this.reRender();\n  };\n\n  private reRender() {\n    if (this.inited) {\n      this.layerService.renderLayers();\n    }\n  }\n  private splitValuesAndCallbackInAttribute(\n    valuesOrCallback?: unknown[],\n    defaultValues?: unknown[],\n  ) {\n    return {\n      values: isFunction(valuesOrCallback)\n        ? undefined\n        : valuesOrCallback || defaultValues,\n      callback: isFunction(valuesOrCallback) ? valuesOrCallback : undefined,\n    };\n  }\n\n  private updateStyleAttribute(\n    type: string,\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    if (!this.inited) {\n      this.pendingStyleAttributes.push({\n        attributeName: type,\n        attributeField: field,\n        attributeValues: values,\n        updateOptions,\n      });\n    } else {\n      this.styleAttributeService.updateStyleAttribute(\n        type,\n        {\n          // @ts-ignore\n          scale: {\n            field,\n            ...this.splitValuesAndCallbackInAttribute(\n              // @ts-ignore\n              values,\n              // @ts-ignore\n              this.getLayerConfig()[field],\n            ),\n          },\n        },\n        // @ts-ignore\n        updateOptions,\n      );\n    }\n  }\n}\n"],"file":"BaseLayer.js"}