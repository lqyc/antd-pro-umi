export function bisect(a: any, x: any, lo: any, hi: any): any;
export function bisectRight(a: any, x: any, lo: any, hi: any): any;
export function bisectLeft(a: any, x: any, lo: any, hi: any): any;
export function ascending(a: any, b: any): number;
export function bisector(compare: any): {
    left: (a: any, x: any, lo: any, hi: any) => any;
    right: (a: any, x: any, lo: any, hi: any) => any;
};
export function cross(values0: any, values1: any, reduce: any): any[];
export function descending(a: any, b: any): number;
export function deviation(array: any, f: any): number;
export function extent(values: any, valueof: any): any[];
export function histogram(): {
    (data: any): any[];
    value(_: any, ...args: any[]): (x: any) => any;
    domain(_: any, ...args: any[]): (values: any, valueof: any) => any[];
    thresholds(_: any, ...args: any[]): ((values: any) => number) | any;
};
export function thresholdFreedmanDiaconis(values: any, min: any, max: any): number;
export function thresholdScott(values: any, min: any, max: any): number;
export function thresholdSturges(values: any): number;
export function max(values: any, valueof: any): any;
export function mean(values: any, valueof: any): number;
export function median(values: any, valueof: any): number;
export function merge(arrays: any): any[];
export function min(values: any, valueof: any): any;
export function pairs(array: any, f: any): any[];
export function permute(array: any, indexes: any): any[];
export function quantile(values: any, p: any, valueof: any): number;
export function range(start: any, stop: any, step: any, ...args: any[]): any[];
export function scan(values: any, compare: any): number;
export function shuffle(array: any, i0: any, i1: any): any;
export function sum(values: any, valueof: any): number;
export function ticks(start: any, stop: any, count: any): any[];
export function tickIncrement(start: any, stop: any, count: any): number;
export function tickStep(start: any, stop: any, count: any): number;
export function transpose(matrix: any): any[];
export function variance(values: any, valueof: any): number;
export function zip(...args: any[]): any[];
export var __esModule: boolean;
