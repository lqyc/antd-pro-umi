{"version":3,"sources":["../src/markerlayer.ts"],"names":["MarkerLayer","option","markers","markerLayerOption","clusterIndex","points","clusterMarkers","mapsService","scene","zoom","bbox","getDefault","clusterOption","cluster","radius","maxZoom","minZoom","style","className","get","TYPES","IMapService","initCluster","update","on","addMarkers","marker","addPoint","length","push","indexOf","markerIndex","splice","getMarkers","forEach","addTo","remove","clusterMarker","off","clear","removeAllListeners","id","getLnglat","lng","lat","feature","geometry","type","coordinates","properties","getExtData","marker_id","Supercluster","load","viewBounds","viewBBox","concat","clusterPoint","getClusters","field","method","cluster_id","clusterData","getLeaves","columnData","map","item","data","column","Satistics","getColumn","stat","getSatByColumn","fieldName","toFixed","clusterId","limit","Infinity","offset","element","generateElement","bind","Marker","setLnglat","getZoom","getBounds","Math","abs","floor","getClusterMarker","el","DOM","create","label","span","point_count","text","textContent","EventEmitter"],"mappings":"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","sourcesContent":["import { IMapService, IMarker, TYPES } from '@antv/l7-core';\nimport {\n  bindAll,\n  boundsContains,\n  DOM,\n  IBounds,\n  padBounds,\n  Satistics,\n} from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\nimport { merge } from 'lodash';\n// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport Supercluster from 'supercluster/dist/supercluster';\nimport Marker from './marker';\ntype CallBack = (...args: any[]) => any;\ninterface IMarkerStyleOption {\n  element?: CallBack;\n  style: { [key: string]: any } | CallBack;\n  className: string;\n  field?: string;\n  method?: 'sum' | 'max' | 'min' | 'mean';\n  radius: number;\n  maxZoom: number;\n  minZoom: number;\n  zoom: number;\n}\n\ninterface IMarkerLayerOption {\n  cluster: boolean;\n  clusterOption: Partial<IMarkerStyleOption>;\n}\n\ninterface IPointFeature {\n  geometry: {\n    type: 'Point';\n    coordinates: [number, number];\n  };\n  properties: any;\n}\nexport default class MarkerLayer extends EventEmitter {\n  private markers: IMarker[] = [];\n  private markerLayerOption: IMarkerLayerOption;\n  private clusterIndex: Supercluster;\n  private points: IPointFeature[] = [];\n  private clusterMarkers: IMarker[] = [];\n  private mapsService: IMapService<unknown>;\n  private scene: Container;\n  private zoom: number;\n  private bbox: IBounds;\n\n  constructor(option?: Partial<IMarkerLayerOption>) {\n    super();\n    this.markerLayerOption = merge(this.getDefault(), option);\n    bindAll(['update'], this);\n    this.zoom = this.markerLayerOption.clusterOption?.zoom || -99;\n  }\n  public getDefault() {\n    return {\n      cluster: false,\n      clusterOption: {\n        radius: 80,\n        maxZoom: 20,\n        minZoom: 0,\n        zoom: -99,\n        style: {},\n        className: '',\n      },\n    };\n  }\n  public addTo(scene: Container) {\n    // this.remove();\n    this.scene = scene;\n    this.mapsService = scene.get<IMapService>(TYPES.IMapService);\n    if (this.markerLayerOption.cluster) {\n      this.initCluster();\n      this.update();\n      // 地图视野变化时，重新计算视野内的聚合点。\n      this.mapsService.on('camerachange', this.update);\n    }\n    this.addMarkers();\n    return this;\n  }\n  public addMarker(marker: IMarker) {\n    const cluster = this.markerLayerOption.cluster;\n    if (cluster) {\n      this.addPoint(marker, this.markers.length);\n    }\n    this.markers.push(marker);\n  }\n\n  public removeMarker(marker: IMarker) {\n    this.markers.indexOf(marker);\n    const markerIndex = this.markers.indexOf(marker);\n    if (markerIndex > -1) {\n      this.markers.splice(markerIndex, 1);\n    }\n  }\n\n  public getMarkers() {\n    const cluster = this.markerLayerOption.cluster;\n    return cluster ? this.clusterMarkers : this.markers;\n  }\n\n  public addMarkers() {\n    this.getMarkers().forEach((marker: IMarker) => {\n      marker.addTo(this.scene);\n    });\n  }\n  public clear() {\n    this.markers.forEach((marker: IMarker) => {\n      marker.remove();\n    });\n    this.clusterMarkers.forEach((clusterMarker: IMarker) => {\n      clusterMarker.remove();\n    });\n    this.mapsService.off('camerachange', this.update);\n    this.markers = [];\n    this.clusterMarkers = [];\n  }\n\n  public destroy() {\n    this.clear();\n    this.removeAllListeners();\n  }\n\n  private addPoint(marker: IMarker, id: number) {\n    const { lng, lat } = marker.getLnglat();\n    const feature: IPointFeature = {\n      geometry: {\n        type: 'Point',\n        coordinates: [lng, lat],\n      },\n      properties: {\n        ...marker.getExtData(),\n        marker_id: id,\n      },\n    };\n    this.points.push(feature);\n  }\n\n  private initCluster() {\n    if (!this.markerLayerOption.cluster) {\n      return;\n    }\n    const { radius, minZoom = 0, maxZoom } = this.markerLayerOption\n      .clusterOption as IMarkerStyleOption;\n    this.clusterIndex = new Supercluster({\n      radius,\n      minZoom,\n      maxZoom,\n    });\n    // @ts-ignore\n    this.clusterIndex.load(this.points);\n  }\n\n  private getClusterMarker(viewBounds: IBounds, zoom: number) {\n    const viewBBox = viewBounds[0].concat(viewBounds[1]);\n    const clusterPoint = this.clusterIndex.getClusters(viewBBox, zoom);\n    this.clusterMarkers.forEach((marker: IMarker) => {\n      marker.remove();\n    });\n    this.clusterMarkers = [];\n    clusterPoint.forEach((feature: any) => {\n      const { field, method } = this.markerLayerOption.clusterOption;\n      // 处理聚合数据\n      if (feature.properties && feature.properties?.cluster_id) {\n        const clusterData = this.getLeaves(feature.properties?.cluster_id);\n        feature.properties.clusterData = clusterData;\n        if (field && method) {\n          const columnData = clusterData?.map((item: any) => {\n            const data = {\n              [field]: item.properties[field],\n            };\n            return data;\n          });\n          const column = Satistics.getColumn(columnData as any, field);\n          const stat = Satistics.getSatByColumn(method, column);\n          const fieldName = 'point_' + method;\n          feature.properties[fieldName] = stat.toFixed(2);\n        }\n      }\n      const marker = this.clusterMarker(feature);\n      this.clusterMarkers.push(marker);\n      marker.addTo(this.scene);\n    });\n  }\n  private getLeaves(\n    clusterId: number,\n    limit: number = Infinity,\n    offset: number = 0,\n  ) {\n    if (!clusterId) {\n      return null;\n    }\n    return this.clusterIndex.getLeaves(clusterId, limit, offset);\n  }\n  private clusterMarker(feature: any) {\n    const clusterOption = this.markerLayerOption.clusterOption;\n\n    const {\n      element = this.generateElement.bind(this),\n    } = clusterOption as IMarkerStyleOption;\n    const marker = new Marker({\n      element: element(feature),\n    }).setLnglat({\n      lng: feature.geometry.coordinates[0],\n      lat: feature.geometry.coordinates[1],\n    });\n    return marker;\n  }\n  private normalMarker(feature: any) {\n    const marker_id = feature.properties.marker_id;\n    return this.markers[marker_id];\n  }\n\n  private update() {\n    const zoom = this.mapsService.getZoom();\n    const bbox = this.mapsService.getBounds();\n    if (\n      !this.bbox ||\n      Math.abs(zoom - this.zoom) >= 1 ||\n      !boundsContains(this.bbox, bbox)\n    ) {\n      this.bbox = padBounds(bbox, 0.5);\n      this.zoom = Math.floor(zoom);\n      this.getClusterMarker(this.bbox, this.zoom);\n    }\n  }\n\n  private generateElement(feature: any) {\n    const el = DOM.create('div', 'l7-marker-cluster');\n    const label = DOM.create('div', '', el);\n    const span = DOM.create('span', '', label);\n    const { field, method } = this.markerLayerOption.clusterOption;\n    feature.properties.point_count = feature.properties.point_count || 1;\n\n    const text =\n      field && method\n        ? feature.properties['point_' + method] || feature.properties[field]\n        : feature.properties.point_count;\n    span.textContent = text;\n    return el;\n  }\n}\n"],"file":"markerlayer.js"}