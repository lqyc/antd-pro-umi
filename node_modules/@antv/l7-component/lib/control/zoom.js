"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _l7Utils = require("@antv/l7-utils");

var _BaseControl = _interopRequireWildcard(require("./BaseControl"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var Zoom = function (_Control) {
  (0, _inherits2.default)(Zoom, _Control);

  var _super = _createSuper(Zoom);

  function Zoom(cfg) {
    var _this;

    (0, _classCallCheck2.default)(this, Zoom);
    _this = _super.call(this, cfg);
    _this.disabled = void 0;
    _this.zoomInButton = void 0;
    _this.zoomOutButton = void 0;
    (0, _l7Utils.bindAll)(['updateDisabled', 'zoomIn', 'zoomOut'], (0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(Zoom, [{
    key: "getDefault",
    value: function getDefault() {
      return {
        position: _BaseControl.PositionType.TOPLEFT,
        zoomInText: '+',
        zoomInTitle: 'Zoom in',
        zoomOutText: '&#x2212;',
        zoomOutTitle: 'Zoom out',
        name: 'zoom'
      };
    }
  }, {
    key: "onAdd",
    value: function onAdd() {
      var zoomName = 'l7-control-zoom';

      var container = _l7Utils.DOM.create('div', zoomName + ' l7-bar');

      this.zoomInButton = this.createButton(this.controlOption.zoomInText, this.controlOption.zoomInTitle, zoomName + '-in', container, this.zoomIn);
      this.zoomOutButton = this.createButton(this.controlOption.zoomOutText, this.controlOption.zoomOutTitle, zoomName + '-out', container, this.zoomOut);
      this.mapsService.on('zoomend', this.updateDisabled);
      this.mapsService.on('zoomchange', this.updateDisabled);
      this.updateDisabled();
      return container;
    }
  }, {
    key: "onRemove",
    value: function onRemove() {
      this.mapsService.off('zoomend', this.updateDisabled);
      this.mapsService.off('zoomchange', this.updateDisabled);
    }
  }, {
    key: "disable",
    value: function disable() {
      this.disabled = true;
      this.updateDisabled();
      return this;
    }
  }, {
    key: "enable",
    value: function enable() {
      this.disabled = false;
      this.updateDisabled();
      return this;
    }
  }, {
    key: "zoomIn",
    value: function zoomIn() {
      if (!this.disabled && this.mapsService.getZoom() < this.mapsService.getMaxZoom()) {
        this.mapsService.zoomIn();
      }
    }
  }, {
    key: "zoomOut",
    value: function zoomOut() {
      if (!this.disabled && this.mapsService.getZoom() > this.mapsService.getMinZoom()) {
        this.mapsService.zoomOut();
      }
    }
  }, {
    key: "createButton",
    value: function createButton(html, tile, className, container, fn) {
      var link = _l7Utils.DOM.create('a', className, container);

      link.innerHTML = html;
      link.title = tile;
      link.href = 'javascript:void(0)';
      link.addEventListener('click', fn);
      return link;
    }
  }, {
    key: "updateDisabled",
    value: function updateDisabled() {
      var mapsService = this.mapsService;
      var className = 'l7-disabled';

      _l7Utils.DOM.removeClass(this.zoomInButton, className);

      _l7Utils.DOM.removeClass(this.zoomOutButton, className);

      if (this.disabled || mapsService.getZoom() <= mapsService.getMinZoom()) {
        _l7Utils.DOM.addClass(this.zoomOutButton, className);
      }

      if (this.disabled || mapsService.getZoom() >= mapsService.getMaxZoom()) {
        _l7Utils.DOM.addClass(this.zoomInButton, className);
      }
    }
  }]);
  return Zoom;
}(_BaseControl.default);

exports.default = Zoom;
//# sourceMappingURL=zoom.js.map