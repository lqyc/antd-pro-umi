{"version":3,"sources":["../../src/control/BaseControl.ts"],"names":["TYPES","DOM","EventEmitter","PositionType","controlId","Control","cfg","controlOption","container","sceneContainer","mapsService","renderService","layerService","controlService","isShow","getDefault","position","TOPRIGHT","name","removeControl","addControl","get","IMapService","IRendererService","ILayerService","IControlService","onAdd","pos","corner","controlCorners","addClass","indexOf","insertBefore","firstChild","appendChild","Error","removeClass","remove","onRemove","e","screenX","screenY","getContainer","focus"],"mappings":"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","sourcesContent":["import {\n  IControlOption,\n  IControlService,\n  ILayerService,\n  IMapService,\n  IRendererService,\n  PositionName,\n  TYPES,\n} from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\n\nexport enum PositionType {\n  'TOPRIGHT' = 'topright',\n  'TOPLEFT' = 'topleft',\n  'BOTTOMRIGHT' = 'bottomright',\n  'BOTTOMLEFT' = 'bottomleft',\n}\n\nlet controlId = 0;\nexport default class Control extends EventEmitter {\n  public controlOption: IControlOption;\n  protected container: HTMLElement;\n  protected sceneContainer: Container;\n  protected mapsService: IMapService;\n  protected renderService: IRendererService;\n  protected layerService: ILayerService;\n  protected controlService: IControlService;\n\n  private isShow: boolean;\n\n  constructor(cfg?: Partial<IControlOption>) {\n    super();\n    this.controlOption = {\n      ...this.getDefault(),\n      ...(cfg || {}),\n    };\n  }\n\n  public getDefault() {\n    return {\n      position: PositionType.TOPRIGHT,\n      name: `${controlId++}`,\n    };\n  }\n  public setPosition(position: PositionName) {\n    // 考虑组件的自动布局，需要销毁重建\n    const controlService = this.controlService;\n    if (controlService) {\n      controlService.removeControl(this);\n    }\n    this.controlOption.position = position;\n    if (controlService) {\n      controlService.addControl(this, this.sceneContainer);\n    }\n    return this;\n  }\n  public addTo(sceneContainer: Container) {\n    this.mapsService = sceneContainer.get<IMapService>(TYPES.IMapService);\n    this.renderService = sceneContainer.get<IRendererService>(\n      TYPES.IRendererService,\n    );\n    this.layerService = sceneContainer.get<ILayerService>(TYPES.ILayerService);\n    this.controlService = sceneContainer.get<IControlService>(\n      TYPES.IControlService,\n    );\n    this.sceneContainer = sceneContainer;\n    this.isShow = true;\n    this.container = this.onAdd();\n    const container = this.container;\n    const pos = this.controlOption.position;\n    const corner = this.controlService.controlCorners[pos];\n    DOM.addClass(container, 'l7-control');\n\n    if (pos.indexOf('bottom') !== -1) {\n      corner.insertBefore(container, corner.firstChild);\n    } else {\n      corner.appendChild(container);\n    }\n    return this;\n  }\n  public onAdd(): HTMLElement {\n    throw new Error('Method not implemented.');\n  }\n\n  public onRemove(): void {\n    throw new Error('Method not implemented.');\n  }\n  public hide() {\n    const container = this.container;\n    DOM.addClass(container, 'l7-control-hide');\n    this.isShow = false;\n  }\n  public show() {\n    const container = this.container;\n    DOM.removeClass(container, 'l7-control-hide');\n    this.isShow = true;\n  }\n  public remove() {\n    if (!this.mapsService) {\n      return this;\n    }\n    DOM.remove(this.container);\n    this.onRemove();\n  }\n  public _refocusOnMap(e: MouseEvent) {\n    // if map exists and event is not a keyboard event\n    if (this.mapsService && e && e.screenX > 0 && e.screenY > 0) {\n      const container = this.mapsService.getContainer();\n      if (container !== null) {\n        container.focus();\n      }\n    }\n  }\n}\n"],"file":"BaseControl.js"}