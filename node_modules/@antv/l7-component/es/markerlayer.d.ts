import { IMarker } from '@antv/l7-core';
import { EventEmitter } from 'eventemitter3';
import { Container } from 'inversify';
declare type CallBack = (...args: any[]) => any;
interface IMarkerStyleOption {
    element?: CallBack;
    style: {
        [key: string]: any;
    } | CallBack;
    className: string;
    field?: string;
    method?: 'sum' | 'max' | 'min' | 'mean';
    radius: number;
    maxZoom: number;
    minZoom: number;
    zoom: number;
}
interface IMarkerLayerOption {
    cluster: boolean;
    clusterOption: Partial<IMarkerStyleOption>;
}
export default class MarkerLayer extends EventEmitter {
    private markers;
    private markerLayerOption;
    private clusterIndex;
    private points;
    private clusterMarkers;
    private mapsService;
    private scene;
    private zoom;
    private bbox;
    constructor(option?: Partial<IMarkerLayerOption>);
    getDefault(): {
        cluster: boolean;
        clusterOption: {
            radius: number;
            maxZoom: number;
            minZoom: number;
            zoom: number;
            style: {};
            className: string;
        };
    };
    addTo(scene: Container): this;
    addMarker(marker: IMarker): void;
    removeMarker(marker: IMarker): void;
    getMarkers(): IMarker[];
    addMarkers(): void;
    clear(): void;
    destroy(): void;
    private addPoint;
    private initCluster;
    private getClusterMarker;
    private getLeaves;
    private clusterMarker;
    private normalMarker;
    private update;
    private generateElement;
}
export {};
