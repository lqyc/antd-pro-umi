import LngLat from '../../geo/lng_lat';
import Point from '../../geo/point';
import { Map } from '../../map';
import { Event } from './event';
export default class MapTouchEvent extends Event {
    /**
     * The event type.
     */
    type: 'touchstart' | 'touchend' | 'touchcancel';
    /**
     * The `Map` object that fired the event.
     */
    target: Map;
    /**
     * The DOM event which caused the map event.
     */
    originalEvent: TouchEvent;
    /**
     * The geographic location on the map of the center of the touch event points.
     */
    lngLat: LngLat;
    /**
     * The pixel coordinates of the center of the touch event points, relative to the map and measured from the top left
     * corner.
     */
    point: Point;
    /**
     * The array of pixel coordinates corresponding to a
     * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.
     */
    points: Point[];
    /**
     * The geographical locations on the map corresponding to a
     * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.
     */
    lngLats: LngLat[];
    /**
     * `true` if `preventDefault` has been called.
     * @private
     */
    defaultPrevented: boolean;
    /**
     * @private
     */
    constructor(type: string, map: Map, originalEvent: TouchEvent);
    /**
     * Prevents subsequent default processing of the event by the map.
     *
     * Calling this method will prevent the following default map behaviors:
     *
     *   * On `touchstart` events, the behavior of {@link DragPanHandler}
     *   * On `touchstart` events, the behavior of {@link TouchZoomRotateHandler}
     *
     */
    private preventDefault;
}
