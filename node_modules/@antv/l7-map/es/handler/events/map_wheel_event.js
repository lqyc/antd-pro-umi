import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import { Event } from './event';

var MapWheelEvent = function (_Event) {
  _inherits(MapWheelEvent, _Event);

  var _super = _createSuper(MapWheelEvent);

  function MapWheelEvent(type, map, originalEvent) {
    var _this;

    _classCallCheck(this, MapWheelEvent);

    _this = _super.call(this, type, {
      originalEvent: originalEvent
    });
    _this.type = void 0;
    _this.originalEvent = void 0;
    _this.defaultPrevented = void 0;
    _this.target = void 0;
    _this.defaultPrevented = false;
    return _this;
  }

  _createClass(MapWheelEvent, [{
    key: "preventDefault",
    value: function preventDefault() {
      this.defaultPrevented = true;
    }
  }]);

  return MapWheelEvent;
}(Event);

export { MapWheelEvent as default };
//# sourceMappingURL=map_wheel_event.js.map