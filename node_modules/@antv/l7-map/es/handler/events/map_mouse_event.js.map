{"version":3,"sources":["../../../src/handler/events/map_mouse_event.ts"],"names":["merge","DOM","Event","MapMouseEvent","type","map","originalEvent","data","point","mousePos","getCanvasContainer","lngLat","unproject","target","defaultPrevented"],"mappings":";;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,cAAlB;AAIA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,SAAtB;;IACqBC,a;;;;;AA2CnB,yBACEC,IADF,EAEEC,GAFF,EAGEC,aAHF,EAKE;AAAA;;AAAA,QADAC,IACA,uEADY,EACZ;;AAAA;;AACA,QAAMC,KAAK,GAAGP,GAAG,CAACQ,QAAJ,CAAaJ,GAAG,CAACK,kBAAJ,EAAb,EAAuCJ,aAAvC,CAAd;AACA,QAAMK,MAAM,GAAGN,GAAG,CAACO,SAAJ,CAAcJ,KAAd,CAAf;AACA,8BAAMJ,IAAN,EAAYJ,KAAK,CAAC;AAAEQ,MAAAA,KAAK,EAALA,KAAF;AAASG,MAAAA,MAAM,EAANA,MAAT;AAAiBL,MAAAA,aAAa,EAAbA;AAAjB,KAAD,EAAmCC,IAAnC,CAAjB;AAHA,UA1CKH,IA0CL;AAAA,UA3BKS,MA2BL;AAAA,UAtBKP,aAsBL;AAAA,UAjBKE,KAiBL;AAAA,UAZKG,MAYL;AAAA,UAVKG,gBAUL;AAIA,UAAKA,gBAAL,GAAwB,KAAxB;AACA,UAAKD,MAAL,GAAcR,GAAd;AALA;AAMD;;;;WACD,0BAAwB;AACtB,WAAKS,gBAAL,GAAwB,IAAxB;AACD;;;;EAzDwCZ,K;;SAAtBC,a","sourcesContent":["// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport merge from 'lodash/merge';\nimport LngLat from '../../geo/lng_lat';\nimport Point from '../../geo/point';\nimport { Map } from '../../map';\nimport DOM from '../../utils/dom';\nimport { Event } from './event';\nexport default class MapMouseEvent extends Event {\n  /**\n   * `true` if `preventDefault` has been called.\n   * @private\n   */\n\n  public type:\n    | 'mousedown'\n    | 'mouseup'\n    | 'click'\n    | 'dblclick'\n    | 'mousemove'\n    | 'mouseover'\n    | 'mouseenter'\n    | 'mouseleave'\n    | 'mouseout'\n    | 'contextmenu';\n\n  /**\n   * The `Map` object that fired the event.\n   */\n  public target: Map;\n\n  /**\n   * The DOM event which caused the map event.\n   */\n  public originalEvent: MouseEvent;\n\n  /**\n   * The pixel coordinates of the mouse cursor, relative to the map and measured from the top left corner.\n   */\n  public point: Point;\n\n  /**\n   * The geographic location on the map of the mouse cursor.\n   */\n  public lngLat: LngLat;\n\n  public defaultPrevented: boolean;\n\n  /**\n   * @private\n   */\n  constructor(\n    type: string,\n    map: Map,\n    originalEvent: MouseEvent,\n    data: any = {},\n  ) {\n    const point = DOM.mousePos(map.getCanvasContainer(), originalEvent);\n    const lngLat = map.unproject(point);\n    super(type, merge({ point, lngLat, originalEvent }, data));\n    this.defaultPrevented = false;\n    this.target = map;\n  }\n  public preventDefault() {\n    this.defaultPrevented = true;\n  }\n}\n"],"file":"map_mouse_event.js"}