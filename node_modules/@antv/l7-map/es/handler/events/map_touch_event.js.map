{"version":3,"sources":["../../../src/handler/events/map_touch_event.ts"],"names":["Point","DOM","Event","MapTouchEvent","type","map","originalEvent","touches","changedTouches","points","touchPos","getCanvasContainer","lngLats","t","unproject","point","reduce","prev","curr","i","arr","add","div","length","lngLat","target","defaultPrevented"],"mappings":";;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,QAAsB,SAAtB;;IACqBC,a;;;;;AAiDnB,yBAAYC,IAAZ,EAA0BC,GAA1B,EAAoCC,aAApC,EAA+D;AAAA;;AAAA;;AAC7D,QAAMC,OAAO,GACXH,IAAI,KAAK,UAAT,GACIE,aAAa,CAACE,cADlB,GAEIF,aAAa,CAACC,OAHpB;AAIA,QAAME,MAAM,GAAGR,GAAG,CAACS,QAAJ,CAAaL,GAAG,CAACM,kBAAJ,EAAb,EAAuCJ,OAAvC,CAAf;AACA,QAAMK,OAAO,GAAGH,MAAM,CAACJ,GAAP,CAAW,UAACQ,CAAD;AAAA,aAAcR,GAAG,CAACS,SAAJ,CAAcD,CAAd,CAAd;AAAA,KAAX,CAAhB;AACA,QAAME,KAAK,GAAGN,MAAM,CAACO,MAAP,CACZ,UAACC,IAAD,EAAcC,IAAd,EAA2BC,CAA3B,EAAsCC,GAAtC,EAAuD;AACrD,aAAOH,IAAI,CAACI,GAAL,CAASH,IAAI,CAACI,GAAL,CAASF,GAAG,CAACG,MAAb,CAAT,CAAP;AACD,KAHW,EAIZ,IAAIvB,KAAJ,CAAU,CAAV,EAAa,CAAb,CAJY,CAAd;AAMA,QAAMwB,MAAM,GAAGnB,GAAG,CAACS,SAAJ,CAAcC,KAAd,CAAf;AACA,8BAAMX,IAAN,EAAY;AAAEK,MAAAA,MAAM,EAANA,MAAF;AAAUM,MAAAA,KAAK,EAALA,KAAV;AAAiBH,MAAAA,OAAO,EAAPA,OAAjB;AAA0BY,MAAAA,MAAM,EAANA,MAA1B;AAAkClB,MAAAA,aAAa,EAAbA;AAAlC,KAAZ;AAd6D,UA7CxDF,IA6CwD;AAAA,UAxCxDqB,MAwCwD;AAAA,UAnCxDnB,aAmCwD;AAAA,UA9BxDkB,MA8BwD;AAAA,UAxBxDT,KAwBwD;AAAA,UAlBxDN,MAkBwD;AAAA,UAZxDG,OAYwD;AAAA,UALxDc,gBAKwD;AAe7D,UAAKA,gBAAL,GAAwB,KAAxB;AAf6D;AAgB9D;;;;WAWD,0BAAyB;AACvB,WAAKA,gBAAL,GAAwB,IAAxB;AACD;;;;EA9EwCxB,K;;SAAtBC,a","sourcesContent":["// @ts-ignore\nimport LngLat from '../../geo/lng_lat';\nimport Point from '../../geo/point';\nimport { Map } from '../../map';\nimport DOM from '../../utils/dom';\nimport { Event } from './event';\nexport default class MapTouchEvent extends Event {\n  /**\n   * The event type.\n   */\n  public type: 'touchstart' | 'touchend' | 'touchcancel';\n\n  /**\n   * The `Map` object that fired the event.\n   */\n  public target: Map;\n\n  /**\n   * The DOM event which caused the map event.\n   */\n  public originalEvent: TouchEvent;\n\n  /**\n   * The geographic location on the map of the center of the touch event points.\n   */\n  public lngLat: LngLat;\n\n  /**\n   * The pixel coordinates of the center of the touch event points, relative to the map and measured from the top left\n   * corner.\n   */\n  public point: Point;\n\n  /**\n   * The array of pixel coordinates corresponding to a\n   * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.\n   */\n  public points: Point[];\n\n  /**\n   * The geographical locations on the map corresponding to a\n   * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.\n   */\n  public lngLats: LngLat[];\n\n  /**\n   * `true` if `preventDefault` has been called.\n   * @private\n   */\n\n  public defaultPrevented: boolean;\n\n  /**\n   * @private\n   */\n  constructor(type: string, map: Map, originalEvent: TouchEvent) {\n    const touches =\n      type === 'touchend'\n        ? originalEvent.changedTouches\n        : originalEvent.touches;\n    const points = DOM.touchPos(map.getCanvasContainer(), touches);\n    const lngLats = points.map((t: Point) => map.unproject(t));\n    const point = points.reduce(\n      (prev: Point, curr: Point, i: number, arr: Point[]) => {\n        return prev.add(curr.div(arr.length));\n      },\n      new Point(0, 0),\n    );\n    const lngLat = map.unproject(point);\n    super(type, { points, point, lngLats, lngLat, originalEvent });\n    this.defaultPrevented = false;\n  }\n\n  /**\n   * Prevents subsequent default processing of the event by the map.\n   *\n   * Calling this method will prevent the following default map behaviors:\n   *\n   *   * On `touchstart` events, the behavior of {@link DragPanHandler}\n   *   * On `touchstart` events, the behavior of {@link TouchZoomRotateHandler}\n   *\n   */\n  private preventDefault() {\n    this.defaultPrevented = true;\n  }\n}\n"],"file":"map_touch_event.js"}