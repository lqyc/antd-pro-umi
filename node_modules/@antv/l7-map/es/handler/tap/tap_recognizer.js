import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import SingleTapRecognizer, { MAX_DIST, MAX_TAP_INTERVAL } from './single_tap_recognizer';

var TapRecognizer = function () {
  function TapRecognizer(options) {
    _classCallCheck(this, TapRecognizer);

    this.singleTap = void 0;
    this.numTaps = void 0;
    this.lastTime = void 0;
    this.lastTap = void 0;
    this.count = void 0;
    this.singleTap = new SingleTapRecognizer(options);
    this.numTaps = options.numTaps;
    this.reset();
  }

  _createClass(TapRecognizer, [{
    key: "reset",
    value: function reset() {
      this.lastTime = Infinity;
      delete this.lastTap;
      this.count = 0;
      this.singleTap.reset();
    }
  }, {
    key: "touchstart",
    value: function touchstart(e, points, mapTouches) {
      this.singleTap.touchstart(e, points, mapTouches);
    }
  }, {
    key: "touchmove",
    value: function touchmove(e, points, mapTouches) {
      this.singleTap.touchmove(e, points, mapTouches);
    }
  }, {
    key: "touchend",
    value: function touchend(e, points, mapTouches) {
      var tap = this.singleTap.touchend(e, points, mapTouches);

      if (tap) {
        var soonEnough = e.timeStamp - this.lastTime < MAX_TAP_INTERVAL;
        var closeEnough = !this.lastTap || this.lastTap.dist(tap) < MAX_DIST;

        if (!soonEnough || !closeEnough) {
          this.reset();
        }

        this.count++;
        this.lastTime = e.timeStamp;
        this.lastTap = tap;

        if (this.count === this.numTaps) {
          this.reset();
          return tap;
        }
      }
    }
  }]);

  return TapRecognizer;
}();

export { TapRecognizer as default };
//# sourceMappingURL=tap_recognizer.js.map