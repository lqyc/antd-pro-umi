{"version":3,"sources":["../../src/handler/handler_manager.ts"],"names":["merge","Point","DOM","BlockableMapEventHandler","BoxZoomHandler","ClickZoomHandler","Event","RenderFrameEvent","HandlerInertia","KeyboardHandler","MapEventHandler","MousePanHandler","MousePitchHandler","MouseRotateHandler","ScrollZoomHandler","DoubleClickZoomHandler","DragPanHandler","DragRotateHandler","TouchZoomRotateHandler","TapDragZoomHandler","TapZoomHandler","TouchPanHandler","TouchPitchHandler","TouchRotateHandler","TouchZoomHandler","isMoving","p","zoom","drag","pitch","rotate","hasChange","result","panDelta","mag","zoomDelta","bearingDelta","pitchDelta","HandlerManager","map","options","el","handlers","eventsInProgress","frameId","inertia","bearingSnap","handlersById","updatingCamera","changes","previousActiveHandlers","bearingChanged","listeners","handleWindowEvent","e","handleEvent","type","eventName","stop","inputEvent","undefined","mergedIHandlerResult","needsRenderFrame","activeHandlers","mapTouches","touches","getMapTouches","points","touchPos","mousePos","handlerName","handler","allowed","isEnabled","data","blockedByActive","reset","handerName","mergeIHandlerResult","triggerRenderFrame","isActive","deactivatedHandlers","name","Object","keys","length","push","cameraAnimation","clear","fireEvents","getCanvasContainer","addDefaultHandlers","passive","window","document","capture","target","listenerOptions","addEventListener","removeEventListener","scrollZoom","isZooming","Boolean","HandlerResult","eventData","originalEvent","requestRenderFrame","timeStamp","applyChanges","add","boxZoom","tapZoom","clickZoom","doubleClickZoom","tapDragZoom","touchPitch","mouseRotate","mousePitch","dragRotate","mousePan","touchPan","dragPan","touchRotate","touchZoom","touchZoomRotate","keyboard","interactive","enable","myName","indexOf","t","contains","combined","combinedEventsInProgress","combinedDeactivatedHandlers","change","_add","around","pinchAround","noInertia","updateMapTransform","combinedResult","tr","transform","centerPoint","loc","pointLocation","sub","bearing","setLocationAtPoint","update","record","newEventsInProgress","wasMoving","nowMoving","startEvents","fireEvent","endEvents","originalEndEvent","stillMoving","inertialEase","onMoveEnd","inertiaOptions","shouldSnapToNorth","getBearing","easeTo","emit","resetNorth"],"mappings":";;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,wBAAP,MAAqC,uBAArC;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,eADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,SAJP;AAKA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,sBAAP,MAAmC,sBAAnC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SACEC,eADF,EAEEC,iBAFF,EAGEC,kBAHF,EAIEC,gBAJF,QAKO,SALP;;AASA,IAAMC,SAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD;AAAA,SAAYA,CAAC,CAACC,IAAF,IAAUD,CAAC,CAACE,IAAZ,IAAoBF,CAAC,CAACG,KAAtB,IAA+BH,CAAC,CAACI,MAA7C;AAAA,CAAjB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2C;AACzC,SACGA,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,GAAhB,EAApB,IACAF,MAAM,CAACG,SADP,IAEAH,MAAM,CAACI,YAFP,IAGAJ,MAAM,CAACK,UAJT;AAMD;;IAkBKC,c;AAqBJ,0BAAYC,GAAZ,EAAsBC,OAAtB,EAAgD;AAAA;;AAAA;;AAAA,SApBxCD,GAoBwC;AAAA,SAnBxCE,EAmBwC;AAAA,SAlBxCC,QAkBwC;AAAA,SAbxCC,gBAawC;AAAA,SAZxCC,OAYwC;AAAA,SAXxCC,OAWwC;AAAA,SAVxCC,WAUwC;AAAA,SATxCC,YASwC;AAAA,SARxCC,cAQwC;AAAA,SAPxCC,OAOwC;AAAA,SANxCC,sBAMwC;AAAA,SALxCC,cAKwC;AAAA,SAJxCC,SAIwC;;AAAA,SAkHzCC,iBAlHyC,GAkHrB,UAACC,CAAD,EAAmB;AAC5C,MAAA,KAAI,CAACC,WAAL,CAAiBD,CAAjB,YAAuBA,CAAC,CAACE,IAAzB;AACD,KApH+C;;AAAA,SAsHzCD,WAtHyC,GAsH3B,UACnBD,CADmB,EAEnBG,SAFmB,EAGhB;AACH,UAAIH,CAAC,CAACE,IAAF,KAAW,MAAf,EAAuB;AACrB,QAAA,KAAI,CAACE,IAAL;;AACA;AACD;;AACD,MAAA,KAAI,CAACV,cAAL,GAAsB,IAAtB;AACA,UAAMW,UAAU,GAAGL,CAAC,CAACE,IAAF,KAAW,aAAX,GAA2BI,SAA3B,GAAwCN,CAA3D;AAOA,UAAMO,oBAAoC,GAAG;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAA7C;AACA,UAAMnB,gBAAwC,GAAG,EAAjD;AACA,UAAMoB,cAAsC,GAAG,EAA/C;AAEA,UAAMC,UAAU,GAAGV,CAAC,CAACW,OAAF,GAEf,KAAI,CAACC,aAAL,CAAmBZ,CAAC,CAACW,OAArB,CAFe,GAGfL,SAHJ;AAIA,UAAMO,MAAM,GAAGH,UAAU,GACrB9D,GAAG,CAACkE,QAAJ,CAAa,KAAI,CAAC3B,EAAlB,EAAsBuB,UAAtB,CADqB,GAErB9D,GAAG,CAACmE,QAAJ,CAAa,KAAI,CAAC5B,EAAlB,EAAsBa,CAAtB,CAFJ;;AArBG,iDAyB6C,KAAI,CAACZ,QAzBlD;AAAA;;AAAA;AAyBH,4DAA+D;AAAA;AAAA,cAAlD4B,WAAkD,eAAlDA,WAAkD;AAAA,cAArCC,OAAqC,eAArCA,OAAqC;AAAA,cAA5BC,OAA4B,eAA5BA,OAA4B;;AAC7D,cAAI,CAACD,OAAO,CAACE,SAAR,EAAL,EAA0B;AACxB;AACD;;AACD,cAAIC,IAAoB,SAAxB;;AACA,cAAI,KAAI,CAACC,eAAL,CAAqBZ,cAArB,EAAqCS,OAArC,EAA8CF,WAA9C,CAAJ,EAAgE;AAC9DC,YAAAA,OAAO,CAACK,KAAR;AACD,WAFD,MAEO;AACL,gBAAMC,UAAU,GAAGpB,SAAS,IAAIH,CAAC,CAACE,IAAlC;;AAEA,gBAAIe,OAAO,IAAIA,OAAO,CAACM,UAAD,CAAtB,EAAoC;AAElCH,cAAAA,IAAI,GAAGH,OAAO,CAACM,UAAD,CAAP,CAAoBvB,CAApB,EAAuBa,MAAvB,EAA+BH,UAA/B,CAAP;;AACA,cAAA,KAAI,CAACc,mBAAL,CACEjB,oBADF,EAEElB,gBAFF,EAGE+B,IAHF,EAIEJ,WAJF,EAKEX,UALF;;AAOA,kBAAIe,IAAI,IAAIA,IAAI,CAACZ,gBAAjB,EAAmC;AACjC,gBAAA,KAAI,CAACiB,kBAAL;AACD;AACF;AACF;;AAED,cAAIL,IAAI,IAAIH,OAAO,CAACS,QAAR,EAAZ,EAAgC;AAC9BjB,YAAAA,cAAc,CAACO,WAAD,CAAd,GAA8BC,OAA9B;AACD;AACF;AAtDE;AAAA;AAAA;AAAA;AAAA;;AAwDH,UAAMU,mBAA2C,GAAG,EAApD;;AACA,WAAK,IAAMC,IAAX,IAAmB,KAAI,CAAChC,sBAAxB,EAAgD;AAC9C,YAAI,CAACa,cAAc,CAACmB,IAAD,CAAnB,EAA2B;AACzBD,UAAAA,mBAAmB,CAACC,IAAD,CAAnB,GAA4BvB,UAA5B;AACD;AACF;;AACD,MAAA,KAAI,CAACT,sBAAL,GAA8Ba,cAA9B;;AACA,UACEoB,MAAM,CAACC,IAAP,CAAYH,mBAAZ,EAAiCI,MAAjC,IACAtD,SAAS,CAAC8B,oBAAD,CAFX,EAGE;AACA,QAAA,KAAI,CAACZ,OAAL,CAAaqC,IAAb,CAAkB,CAChBzB,oBADgB,EAEhBlB,gBAFgB,EAGhBsC,mBAHgB,CAAlB;;AAKA,QAAA,KAAI,CAACF,kBAAL;AACD;;AAED,UAAII,MAAM,CAACC,IAAP,CAAYrB,cAAZ,EAA4BsB,MAA5B,IAAsCtD,SAAS,CAAC8B,oBAAD,CAAnD,EAA2E;AACzE,QAAA,KAAI,CAACtB,GAAL,CAASmB,IAAT,CAAc,IAAd;AACD;;AAED,MAAA,KAAI,CAACV,cAAL,GAAsB,KAAtB;AA/EG,UAiFKuC,eAjFL,GAiFyB1B,oBAjFzB,CAiFK0B,eAjFL;;AAkFH,UAAIA,eAAJ,EAAqB;AACnB,QAAA,KAAI,CAAC1C,OAAL,CAAa2C,KAAb;;AACA,QAAA,KAAI,CAACC,UAAL,CAAgB,EAAhB,EAAoB,EAApB;;AACA,QAAA,KAAI,CAACxC,OAAL,GAAe,EAAf;AACAsC,QAAAA,eAAe,CAAC,KAAI,CAAChD,GAAN,CAAf;AACD;AACF,KAjN+C;;AAC9C,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKE,EAAL,GAAU,KAAKF,GAAL,CAASmD,kBAAT,EAAV;AACA,SAAKhD,QAAL,GAAgB,EAAhB;AACA,SAAKK,YAAL,GAAoB,EAApB;AACA,SAAKE,OAAL,GAAe,EAAf;AAEA,SAAKJ,OAAL,GAAe,IAAIrC,cAAJ,CAAmB+B,GAAnB,CAAf;AACA,SAAKO,WAAL,GAAmBN,OAAO,CAACM,WAA3B;AACA,SAAKI,sBAAL,GAA8B,EAA9B;AAGA,SAAKP,gBAAL,GAAwB,EAAxB;AAEA,SAAKgD,kBAAL,CAAwBnD,OAAxB;AAEA,QAAMC,EAAE,GAAG,KAAKA,EAAhB;AAEA,SAAKW,SAAL,GAAiB,CAMf,CAACX,EAAD,EAAK,YAAL,EAAmB;AAAEmD,MAAAA,OAAO,EAAE;AAAX,KAAnB,CANe,EAOf,CAACnD,EAAD,EAAK,WAAL,EAAkB;AAAEmD,MAAAA,OAAO,EAAE;AAAX,KAAlB,CAPe,EAQf,CAACnD,EAAD,EAAK,UAAL,EAAiBmB,SAAjB,CARe,EASf,CAACnB,EAAD,EAAK,aAAL,EAAoBmB,SAApB,CATe,EAWf,CAACnB,EAAD,EAAK,WAAL,EAAkBmB,SAAlB,CAXe,EAYf,CAACnB,EAAD,EAAK,WAAL,EAAkBmB,SAAlB,CAZe,EAaf,CAACnB,EAAD,EAAK,SAAL,EAAgBmB,SAAhB,CAbe,EAqBf,CAACiC,MAAM,CAACC,QAAR,EAAkB,WAAlB,EAA+B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA/B,CArBe,EAuBf,CAACF,MAAM,CAACC,QAAR,EAAkB,SAAlB,EAA6BlC,SAA7B,CAvBe,EAyBf,CAACnB,EAAD,EAAK,WAAL,EAAkBmB,SAAlB,CAzBe,EA0Bf,CAACnB,EAAD,EAAK,UAAL,EAAiBmB,SAAjB,CA1Be,EA2Bf,CAACnB,EAAD,EAAK,UAAL,EAAiBmB,SAAjB,CA3Be,EA4Bf,CAACnB,EAAD,EAAK,OAAL,EAAcmB,SAAd,CA5Be,EA8Bf,CAACnB,EAAD,EAAK,SAAL,EAAgB;AAAEsD,MAAAA,OAAO,EAAE;AAAX,KAAhB,CA9Be,EA+Bf,CAACtD,EAAD,EAAK,OAAL,EAAcmB,SAAd,CA/Be,EAiCf,CAACnB,EAAD,EAAK,OAAL,EAAc;AAAEmD,MAAAA,OAAO,EAAE;AAAX,KAAd,CAjCe,EAkCf,CAACnD,EAAD,EAAK,aAAL,EAAoBmB,SAApB,CAlCe,EAoCf,CAACiC,MAAD,EAAS,MAAT,EAAiBjC,SAAjB,CApCe,CAAjB;;AAlB8C,gDAwDA,KAAKR,SAxDL;AAAA;;AAAA;AAwD9C,6DAA8D;AAAA;AAAA,YAAlD4C,MAAkD;AAAA,YAA1CxC,IAA0C;AAAA,YAApCyC,eAAoC;;AAE5D/F,QAAAA,GAAG,CAACgG,gBAAJ,CACEF,MADF,EAEExC,IAFF,EAIEwC,MAAM,KAAKH,MAAM,CAACC,QAAlB,GAA6B,KAAKzC,iBAAlC,GAAsD,KAAKE,WAJ7D,EAKE0C,eALF;AAOD;AAjE6C;AAAA;AAAA;AAAA;AAAA;AAkE/C;;;;WACD,mBAAiB;AAAA,kDAC+B,KAAK7C,SADpC;AAAA;;AAAA;AACf,+DAA8D;AAAA;AAAA,cAAlD4C,MAAkD;AAAA,cAA1CxC,IAA0C;AAAA,cAApCyC,eAAoC;;AAE5D/F,UAAAA,GAAG,CAACiG,mBAAJ,CACEH,MADF,EAEExC,IAFF,EAIEwC,MAAM,KAAKH,MAAM,CAACC,QAAlB,GAA6B,KAAKzC,iBAAlC,GAAsD,KAAKE,WAJ7D,EAKE0C,eALF;AAOD;AAVc;AAAA;AAAA;AAAA;AAAA;AAWhB;;;WAED,gBAAc;AAEZ,UAAI,KAAKjD,cAAT,EAAyB;AACvB;AACD;;AAJW,kDAMc,KAAKN,QANnB;AAAA;;AAAA;AAMZ,+DAAyC;AAAA,cAA5B6B,OAA4B,gBAA5BA,OAA4B;AACvCA,UAAAA,OAAO,CAACK,KAAR;AACD;AARW;AAAA;AAAA;AAAA;AAAA;;AASZ,WAAK/B,OAAL,CAAa2C,KAAb;AACA,WAAKC,UAAL,CAAgB,EAAhB,EAAoB,EAApB;AACA,WAAKxC,OAAL,GAAe,EAAf;AACD;;;WAED,oBAAkB;AAAA,kDACU,KAAKP,QADf;AAAA;;AAAA;AAChB,+DAAyC;AAAA,cAA5B6B,OAA4B,gBAA5BA,OAA4B;;AACvC,cAAIA,OAAO,CAACS,QAAR,EAAJ,EAAwB;AACtB,mBAAO,IAAP;AACD;AACF;AALe;AAAA;AAAA;AAAA;AAAA;;AAMhB,aAAO,KAAP;AACD;;;WAED,qBAAmB;AACjB,aAAO,CAAC,CAAC,KAAKrC,gBAAL,CAAsBhB,IAAxB,IAAgC,KAAKY,GAAL,CAAS6D,UAAT,CAAoBC,SAApB,EAAvC;AACD;;;WACD,sBAAoB;AAClB,aAAO,CAAC,CAAC,KAAK1D,gBAAL,CAAsBb,MAA/B;AACD;;;WAED,oBAAkB;AAChB,aAAOwE,OAAO,CAAC7E,SAAQ,CAAC,KAAKkB,gBAAN,CAAT,CAAP,IAA4C,KAAK0D,SAAL,EAAnD;AACD;;;WAmGD,6BACExC,oBADF,EAEElB,gBAFF,EAGE4D,aAHF,EAIErB,IAJF,EAKE5B,CALF,EAME;AACA,UAAI,CAACiD,aAAL,EAAoB;AAClB;AACD;;AAEDvG,MAAAA,KAAK,CAAC6D,oBAAD,EAAuB0C,aAAvB,CAAL;AAEA,UAAMC,SAAS,GAAG;AAChBlC,QAAAA,WAAW,EAAEY,IADG;AAEhBuB,QAAAA,aAAa,EAAEF,aAAa,CAACE,aAAd,IAA+BnD;AAF9B,OAAlB;;AAMA,UAAIiD,aAAa,CAACpE,SAAd,KAA4ByB,SAAhC,EAA2C;AACzCjB,QAAAA,gBAAgB,CAAChB,IAAjB,GAAwB6E,SAAxB;AACD;;AACD,UAAID,aAAa,CAACtE,QAAd,KAA2B2B,SAA/B,EAA0C;AACxCjB,QAAAA,gBAAgB,CAACf,IAAjB,GAAwB4E,SAAxB;AACD;;AACD,UAAID,aAAa,CAAClE,UAAd,KAA6BuB,SAAjC,EAA4C;AAC1CjB,QAAAA,gBAAgB,CAACd,KAAjB,GAAyB2E,SAAzB;AACD;;AACD,UAAID,aAAa,CAACnE,YAAd,KAA+BwB,SAAnC,EAA8C;AAC5CjB,QAAAA,gBAAgB,CAACb,MAAjB,GAA0B0E,SAA1B;AACD;AACF;;;WAED,8BAA4B;AAAA;;AAC1B,UAAI,KAAK5D,OAAL,KAAiBgB,SAArB,EAAgC;AAC9B,aAAKhB,OAAL,GAAe,KAAKL,GAAL,CAASmE,kBAAT,CAA4B,UAACC,SAAD,EAAuB;AAChE,iBAAO,MAAI,CAAC/D,OAAZ;;AACA,UAAA,MAAI,CAACW,WAAL,CAAiB,IAAIhD,gBAAJ,CAAqB,aAArB,EAAoC;AAAEoG,YAAAA,SAAS,EAATA;AAAF,WAApC,CAAjB;;AACA,UAAA,MAAI,CAACC,YAAL;AACD,SAJc,CAAf;AAKD;AACF;;;WAED,4BAA2BpE,OAA3B,EAAqD;AACnD,UAAMD,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAME,EAAE,GAAGF,GAAG,CAACmD,kBAAJ,EAAX;AACA,WAAKmB,GAAL,CAAS,UAAT,EAAqB,IAAInG,eAAJ,CAAoB6B,GAApB,EAAyBC,OAAzB,CAArB;AAEA,UAAMsE,OAAO,GAAIvE,GAAG,CAACuE,OAAJ,GAAc,IAAI1G,cAAJ,CAAmBmC,GAAnB,EAAwBC,OAAxB,CAA/B;AACA,WAAKqE,GAAL,CAAS,SAAT,EAAoBC,OAApB;AAEA,UAAMC,OAAO,GAAG,IAAI3F,cAAJ,EAAhB;AACA,UAAM4F,SAAS,GAAG,IAAI3G,gBAAJ,EAAlB;AACAkC,MAAAA,GAAG,CAAC0E,eAAJ,GAAsB,IAAIlG,sBAAJ,CAA2BiG,SAA3B,EAAsCD,OAAtC,CAAtB;AACA,WAAKF,GAAL,CAAS,SAAT,EAAoBE,OAApB;AACA,WAAKF,GAAL,CAAS,WAAT,EAAsBG,SAAtB;AAEA,UAAME,WAAW,GAAG,IAAI/F,kBAAJ,EAApB;AACA,WAAK0F,GAAL,CAAS,aAAT,EAAwBK,WAAxB;AAEA,UAAMC,UAAU,GAAI5E,GAAG,CAAC4E,UAAJ,GAAiB,IAAI7F,iBAAJ,EAArC;AACA,WAAKuF,GAAL,CAAS,YAAT,EAAuBM,UAAvB;AAEA,UAAMC,WAAW,GAAG,IAAIvG,kBAAJ,CAAuB2B,OAAvB,CAApB;AACA,UAAM6E,UAAU,GAAG,IAAIzG,iBAAJ,CAAsB4B,OAAtB,CAAnB;AACAD,MAAAA,GAAG,CAAC+E,UAAJ,GAAiB,IAAIrG,iBAAJ,CAAsBuB,OAAtB,EAA+B4E,WAA/B,EAA4CC,UAA5C,CAAjB;AACA,WAAKR,GAAL,CAAS,aAAT,EAAwBO,WAAxB,EAAqC,CAAC,YAAD,CAArC;AACA,WAAKP,GAAL,CAAS,YAAT,EAAuBQ,UAAvB,EAAmC,CAAC,aAAD,CAAnC;AAEA,UAAME,QAAQ,GAAG,IAAI5G,eAAJ,CAAoB6B,OAApB,CAAjB;AACA,UAAMgF,QAAQ,GAAG,IAAInG,eAAJ,CAAoBmB,OAApB,CAAjB;AACAD,MAAAA,GAAG,CAACkF,OAAJ,GAAc,IAAIzG,cAAJ,CAAmByB,EAAnB,EAAuB8E,QAAvB,EAAiCC,QAAjC,CAAd;AACA,WAAKX,GAAL,CAAS,UAAT,EAAqBU,QAArB;AACA,WAAKV,GAAL,CAAS,UAAT,EAAqBW,QAArB,EAA+B,CAAC,WAAD,EAAc,aAAd,CAA/B;AAEA,UAAME,WAAW,GAAG,IAAInG,kBAAJ,EAApB;AACA,UAAMoG,SAAS,GAAG,IAAInG,gBAAJ,EAAlB;AACAe,MAAAA,GAAG,CAACqF,eAAJ,GAAsB,IAAI1G,sBAAJ,CACpBuB,EADoB,EAEpBkF,SAFoB,EAGpBD,WAHoB,EAIpBR,WAJoB,CAAtB;AAMA,WAAKL,GAAL,CAAS,aAAT,EAAwBa,WAAxB,EAAqC,CAAC,UAAD,EAAa,WAAb,CAArC;AACA,WAAKb,GAAL,CAAS,WAAT,EAAsBc,SAAtB,EAAiC,CAAC,UAAD,EAAa,aAAb,CAAjC;AAEA,UAAMvB,UAAU,GAAI7D,GAAG,CAAC6D,UAAJ,GAAiB,IAAItF,iBAAJ,CAAsByB,GAAtB,EAA2B,IAA3B,CAArC;AACA,WAAKsE,GAAL,CAAS,YAAT,EAAuBT,UAAvB,EAAmC,CAAC,UAAD,CAAnC;AAEA,UAAMyB,QAAQ,GAAItF,GAAG,CAACsF,QAAJ,GAAe,IAAIpH,eAAJ,EAAjC;AACA,WAAKoG,GAAL,CAAS,UAAT,EAAqBgB,QAArB;AAEA,WAAKhB,GAAL,CAAS,mBAAT,EAA8B,IAAI1G,wBAAJ,CAA6BoC,GAA7B,CAA9B;;AAEA,8BAAmB,CACjB,SADiB,EAEjB,iBAFiB,EAGjB,aAHiB,EAIjB,YAJiB,EAKjB,YALiB,EAMjB,SANiB,EAOjB,iBAPiB,EAQjB,YARiB,EASjB,UATiB,CAAnB,0BAUG;AAVE,YAAM2C,IAAI,WAAV;;AAYH,YAAI1C,OAAO,CAACsF,WAAR,IAAuBtF,OAAO,CAAC0C,IAAD,CAAlC,EAA0C;AAExC3C,UAAAA,GAAG,CAAC2C,IAAD,CAAH,CAAU6C,MAAV,CAAiBvF,OAAO,CAAC0C,IAAD,CAAxB;AACD;AACF;AACF;;;WAED,aAAYZ,WAAZ,EAAiCC,OAAjC,EAAoDC,OAApD,EAAwE;AACtE,WAAK9B,QAAL,CAAc4C,IAAd,CAAmB;AAAEhB,QAAAA,WAAW,EAAXA,WAAF;AAAeC,QAAAA,OAAO,EAAPA,OAAf;AAAwBC,QAAAA,OAAO,EAAPA;AAAxB,OAAnB;AACA,WAAKzB,YAAL,CAAkBuB,WAAlB,IAAiCC,OAAjC;AACD;;;WAED,yBACER,cADF,EAEES,OAFF,EAGEwD,MAHF,EAIE;AACA,WAAK,IAAM9C,IAAX,IAAmBnB,cAAnB,EAAmC;AACjC,YAAImB,IAAI,KAAK8C,MAAb,EAAqB;AACnB;AACD;;AACD,YAAI,CAACxD,OAAD,IAAYA,OAAO,CAACyD,OAAR,CAAgB/C,IAAhB,IAAwB,CAAxC,EAA2C;AACzC,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD;;;WAED,uBAAsBjB,OAAtB,EAAiD;AAC/C,UAAMD,UAAU,GAAG,EAAnB;;AAD+C,kDAE/BC,OAF+B;AAAA;;AAAA;AAE/C,+DAAyB;AAAA,cAAdiE,CAAc;AACvB,cAAMlC,MAAM,GAAGkC,CAAC,CAAClC,MAAjB;;AACA,cAAI,KAAKvD,EAAL,CAAQ0F,QAAR,CAAiBnC,MAAjB,CAAJ,EAA8B;AAC5BhC,YAAAA,UAAU,CAACsB,IAAX,CAAgB4C,CAAhB;AACD;AACF;AAP8C;AAAA;AAAA;AAAA;AAAA;;AAQ/C,aAAOlE,UAAP;AACD;;;WAED,wBAAuB;AACrB,UAAMoE,QAAgC,GAAG,EAAzC;AACA,UAAMC,wBAAwB,GAAG,EAAjC;AACA,UAAMC,2BAA2B,GAAG,EAApC;;AAHqB,kDAKyC,KAC3DrF,OANkB;AAAA;;AAAA;AAKrB,+DACY;AAAA;AAAA,cADAsF,MACA;AAAA,cADQ5F,gBACR;AAAA,cAD0BsC,mBAC1B;;AACV,cAAIsD,MAAM,CAACtG,QAAX,EAAqB;AACnBmG,YAAAA,QAAQ,CAACnG,QAAT,GAAoB,CAACmG,QAAQ,CAACnG,QAAT,IAAqB,IAAIhC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAtB,EAAuCuI,IAAvC,CAClBD,MAAM,CAACtG,QADW,CAApB;AAGD;;AACD,cAAIsG,MAAM,CAACpG,SAAX,EAAsB;AACpBiG,YAAAA,QAAQ,CAACjG,SAAT,GAAqB,CAACiG,QAAQ,CAACjG,SAAT,IAAsB,CAAvB,IAA4BoG,MAAM,CAACpG,SAAxD;AACD;;AACD,cAAIoG,MAAM,CAACnG,YAAX,EAAyB;AACvBgG,YAAAA,QAAQ,CAAChG,YAAT,GACE,CAACgG,QAAQ,CAAChG,YAAT,IAAyB,CAA1B,IAA+BmG,MAAM,CAACnG,YADxC;AAED;;AACD,cAAImG,MAAM,CAAClG,UAAX,EAAuB;AACrB+F,YAAAA,QAAQ,CAAC/F,UAAT,GAAsB,CAAC+F,QAAQ,CAAC/F,UAAT,IAAuB,CAAxB,IAA6BkG,MAAM,CAAClG,UAA1D;AACD;;AACD,cAAIkG,MAAM,CAACE,MAAP,KAAkB7E,SAAtB,EAAiC;AAC/BwE,YAAAA,QAAQ,CAACK,MAAT,GAAkBF,MAAM,CAACE,MAAzB;AACD;;AACD,cAAIF,MAAM,CAACG,WAAP,KAAuB9E,SAA3B,EAAsC;AACpCwE,YAAAA,QAAQ,CAACM,WAAT,GAAuBH,MAAM,CAACG,WAA9B;AACD;;AACD,cAAIH,MAAM,CAACI,SAAX,EAAsB;AACpBP,YAAAA,QAAQ,CAACO,SAAT,GAAqBJ,MAAM,CAACI,SAA5B;AACD;;AAED3I,UAAAA,KAAK,CAACqI,wBAAD,EAA2B1F,gBAA3B,CAAL;AACA3C,UAAAA,KAAK,CAACsI,2BAAD,EAA8BrD,mBAA9B,CAAL;AACD;AAlCoB;AAAA;AAAA;AAAA;AAAA;;AAoCrB,WAAK2D,kBAAL,CACER,QADF,EAEEC,wBAFF,EAGEC,2BAHF;AAKA,WAAKrF,OAAL,GAAe,EAAf;AACD;;;WAED,4BACE4F,cADF,EAEER,wBAFF,EAGEpD,mBAHF,EAIE;AACA,UAAM1C,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAMuG,EAAE,GAAGvG,GAAG,CAACwG,SAAf;;AAEA,UAAI,CAAChH,SAAS,CAAC8G,cAAD,CAAd,EAAgC;AAC9B,eAAO,KAAKpD,UAAL,CAAgB4C,wBAAhB,EAA0CpD,mBAA1C,CAAP;AACD;;AAND,UAQEhD,QARF,GAaI4G,cAbJ,CAQE5G,QARF;AAAA,UASEE,SATF,GAaI0G,cAbJ,CASE1G,SATF;AAAA,UAUEC,YAVF,GAaIyG,cAbJ,CAUEzG,YAVF;AAAA,UAWEC,UAXF,GAaIwG,cAbJ,CAWExG,UAXF;AAAA,UAYEqG,WAZF,GAaIG,cAbJ,CAYEH,WAZF;AAAA,UAcMD,MAdN,GAciBI,cAdjB,CAcMJ,MAdN;;AAgBA,UAAIC,WAAW,KAAK9E,SAApB,EAA+B;AAC7B6E,QAAAA,MAAM,GAAGC,WAAT;AACD;;AAGDnG,MAAAA,GAAG,CAACmB,IAAJ,CAAS,IAAT;AAEA+E,MAAAA,MAAM,GAAGA,MAAM,IAAIlG,GAAG,CAACwG,SAAJ,CAAcC,WAAjC;AACA,UAAMC,GAAG,GAAGH,EAAE,CAACI,aAAH,CAAiBjH,QAAQ,GAAGwG,MAAM,CAACU,GAAP,CAAWlH,QAAX,CAAH,GAA0BwG,MAAnD,CAAZ;;AACA,UAAIrG,YAAJ,EAAkB;AAChB0G,QAAAA,EAAE,CAACM,OAAH,IAAchH,YAAd;AACD;;AACD,UAAIC,UAAJ,EAAgB;AACdyG,QAAAA,EAAE,CAACjH,KAAH,IAAYQ,UAAZ;AACD;;AACD,UAAIF,SAAJ,EAAe;AACb2G,QAAAA,EAAE,CAACnH,IAAH,IAAWQ,SAAX;AACD;;AACD2G,MAAAA,EAAE,CAACO,kBAAH,CAAsBJ,GAAtB,EAA2BR,MAA3B;AAEA,WAAKlG,GAAL,CAAS+G,MAAT;;AACA,UAAI,CAACT,cAAc,CAACF,SAApB,EAA+B;AAC7B,aAAK9F,OAAL,CAAa0G,MAAb,CAAoBV,cAApB;AACD;;AACD,WAAKpD,UAAL,CAAgB4C,wBAAhB,EAA0CpD,mBAA1C;AACD;;;WAED,oBACEuE,mBADF,EAEEvE,mBAFF,EAGE;AAAA;;AACA,UAAMwE,SAAS,GAAGhI,SAAQ,CAAC,KAAKkB,gBAAN,CAA1B;;AACA,UAAM+G,SAAS,GAAGjI,SAAQ,CAAC+H,mBAAD,CAA1B;;AAEA,UAAMG,WAAmC,GAAG,EAA5C;;AAEA,WAAK,IAAMlG,SAAX,IAAwB+F,mBAAxB,EAA6C;AAC3C,YAAIA,mBAAmB,CAAC/F,SAAD,CAAvB,EAAoC;AAAA,cAC1BgD,aAD0B,GACR+C,mBAAmB,CAAC/F,SAAD,CADX,CAC1BgD,aAD0B;;AAElC,cAAI,CAAC,KAAK9D,gBAAL,CAAsBc,SAAtB,CAAL,EAAuC;AACrCkG,YAAAA,WAAW,WAAIlG,SAAJ,WAAX,GAAmCgD,aAAnC;AACD;;AAED,eAAK9D,gBAAL,CAAsBc,SAAtB,IAAmC+F,mBAAmB,CAAC/F,SAAD,CAAtD;AACD;AACF;;AAGD,UAAI,CAACgG,SAAD,IAAcC,SAAlB,EAA6B;AAC3B,aAAKE,SAAL,CAAe,WAAf,EAA4BF,SAAS,CAACjD,aAAtC;AACD;;AAED,WAAK,IAAMvB,IAAX,IAAmByE,WAAnB,EAAgC;AAC9B,YAAIA,WAAW,CAACzE,IAAD,CAAf,EAAuB;AACrB,eAAK0E,SAAL,CAAe1E,IAAf,EAAqByE,WAAW,CAACzE,IAAD,CAAhC;AACD;AACF;;AAED,UAAIsE,mBAAmB,CAAC1H,MAAxB,EAAgC;AAC9B,aAAKqB,cAAL,GAAsB,IAAtB;AACD;;AAED,UAAIuG,SAAJ,EAAe;AACb,aAAKE,SAAL,CAAe,MAAf,EAAuBF,SAAS,CAACjD,aAAjC;AACD;;AAED,WAAK,IAAMhD,UAAX,IAAwB+F,mBAAxB,EAA6C;AAC3C,YAAIA,mBAAmB,CAAC/F,UAAD,CAAvB,EAAoC;AAAA,cAC1BgD,cAD0B,GACR+C,mBAAmB,CAAC/F,UAAD,CADX,CAC1BgD,aAD0B;AAElC,eAAKmD,SAAL,CAAenG,UAAf,EAA0BgD,cAA1B;AACD;AACF;;AAED,UAAMoD,SAAiC,GAAG,EAA1C;AAEA,UAAIC,gBAAJ;;AACA,WAAK,IAAMrG,WAAX,IAAwB,KAAKd,gBAA7B,EAA+C;AAC7C,YAAI,KAAKA,gBAAL,CAAsBc,WAAtB,CAAJ,EAAsC;AAAA,sCACG,KAAKd,gBAAL,CAAsBc,WAAtB,CADH;AAAA,cAC5Ba,WAD4B,yBAC5BA,WAD4B;AAAA,cACfmC,eADe,yBACfA,aADe;;AAEpC,cAAI,CAAC,KAAK1D,YAAL,CAAkBuB,WAAlB,EAA+BU,QAA/B,EAAL,EAAgD;AAC9C,mBAAO,KAAKrC,gBAAL,CAAsBc,WAAtB,CAAP;AACAqG,YAAAA,gBAAgB,GAAG7E,mBAAmB,CAACX,WAAD,CAAnB,IAAoCmC,eAAvD;AACAoD,YAAAA,SAAS,WAAIpG,WAAJ,SAAT,GAA+BqG,gBAA/B;AACD;AACF;AACF;;AAED,WAAK,IAAM5E,KAAX,IAAmB2E,SAAnB,EAA8B;AAC5B,YAAIA,SAAS,CAAC3E,KAAD,CAAb,EAAqB;AACnB,eAAK0E,SAAL,CAAe1E,KAAf,EAAqB2E,SAAS,CAAC3E,KAAD,CAA9B;AACD;AACF;;AAED,UAAM6E,WAAW,GAAGtI,SAAQ,CAAC,KAAKkB,gBAAN,CAA5B;;AACA,UAAI,CAAC8G,SAAS,IAAIC,SAAd,KAA4B,CAACK,WAAjC,EAA8C;AAC5C,aAAK/G,cAAL,GAAsB,IAAtB;AACA,YAAMgH,YAAY,GAAG,KAAKnH,OAAL,CAAaoH,SAAb,CACnB,KAAK1H,GAAL,CAASkF,OAAT,CAAiByC,cADE,CAArB;;AAIA,YAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACf,OAAD;AAAA,iBACxBA,OAAO,KAAK,CAAZ,IACA,CAAC,MAAI,CAACtG,WAAN,GAAoBsG,OADpB,IAEAA,OAAO,GAAG,MAAI,CAACtG,WAHS;AAAA,SAA1B;;AAKA,YAAIkH,YAAJ,EAAkB;AAChB,cAAIG,iBAAiB,CAACH,YAAY,CAACZ,OAAb,IAAwB,KAAK7G,GAAL,CAAS6H,UAAT,EAAzB,CAArB,EAAsE;AACpEJ,YAAAA,YAAY,CAACZ,OAAb,GAAuB,CAAvB;AACD;;AACD,eAAK7G,GAAL,CAAS8H,MAAT,CAAgBL,YAAhB,EAA8B;AAAEvD,YAAAA,aAAa,EAAEqD;AAAjB,WAA9B;AACD,SALD,MAKO;AACL,eAAKvH,GAAL,CAAS+H,IAAT,CACE,SADF,EAEE,IAAIhK,KAAJ,CAAU,SAAV,EAAqB;AAAEmG,YAAAA,aAAa,EAAEqD;AAAjB,WAArB,CAFF;;AAIA,cAAIK,iBAAiB,CAAC,KAAK5H,GAAL,CAAS6H,UAAT,EAAD,CAArB,EAA8C;AAC5C,iBAAK7H,GAAL,CAASgI,UAAT;AACD;AACF;;AACD,aAAKpH,cAAL,GAAsB,KAAtB;AACA,aAAKH,cAAL,GAAsB,KAAtB;AACD;AACF;;;WAED,mBAAkBQ,IAAlB,EAAgCF,CAAhC,EAAwC;AACtC,WAAKf,GAAL,CAAS+H,IAAT,CAAc9G,IAAd,EAAoB,IAAIlD,KAAJ,CAAUkD,IAAV,EAAgBF,CAAC,GAAG;AAAEmD,QAAAA,aAAa,EAAEnD;AAAjB,OAAH,GAA0B,EAA3C,CAApB;AACD;;;;;;AAGH,eAAehB,cAAf","sourcesContent":["// @ts-ignore\n// tslint:disable-next-line: no-submodule-imports\nimport merge from 'lodash/merge';\nimport Point from '../geo/point';\nimport { Map } from '../map';\nimport DOM from '../utils/dom';\nimport BlockableMapEventHandler from './blockable_map_event';\nimport BoxZoomHandler from './box_zoom';\nimport ClickZoomHandler from './click_zoom';\nimport { Event } from './events/event';\nimport RenderFrameEvent from './events/render_event';\nimport HandlerInertia from './handler_inertia';\nimport { IHandler, IHandlerResult } from './IHandler';\nimport KeyboardHandler from './keyboard';\nimport MapEventHandler from './map_event';\nimport {\n  MousePanHandler,\n  MousePitchHandler,\n  MouseRotateHandler,\n} from './mouse';\nimport ScrollZoomHandler from './scroll_zoom';\nimport DoubleClickZoomHandler from './shim/dblclick_zoom';\nimport DragPanHandler from './shim/drag_pan';\nimport DragRotateHandler from './shim/drag_rotate';\nimport TouchZoomRotateHandler from './shim/touch_zoom_rotate';\nimport TapDragZoomHandler from './tap/tap_drag_zoom';\nimport TapZoomHandler from './tap/tap_zoom';\nimport {\n  TouchPanHandler,\n  TouchPitchHandler,\n  TouchRotateHandler,\n  TouchZoomHandler,\n} from './touch';\n\nexport type InputEvent = MouseEvent | TouchEvent | KeyboardEvent | WheelEvent;\n\nconst isMoving = (p: any) => p.zoom || p.drag || p.pitch || p.rotate;\n\nfunction hasChange(result: IHandlerResult) {\n  return (\n    (result.panDelta && result.panDelta.mag()) ||\n    result.zoomDelta ||\n    result.bearingDelta ||\n    result.pitchDelta\n  );\n}\n\nexport interface IHandlerOptions {\n  interactive: boolean;\n  boxZoom: boolean;\n  dragRotate: boolean;\n  dragPan: boolean;\n  keyboard: boolean;\n  doubleClickZoom: boolean;\n  touchZoomRotate: boolean;\n  touchPitch: boolean;\n  trackResize: boolean;\n  renderWorldCopies: boolean;\n  bearingSnap: number;\n  clickTolerance: number;\n  pitchWithRotate: boolean;\n}\n\nclass HandlerManager {\n  private map: Map;\n  private el: HTMLElement;\n  private handlers: Array<{\n    handlerName: string;\n    handler: IHandler;\n    allowed: any;\n  }>;\n  private eventsInProgress: any;\n  private frameId: number;\n  private inertia: HandlerInertia;\n  private bearingSnap: number;\n  private handlersById: { [key: string]: IHandler };\n  private updatingCamera: boolean;\n  private changes: Array<[IHandlerResult, any, any]>;\n  private previousActiveHandlers: { [key: string]: IHandler };\n  private bearingChanged: boolean;\n  private listeners: Array<\n    [HTMLElement, string, void | { passive?: boolean; capture?: boolean }]\n  >;\n\n  constructor(map: Map, options: IHandlerOptions) {\n    this.map = map;\n    this.el = this.map.getCanvasContainer();\n    this.handlers = [];\n    this.handlersById = {};\n    this.changes = [];\n\n    this.inertia = new HandlerInertia(map);\n    this.bearingSnap = options.bearingSnap;\n    this.previousActiveHandlers = {};\n\n    // Track whether map is currently moving, to compute start/move/end events\n    this.eventsInProgress = {};\n\n    this.addDefaultHandlers(options);\n\n    const el = this.el;\n\n    this.listeners = [\n      // Bind touchstart and touchmove with passive: false because, even though\n      // they only fire a map events and therefore could theoretically be\n      // passive, binding with passive: true causes iOS not to respect\n      // e.preventDefault() in _other_ handlers, even if they are non-passive\n      // (see https://bugs.webkit.org/show_bug.cgi?id=184251)\n      [el, 'touchstart', { passive: false }],\n      [el, 'touchmove', { passive: false }],\n      [el, 'touchend', undefined],\n      [el, 'touchcancel', undefined],\n\n      [el, 'mousedown', undefined],\n      [el, 'mousemove', undefined],\n      [el, 'mouseup', undefined],\n\n      // Bind window-level event listeners for move and up/end events. In the absence of\n      // the pointer capture API, which is not supported by all necessary platforms,\n      // window-level event listeners give us the best shot at capturing events that\n      // fall outside the map canvas element. Use `{capture: true}` for the move event\n      // to prevent map move events from being fired during a drag.\n      // @ts-ignore\n      [window.document, 'mousemove', { capture: true }],\n      // @ts-ignore\n      [window.document, 'mouseup', undefined],\n\n      [el, 'mouseover', undefined],\n      [el, 'mouseout', undefined],\n      [el, 'dblclick', undefined],\n      [el, 'click', undefined],\n\n      [el, 'keydown', { capture: false }],\n      [el, 'keyup', undefined],\n\n      [el, 'wheel', { passive: false }],\n      [el, 'contextmenu', undefined],\n      // @ts-ignore\n      [window, 'blur', undefined],\n    ];\n    for (const [target, type, listenerOptions] of this.listeners) {\n      // @ts-ignore\n      DOM.addEventListener(\n        target,\n        type,\n        // @ts-ignore\n        target === window.document ? this.handleWindowEvent : this.handleEvent,\n        listenerOptions,\n      );\n    }\n  }\n  public destroy() {\n    for (const [target, type, listenerOptions] of this.listeners) {\n      // @ts-ignore\n      DOM.removeEventListener(\n        target,\n        type,\n        // @ts-ignore\n        target === window.document ? this.handleWindowEvent : this.handleEvent,\n        listenerOptions,\n      );\n    }\n  }\n\n  public stop() {\n    // do nothing if this method was triggered by a gesture update\n    if (this.updatingCamera) {\n      return;\n    }\n\n    for (const { handler } of this.handlers) {\n      handler.reset();\n    }\n    this.inertia.clear();\n    this.fireEvents({}, {});\n    this.changes = [];\n  }\n\n  public isActive() {\n    for (const { handler } of this.handlers) {\n      if (handler.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public isZooming() {\n    return !!this.eventsInProgress.zoom || this.map.scrollZoom.isZooming();\n  }\n  public isRotating() {\n    return !!this.eventsInProgress.rotate;\n  }\n\n  public isMoving() {\n    return Boolean(isMoving(this.eventsInProgress)) || this.isZooming();\n  }\n\n  public handleWindowEvent = (e: InputEvent) => {\n    this.handleEvent(e, `${e.type}Window`);\n  };\n\n  public handleEvent = (\n    e: InputEvent | RenderFrameEvent,\n    eventName?: string,\n  ) => {\n    if (e.type === 'blur') {\n      this.stop();\n      return;\n    }\n    this.updatingCamera = true;\n    const inputEvent = e.type === 'renderFrame' ? undefined : (e as InputEvent);\n\n    /*\n     * We don't call e.preventDefault() for any events by default.\n     * Handlers are responsible for calling it where necessary.\n     */\n\n    const mergedIHandlerResult: IHandlerResult = { needsRenderFrame: false };\n    const eventsInProgress: { [key: string]: any } = {};\n    const activeHandlers: { [key: string]: any } = {};\n    // @ts-ignore\n    const mapTouches = e.touches\n      ? // @ts-ignore\n        this.getMapTouches(e.touches as Touch[])\n      : undefined;\n    const points = mapTouches\n      ? DOM.touchPos(this.el, mapTouches)\n      : DOM.mousePos(this.el, e as MouseEvent);\n\n    for (const { handlerName, handler, allowed } of this.handlers) {\n      if (!handler.isEnabled()) {\n        continue;\n      }\n      let data: IHandlerResult;\n      if (this.blockedByActive(activeHandlers, allowed, handlerName)) {\n        handler.reset();\n      } else {\n        const handerName = eventName || e.type;\n        // @ts-ignore\n        if (handler && handler[handerName]) {\n          // @ts-ignore\n          data = handler[handerName](e, points, mapTouches);\n          this.mergeIHandlerResult(\n            mergedIHandlerResult,\n            eventsInProgress,\n            data,\n            handlerName,\n            inputEvent,\n          );\n          if (data && data.needsRenderFrame) {\n            this.triggerRenderFrame();\n          }\n        }\n      }\n      // @ts-ignore\n      if (data || handler.isActive()) {\n        activeHandlers[handlerName] = handler;\n      }\n    }\n\n    const deactivatedHandlers: { [key: string]: any } = {};\n    for (const name in this.previousActiveHandlers) {\n      if (!activeHandlers[name]) {\n        deactivatedHandlers[name] = inputEvent;\n      }\n    }\n    this.previousActiveHandlers = activeHandlers;\n    if (\n      Object.keys(deactivatedHandlers).length ||\n      hasChange(mergedIHandlerResult)\n    ) {\n      this.changes.push([\n        mergedIHandlerResult,\n        eventsInProgress,\n        deactivatedHandlers,\n      ]);\n      this.triggerRenderFrame();\n    }\n\n    if (Object.keys(activeHandlers).length || hasChange(mergedIHandlerResult)) {\n      this.map.stop(true);\n    }\n\n    this.updatingCamera = false;\n\n    const { cameraAnimation } = mergedIHandlerResult;\n    if (cameraAnimation) {\n      this.inertia.clear();\n      this.fireEvents({}, {});\n      this.changes = [];\n      cameraAnimation(this.map);\n    }\n  };\n\n  public mergeIHandlerResult(\n    mergedIHandlerResult: IHandlerResult,\n    eventsInProgress: { [key: string]: any },\n    HandlerResult: IHandlerResult,\n    name: string,\n    e?: InputEvent,\n  ) {\n    if (!HandlerResult) {\n      return;\n    }\n\n    merge(mergedIHandlerResult, HandlerResult);\n\n    const eventData = {\n      handlerName: name,\n      originalEvent: HandlerResult.originalEvent || e,\n    };\n\n    // track which handler changed which camera property\n    if (HandlerResult.zoomDelta !== undefined) {\n      eventsInProgress.zoom = eventData;\n    }\n    if (HandlerResult.panDelta !== undefined) {\n      eventsInProgress.drag = eventData;\n    }\n    if (HandlerResult.pitchDelta !== undefined) {\n      eventsInProgress.pitch = eventData;\n    }\n    if (HandlerResult.bearingDelta !== undefined) {\n      eventsInProgress.rotate = eventData;\n    }\n  }\n\n  public triggerRenderFrame() {\n    if (this.frameId === undefined) {\n      this.frameId = this.map.requestRenderFrame((timeStamp: number) => {\n        delete this.frameId;\n        this.handleEvent(new RenderFrameEvent('renderFrame', { timeStamp }));\n        this.applyChanges();\n      });\n    }\n  }\n\n  private addDefaultHandlers(options: IHandlerOptions) {\n    const map = this.map;\n    const el = map.getCanvasContainer();\n    this.add('mapEvent', new MapEventHandler(map, options));\n\n    const boxZoom = (map.boxZoom = new BoxZoomHandler(map, options));\n    this.add('boxZoom', boxZoom);\n\n    const tapZoom = new TapZoomHandler();\n    const clickZoom = new ClickZoomHandler();\n    map.doubleClickZoom = new DoubleClickZoomHandler(clickZoom, tapZoom);\n    this.add('tapZoom', tapZoom);\n    this.add('clickZoom', clickZoom);\n\n    const tapDragZoom = new TapDragZoomHandler();\n    this.add('tapDragZoom', tapDragZoom);\n\n    const touchPitch = (map.touchPitch = new TouchPitchHandler());\n    this.add('touchPitch', touchPitch);\n\n    const mouseRotate = new MouseRotateHandler(options);\n    const mousePitch = new MousePitchHandler(options);\n    map.dragRotate = new DragRotateHandler(options, mouseRotate, mousePitch);\n    this.add('mouseRotate', mouseRotate, ['mousePitch']);\n    this.add('mousePitch', mousePitch, ['mouseRotate']);\n\n    const mousePan = new MousePanHandler(options);\n    const touchPan = new TouchPanHandler(options);\n    map.dragPan = new DragPanHandler(el, mousePan, touchPan);\n    this.add('mousePan', mousePan);\n    this.add('touchPan', touchPan, ['touchZoom', 'touchRotate']);\n\n    const touchRotate = new TouchRotateHandler();\n    const touchZoom = new TouchZoomHandler();\n    map.touchZoomRotate = new TouchZoomRotateHandler(\n      el,\n      touchZoom,\n      touchRotate,\n      tapDragZoom,\n    );\n    this.add('touchRotate', touchRotate, ['touchPan', 'touchZoom']);\n    this.add('touchZoom', touchZoom, ['touchPan', 'touchRotate']);\n\n    const scrollZoom = (map.scrollZoom = new ScrollZoomHandler(map, this));\n    this.add('scrollZoom', scrollZoom, ['mousePan']);\n\n    const keyboard = (map.keyboard = new KeyboardHandler());\n    this.add('keyboard', keyboard);\n\n    this.add('blockableMapEvent', new BlockableMapEventHandler(map));\n\n    for (const name of [\n      'boxZoom',\n      'doubleClickZoom',\n      'tapDragZoom',\n      'touchPitch',\n      'dragRotate',\n      'dragPan',\n      'touchZoomRotate',\n      'scrollZoom',\n      'keyboard',\n    ]) {\n      // @ts-ignore\n      if (options.interactive && options[name]) {\n        // @ts-ignore\n        map[name].enable(options[name]);\n      }\n    }\n  }\n\n  private add(handlerName: string, handler: IHandler, allowed?: string[]) {\n    this.handlers.push({ handlerName, handler, allowed });\n    this.handlersById[handlerName] = handler;\n  }\n\n  private blockedByActive(\n    activeHandlers: { [key: string]: IHandler },\n    allowed: string[],\n    myName: string,\n  ) {\n    for (const name in activeHandlers) {\n      if (name === myName) {\n        continue;\n      }\n      if (!allowed || allowed.indexOf(name) < 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getMapTouches(touches: Touch[]): Touch[] {\n    const mapTouches = [];\n    for (const t of touches) {\n      const target = t.target as Node;\n      if (this.el.contains(target)) {\n        mapTouches.push(t);\n      }\n    }\n    return mapTouches;\n  }\n\n  private applyChanges() {\n    const combined: { [key: string]: any } = {};\n    const combinedEventsInProgress = {};\n    const combinedDeactivatedHandlers = {};\n\n    for (const [change, eventsInProgress, deactivatedHandlers] of this\n      .changes) {\n      if (change.panDelta) {\n        combined.panDelta = (combined.panDelta || new Point(0, 0))._add(\n          change.panDelta,\n        );\n      }\n      if (change.zoomDelta) {\n        combined.zoomDelta = (combined.zoomDelta || 0) + change.zoomDelta;\n      }\n      if (change.bearingDelta) {\n        combined.bearingDelta =\n          (combined.bearingDelta || 0) + change.bearingDelta;\n      }\n      if (change.pitchDelta) {\n        combined.pitchDelta = (combined.pitchDelta || 0) + change.pitchDelta;\n      }\n      if (change.around !== undefined) {\n        combined.around = change.around;\n      }\n      if (change.pinchAround !== undefined) {\n        combined.pinchAround = change.pinchAround;\n      }\n      if (change.noInertia) {\n        combined.noInertia = change.noInertia;\n      }\n\n      merge(combinedEventsInProgress, eventsInProgress);\n      merge(combinedDeactivatedHandlers, deactivatedHandlers);\n    }\n\n    this.updateMapTransform(\n      combined,\n      combinedEventsInProgress,\n      combinedDeactivatedHandlers,\n    );\n    this.changes = [];\n  }\n\n  private updateMapTransform(\n    combinedResult: any,\n    combinedEventsInProgress: any,\n    deactivatedHandlers: any,\n  ) {\n    const map = this.map;\n    const tr = map.transform;\n\n    if (!hasChange(combinedResult)) {\n      return this.fireEvents(combinedEventsInProgress, deactivatedHandlers);\n    }\n    const {\n      panDelta,\n      zoomDelta,\n      bearingDelta,\n      pitchDelta,\n      pinchAround,\n    } = combinedResult;\n    let { around } = combinedResult;\n\n    if (pinchAround !== undefined) {\n      around = pinchAround;\n    }\n\n    // stop any ongoing camera animations (easeTo, flyTo)\n    map.stop(true);\n\n    around = around || map.transform.centerPoint;\n    const loc = tr.pointLocation(panDelta ? around.sub(panDelta) : around);\n    if (bearingDelta) {\n      tr.bearing += bearingDelta;\n    }\n    if (pitchDelta) {\n      tr.pitch += pitchDelta;\n    }\n    if (zoomDelta) {\n      tr.zoom += zoomDelta;\n    }\n    tr.setLocationAtPoint(loc, around);\n\n    this.map.update();\n    if (!combinedResult.noInertia) {\n      this.inertia.record(combinedResult);\n    }\n    this.fireEvents(combinedEventsInProgress, deactivatedHandlers);\n  }\n\n  private fireEvents(\n    newEventsInProgress: { [key: string]: any },\n    deactivatedHandlers: { [key: string]: any },\n  ) {\n    const wasMoving = isMoving(this.eventsInProgress);\n    const nowMoving = isMoving(newEventsInProgress);\n\n    const startEvents: { [key: string]: any } = {};\n\n    for (const eventName in newEventsInProgress) {\n      if (newEventsInProgress[eventName]) {\n        const { originalEvent } = newEventsInProgress[eventName];\n        if (!this.eventsInProgress[eventName]) {\n          startEvents[`${eventName}start`] = originalEvent;\n        }\n\n        this.eventsInProgress[eventName] = newEventsInProgress[eventName];\n      }\n    }\n\n    // fire start events only after this.eventsInProgress has been updated\n    if (!wasMoving && nowMoving) {\n      this.fireEvent('movestart', nowMoving.originalEvent);\n    }\n\n    for (const name in startEvents) {\n      if (startEvents[name]) {\n        this.fireEvent(name, startEvents[name]);\n      }\n    }\n\n    if (newEventsInProgress.rotate) {\n      this.bearingChanged = true;\n    }\n\n    if (nowMoving) {\n      this.fireEvent('move', nowMoving.originalEvent);\n    }\n\n    for (const eventName in newEventsInProgress) {\n      if (newEventsInProgress[eventName]) {\n        const { originalEvent } = newEventsInProgress[eventName];\n        this.fireEvent(eventName, originalEvent);\n      }\n    }\n\n    const endEvents: { [key: string]: any } = {};\n\n    let originalEndEvent;\n    for (const eventName in this.eventsInProgress) {\n      if (this.eventsInProgress[eventName]) {\n        const { handlerName, originalEvent } = this.eventsInProgress[eventName];\n        if (!this.handlersById[handlerName].isActive()) {\n          delete this.eventsInProgress[eventName];\n          originalEndEvent = deactivatedHandlers[handlerName] || originalEvent;\n          endEvents[`${eventName}end`] = originalEndEvent;\n        }\n      }\n    }\n\n    for (const name in endEvents) {\n      if (endEvents[name]) {\n        this.fireEvent(name, endEvents[name]);\n      }\n    }\n\n    const stillMoving = isMoving(this.eventsInProgress);\n    if ((wasMoving || nowMoving) && !stillMoving) {\n      this.updatingCamera = true;\n      const inertialEase = this.inertia.onMoveEnd(\n        this.map.dragPan.inertiaOptions,\n      );\n\n      const shouldSnapToNorth = (bearing: number) =>\n        bearing !== 0 &&\n        -this.bearingSnap < bearing &&\n        bearing < this.bearingSnap;\n\n      if (inertialEase) {\n        if (shouldSnapToNorth(inertialEase.bearing || this.map.getBearing())) {\n          inertialEase.bearing = 0;\n        }\n        this.map.easeTo(inertialEase, { originalEvent: originalEndEvent });\n      } else {\n        this.map.emit(\n          'moveend',\n          new Event('moveend', { originalEvent: originalEndEvent }),\n        );\n        if (shouldSnapToNorth(this.map.getBearing())) {\n          this.map.resetNorth();\n        }\n      }\n      this.bearingChanged = false;\n      this.updatingCamera = false;\n    }\n  }\n\n  private fireEvent(type: string, e: any) {\n    this.map.emit(type, new Event(type, e ? { originalEvent: e } : {}));\n  }\n}\n\nexport default HandlerManager;\n"],"file":"handler_manager.js"}