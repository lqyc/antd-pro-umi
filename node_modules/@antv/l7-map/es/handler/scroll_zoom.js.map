{"version":3,"sources":["../../src/handler/scroll_zoom.ts"],"names":["LngLat","bezier","ease","interpolate","now","DOM","wheelZoomDelta","defaultZoomRate","wheelZoomRate","maxScalePerFrame","ScrollZoomHandler","map","handler","el","enabled","active","zooming","aroundCenter","around","aroundPoint","type","lastValue","timeout","finishTimeout","lastWheelEvent","lastWheelEventTime","startZoom","targetZoom","delta","easing","prevEase","frameId","onScrollFrame","isActive","tr","transform","zoomRate","Math","abs","scale","exp","fromScale","zoomScale","min","maxZoom","max","minZoom","scaleZoom","zoom","smoothOutEasing","finished","t","k","setTimeout","triggerRenderFrame","noInertia","needsRenderFrame","zoomDelta","originalEvent","getCanvasContainer","undefined","options","isEnabled","e","value","deltaMode","window","WheelEvent","DOM_DELTA_LINE","deltaY","nowTime","timeDelta","onTimeout","clearTimeout","shiftKey","start","preventDefault","initialEvent","isZooming","pos","mousePos","convert","getCenter","unproject","locationPoint","duration","preEase","speed","x","sqrt","y"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport LngLat from '../geo/lng_lat';\nimport Point from '../geo/point';\nimport { Map } from '../map';\nimport { bezier, ease, interpolate, now } from '../util';\nimport DOM from '../utils/dom';\nimport HandlerManager from './handler_manager';\n\n// deltaY value for mouse scroll wheel identification\nconst wheelZoomDelta = 4.000244140625;\n\n// These magic numbers control the rate of zoom. Trackpad events fire at a greater\n// frequency than mouse scroll wheel, so reduce the zoom rate per wheel tick\nconst defaultZoomRate = 1 / 100;\nconst wheelZoomRate = 1 / 450;\n\n// upper bound on how much we scale the map in any single render frame; this\n// is used to limit zoom rate in the case of very fast scrolling\nconst maxScalePerFrame = 2;\n\n/**\n * The `ScrollZoomHandler` allows the user to zoom the map by scrolling.\n */\nclass ScrollZoomHandler {\n  private map: Map;\n  private el: HTMLElement;\n  private enabled: boolean;\n  private active: boolean;\n  private zooming: boolean;\n  private aroundCenter: boolean;\n  private around: LngLat;\n  private aroundPoint: Point;\n  private type: 'wheel' | 'trackpad' | null;\n  private lastValue: number;\n  private timeout: number | null; // used for delayed-handling of a single wheel movement\n  private finishTimeout: number; // used to delay final '{move,zoom}end' events\n\n  private lastWheelEvent: any;\n  private lastWheelEventTime: number;\n\n  private startZoom: number;\n  private targetZoom: number;\n  private delta: number;\n  private easing: (time: number) => number;\n  private prevEase: {\n    start: number;\n    duration: number;\n    easing: (_: number) => number;\n  };\n\n  private frameId: boolean | null;\n  private handler: HandlerManager;\n\n  private defaultZoomRate: number;\n  private wheelZoomRate: number;\n\n  /**\n   * @private\n   */\n  constructor(map: Map, handler: HandlerManager) {\n    this.map = map;\n    this.el = map.getCanvasContainer();\n    this.handler = handler;\n\n    this.delta = 0;\n    this.defaultZoomRate = defaultZoomRate;\n    this.wheelZoomRate = wheelZoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a trackpad\n   * @param {number} [zoomRate=1/100] The rate used to scale trackpad movement to a zoom value.\n   * @example\n   * // Speed up trackpad zoom\n   * map.scrollZoom.setZoomRate(1/25);\n   */\n  public setZoomRate(zoomRate: number) {\n    this.defaultZoomRate = zoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a mouse wheel\n   * @param {number} [wheelZoomRate=1/450] The rate used to scale mouse wheel movement to a zoom value.\n   * @example\n   * // Slow down zoom of mouse wheel\n   * map.scrollZoom.setWheelZoomRate(1/600);\n   */\n  public setWheelZoomRate(zoomRate: number) {\n    this.wheelZoomRate = zoomRate;\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"scroll to zoom\" interaction is enabled.\n   *\n   * @returns {boolean} `true` if the \"scroll to zoom\" interaction is enabled.\n   */\n  public isEnabled() {\n    return !!this.enabled;\n  }\n\n  /*\n   * Active state is turned on and off with every scroll wheel event and is set back to false before the map\n   * render is called, so _active is not a good candidate for determining if a scroll zoom animation is in\n   * progress.\n   */\n  public isActive() {\n    return !!this.active || this.finishTimeout !== undefined;\n  }\n\n  public isZooming() {\n    return !!this.zooming;\n  }\n\n  /**\n   * Enables the \"scroll to zoom\" interaction.\n   *\n   * @param {Object} [options] Options object.\n   * @param {string} [options.around] If \"center\" is passed, map will zoom around center of map\n   *\n   * @example\n   *   map.scrollZoom.enable();\n   * @example\n   *  map.scrollZoom.enable({ around: 'center' })\n   */\n  public enable(options?: any) {\n    if (this.isEnabled()) {\n      return;\n    }\n    this.enabled = true;\n    this.aroundCenter = options && options.around === 'center';\n  }\n\n  /**\n   * Disables the \"scroll to zoom\" interaction.\n   *\n   * @example\n   *   map.scrollZoom.disable();\n   */\n  public disable() {\n    if (!this.isEnabled()) {\n      return;\n    }\n    this.enabled = false;\n  }\n\n  public wheel(e: WheelEvent) {\n    if (!this.isEnabled()) {\n      return;\n    }\n    // Remove `any` cast when https://github.com/facebook/flow/issues/4879 is fixed.\n    let value =\n      e.deltaMode === window.WheelEvent.DOM_DELTA_LINE\n        ? e.deltaY * 40\n        : e.deltaY;\n    const nowTime = now();\n    const timeDelta = nowTime - (this.lastWheelEventTime || 0);\n\n    this.lastWheelEventTime = nowTime;\n\n    if (value !== 0 && value % wheelZoomDelta === 0) {\n      // This one is definitely a mouse wheel event.\n      this.type = 'wheel';\n    } else if (value !== 0 && Math.abs(value) < 4) {\n      // This one is definitely a trackpad event because it is so small.\n      this.type = 'trackpad';\n    } else if (timeDelta > 400) {\n      // This is likely a new scroll action.\n      this.type = null;\n      this.lastValue = value;\n\n      // Start a timeout in case this was a singular event, and dely it by up to 40ms.\n      // @ts-ignore\n      this.timeout = setTimeout(this.onTimeout, 40, e);\n    } else if (!this.type) {\n      // This is a repeating event, but we don't know the type of event just yet.\n      // If the delta per time is small, we assume it's a fast trackpad; otherwise we switch into wheel mode.\n      this.type = Math.abs(timeDelta * value) < 200 ? 'trackpad' : 'wheel';\n\n      // Make sure our delayed event isn't fired again, because we accumulate\n      // the previous event (which was less than 40ms ago) into this event.\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n        value += this.lastValue;\n      }\n    }\n\n    // Slow down zoom if shift key is held for more precise zooming\n    if (e.shiftKey && value) {\n      value = value / 4;\n    }\n    // Only fire the callback if we actually know what type of scrolling device the user uses.\n    if (this.type) {\n      this.lastWheelEvent = e;\n      this.delta -= value;\n      if (!this.active) {\n        this.start(e);\n      }\n    }\n\n    e.preventDefault();\n  }\n\n  public renderFrame() {\n    return this.onScrollFrame();\n  }\n\n  public reset() {\n    this.active = false;\n  }\n\n  private onScrollFrame = () => {\n    if (!this.frameId) {\n      return;\n    }\n    this.frameId = null;\n\n    if (!this.isActive()) {\n      return;\n    }\n    const tr = this.map.transform;\n\n    // if we've had scroll events since the last render frame, consume the\n    // accumulated delta, and update the target zoom level accordingly\n    if (this.delta !== 0) {\n      // For trackpad events and single mouse wheel ticks, use the default zoom rate\n      const zoomRate =\n        this.type === 'wheel' && Math.abs(this.delta) > wheelZoomDelta\n          ? this.wheelZoomRate\n          : this.defaultZoomRate;\n      // Scale by sigmoid of scroll wheel delta.\n      let scale =\n        maxScalePerFrame / (1 + Math.exp(-Math.abs(this.delta * zoomRate)));\n\n      if (this.delta < 0 && scale !== 0) {\n        scale = 1 / scale;\n      }\n\n      const fromScale =\n        typeof this.targetZoom === 'number'\n          ? tr.zoomScale(this.targetZoom)\n          : tr.scale;\n      this.targetZoom = Math.min(\n        tr.maxZoom,\n        Math.max(tr.minZoom, tr.scaleZoom(fromScale * scale)),\n      );\n\n      // if this is a mouse wheel, refresh the starting zoom and easing\n      // function we're using to smooth out the zooming between wheel\n      // events\n      if (this.type === 'wheel') {\n        this.startZoom = tr.zoom;\n        this.easing = this.smoothOutEasing(200);\n      }\n\n      this.delta = 0;\n    }\n\n    const targetZoom =\n      typeof this.targetZoom === 'number' ? this.targetZoom : tr.zoom;\n    const startZoom = this.startZoom;\n    const easing = this.easing;\n\n    let finished = false;\n    let zoom;\n    if (this.type === 'wheel' && startZoom && easing) {\n      const t = Math.min((now() - this.lastWheelEventTime) / 200, 1);\n      const k = easing(t);\n      zoom = interpolate(startZoom, targetZoom, k);\n      if (t < 1) {\n        if (!this.frameId) {\n          this.frameId = true;\n        }\n      } else {\n        finished = true;\n      }\n    } else {\n      zoom = targetZoom;\n      finished = true;\n    }\n\n    this.active = true;\n\n    if (finished) {\n      this.active = false;\n      // @ts-ignore\n      this.finishTimeout = setTimeout(() => {\n        this.zooming = false;\n        this.handler.triggerRenderFrame();\n        delete this.targetZoom;\n        delete this.finishTimeout;\n      }, 200);\n    }\n\n    return {\n      noInertia: true,\n      needsRenderFrame: !finished,\n      zoomDelta: zoom - tr.zoom,\n      around: this.aroundPoint,\n      originalEvent: this.lastWheelEvent,\n    };\n  };\n\n  private onTimeout(initialEvent: any) {\n    this.type = 'wheel';\n    this.delta -= this.lastValue;\n    if (!this.active) {\n      this.start(initialEvent);\n    }\n  }\n\n  private start(e: any) {\n    if (!this.delta) {\n      return;\n    }\n\n    if (this.frameId) {\n      this.frameId = null;\n    }\n\n    this.active = true;\n    if (!this.isZooming()) {\n      this.zooming = true;\n    }\n\n    if (this.finishTimeout) {\n      clearTimeout(this.finishTimeout);\n      delete this.finishTimeout;\n    }\n\n    const pos = DOM.mousePos(this.el, e);\n\n    this.around = LngLat.convert(\n      this.aroundCenter ? this.map.getCenter() : this.map.unproject(pos),\n    );\n    this.aroundPoint = this.map.transform.locationPoint(this.around);\n    if (!this.frameId) {\n      this.frameId = true;\n      this.handler.triggerRenderFrame();\n    }\n  }\n\n  private smoothOutEasing(duration: number) {\n    let easing = ease;\n\n    if (this.prevEase) {\n      const preEase = this.prevEase;\n      const t = (now() - preEase.start) / preEase.duration;\n      const speed = preEase.easing(t + 0.01) - preEase.easing(t);\n\n      // Quick hack to make new bezier that is continuous with last\n      const x = (0.27 / Math.sqrt(speed * speed + 0.0001)) * 0.01;\n      const y = Math.sqrt(0.27 * 0.27 - x * x);\n\n      easing = bezier(x, y, 0.25, 1);\n    }\n\n    this.prevEase = {\n      start: now(),\n      duration,\n      easing,\n    };\n\n    return easing;\n  }\n}\n\nexport default ScrollZoomHandler;\n"],"file":"scroll_zoom.js"}