{"version":3,"sources":["../../../src/handler/mouse/mouserotate_hander.ts"],"names":["MouseHandler","LEFT_BUTTON","RIGHT_BUTTON","MouseRotateHandler","e","preventDefault","button","ctrlKey","lastPoint","point","degreesPerPixelMoved","bearingDelta","x","active"],"mappings":";;;;;;;;;;AAEA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,QAA1C;;IACqBC,kB;;;;;;;;;;;;;WACnB,qBAAmBC,CAAnB,EAAkC;AAGhCA,MAAAA,CAAC,CAACC,cAAF;AACD;;;WACD,uBAAwBD,CAAxB,EAAuCE,MAAvC,EAAuD;AACrD,aAAQA,MAAM,KAAKL,WAAX,IAA0BG,CAAC,CAACG,OAA7B,IAAyCD,MAAM,KAAKJ,YAA3D;AACD;;;WAED,cAAeM,SAAf,EAAiCC,KAAjC,EAA+C;AAC7C,UAAMC,oBAAoB,GAAG,GAA7B;AACA,UAAMC,YAAY,GAAG,CAACF,KAAK,CAACG,CAAN,GAAUJ,SAAS,CAACI,CAArB,IAA0BF,oBAA/C;;AACA,UAAIC,YAAJ,EAAkB;AAChB,aAAKE,MAAL,GAAc,IAAd;AACA,eAAO;AAAEF,UAAAA,YAAY,EAAZA;AAAF,SAAP;AACD;AACF;;;;EAjB6CX,Y;;SAA3BG,kB","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport MouseHandler from './mouse_handler';\nimport { LEFT_BUTTON, RIGHT_BUTTON } from './util';\nexport default class MouseRotateHandler extends MouseHandler {\n  public contextmenu(e: MouseEvent) {\n    // prevent browser context menu when necessary; we don't allow it with rotation\n    // because we can't discern rotation gesture start from contextmenu on Mac\n    e.preventDefault();\n  }\n  protected correctButton(e: MouseEvent, button: number) {\n    return (button === LEFT_BUTTON && e.ctrlKey) || button === RIGHT_BUTTON;\n  }\n\n  protected move(lastPoint: Point, point: Point) {\n    const degreesPerPixelMoved = 0.8;\n    const bearingDelta = (point.x - lastPoint.x) * degreesPerPixelMoved;\n    if (bearingDelta) {\n      this.active = true;\n      return { bearingDelta };\n    }\n  }\n}\n"],"file":"mouserotate_hander.js"}