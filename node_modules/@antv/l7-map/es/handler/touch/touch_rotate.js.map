{"version":3,"sources":["../../../src/handler/touch/touch_rotate.ts"],"names":["TwoTouchHandler","ROTATION_THRESHOLD","getBearingDelta","a","b","angleWith","Math","PI","TouchRotateHandler","minDiameter","startVector","vector","points","sub","dist","pinchAround","lastVector","active","isBelowThreshold","bearingDelta","min","mag","circumference","threshold","bearingDeltaSinceStart","abs"],"mappings":";;;;;;;;;;;AAGA,OAAOA,eAAP,MAA4B,aAA5B;AAEA,IAAMC,kBAAkB,GAAG,EAA3B;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAAmCC,CAAnC,EAA6C;AAC3C,SAAQD,CAAC,CAACE,SAAF,CAAYD,CAAZ,IAAiB,GAAlB,GAAyBE,IAAI,CAACC,EAArC;AACD;;IAEoBC,kB;;;;;;;;;;;;;;;UACXC,W;;;;;;WAER,iBAAe;AACb;;AACA,aAAO,KAAKA,WAAZ;AACA,aAAO,KAAKC,WAAZ;AACA,aAAO,KAAKC,MAAZ;AACD;;;WAED,eAAaC,MAAb,EAAqC;AACnC,WAAKF,WAAL,GAAmB,KAAKC,MAAL,GAAcC,MAAM,CAAC,CAAD,CAAN,CAAUC,GAAV,CAAcD,MAAM,CAAC,CAAD,CAApB,CAAjC;AACA,WAAKH,WAAL,GAAmBG,MAAM,CAAC,CAAD,CAAN,CAAUE,IAAV,CAAeF,MAAM,CAAC,CAAD,CAArB,CAAnB;AACD;;;WAED,cAAYA,MAAZ,EAAoCG,WAApC,EAAwD;AACtD,UAAMC,UAAU,GAAG,KAAKL,MAAxB;AACA,WAAKA,MAAL,GAAcC,MAAM,CAAC,CAAD,CAAN,CAAUC,GAAV,CAAcD,MAAM,CAAC,CAAD,CAApB,CAAd;;AAEA,UAAI,CAAC,KAAKK,MAAN,IAAgB,KAAKC,gBAAL,CAAsB,KAAKP,MAA3B,CAApB,EAAwD;AACtD;AACD;;AACD,WAAKM,MAAL,GAAc,IAAd;AAEA,aAAO;AACLE,QAAAA,YAAY,EAAEjB,eAAe,CAAC,KAAKS,MAAN,EAAcK,UAAd,CADxB;AAELD,QAAAA,WAAW,EAAXA;AAFK,OAAP;AAID;;;WAED,0BAAyBJ,MAAzB,EAAwC;AAWtC,WAAKF,WAAL,GAAmBH,IAAI,CAACc,GAAL,CAAS,KAAKX,WAAd,EAA2BE,MAAM,CAACU,GAAP,EAA3B,CAAnB;AACA,UAAMC,aAAa,GAAGhB,IAAI,CAACC,EAAL,GAAU,KAAKE,WAArC;AACA,UAAMc,SAAS,GAAItB,kBAAkB,GAAGqB,aAAtB,GAAuC,GAAzD;AAEA,UAAME,sBAAsB,GAAGtB,eAAe,CAACS,MAAD,EAAS,KAAKD,WAAd,CAA9C;AACA,aAAOJ,IAAI,CAACmB,GAAL,CAASD,sBAAT,IAAmCD,SAA1C;AACD;;;;EA/C6CvB,e;;SAA3BQ,kB","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\nimport TwoTouchHandler from './two_touch';\n\nconst ROTATION_THRESHOLD = 25; // pixels along circumference of touch circle\n\nfunction getBearingDelta(a: Point, b: Point) {\n  return (a.angleWith(b) * 180) / Math.PI;\n}\n\nexport default class TouchRotateHandler extends TwoTouchHandler {\n  private minDiameter: number;\n\n  public reset() {\n    super.reset();\n    delete this.minDiameter;\n    delete this.startVector;\n    delete this.vector;\n  }\n\n  public start(points: [Point, Point]) {\n    this.startVector = this.vector = points[0].sub(points[1]);\n    this.minDiameter = points[0].dist(points[1]);\n  }\n\n  public move(points: [Point, Point], pinchAround: Point) {\n    const lastVector = this.vector;\n    this.vector = points[0].sub(points[1]);\n\n    if (!this.active && this.isBelowThreshold(this.vector)) {\n      return;\n    }\n    this.active = true;\n\n    return {\n      bearingDelta: getBearingDelta(this.vector, lastVector),\n      pinchAround,\n    };\n  }\n\n  private isBelowThreshold(vector: Point) {\n    /*\n     * The threshold before a rotation actually happens is configured in\n     * pixels alongth circumference of the circle formed by the two fingers.\n     * This makes the threshold in degrees larger when the fingers are close\n     * together and smaller when the fingers are far apart.\n     *\n     * Use the smallest diameter from the whole gesture to reduce sensitivity\n     * when pinching in and out.\n     */\n\n    this.minDiameter = Math.min(this.minDiameter, vector.mag());\n    const circumference = Math.PI * this.minDiameter;\n    const threshold = (ROTATION_THRESHOLD / circumference) * 360;\n\n    const bearingDeltaSinceStart = getBearingDelta(vector, this.startVector);\n    return Math.abs(bearingDeltaSinceStart) < threshold;\n  }\n}\n"],"file":"touch_rotate.js"}