export interface ICancelable {
    cancel: () => void;
}
export declare function wrap(n: number, min: number, max: number): number;
export declare function clamp(n: number, min: number, max: number): number;
export declare function interpolate(a: number, b: number, t: number): number;
export declare function bezier(p1x: number, p1y: number, p2x: number, p2y: number): (t: number) => number;
export declare const ease: (t: number) => number;
export declare function prefersReducedMotion(): boolean;
export declare function pick(src: {
    [key: string]: any;
}, properties: string[]): {
    [key: string]: any;
};
export declare const now: () => number;
export declare const raf: ((callback: FrameRequestCallback) => number) & typeof requestAnimationFrame;
export declare const cancel: ((handle: number) => void) & typeof cancelAnimationFrame;
export declare function renderframe(fn: (paintStartTimestamp: number) => void): ICancelable;
