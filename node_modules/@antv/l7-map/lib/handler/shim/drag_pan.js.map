{"version":3,"sources":["../../../src/handler/shim/drag_pan.ts"],"names":["DragPanHandler","el","mousePan","touchPan","inertiaOptions","options","enable","classList","add","disable","remove","isEnabled","isActive"],"mappings":";;;;;;;;;;;;;IAcqBA,c;AAQnB,0BACEC,EADF,EAEEC,QAFF,EAGEC,QAHF,EAIE;AAAA;AAAA,SAXKC,cAWL;AAAA,SAVMH,EAUN;AAAA,SATMC,QASN;AAAA,SARMC,QAQN;AACA,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;;;WAqBD,gBAAcE,OAAd,EAAyC;AACvC,WAAKD,cAAL,GAAsBC,OAAO,IAAI,EAAjC;AACA,WAAKH,QAAL,CAAcI,MAAd;AACA,WAAKH,QAAL,CAAcG,MAAd;AACA,WAAKL,EAAL,CAAQM,SAAR,CAAkBC,GAAlB,CAAsB,mBAAtB;AACD;;;WAQD,mBAAiB;AACf,WAAKN,QAAL,CAAcO,OAAd;AACA,WAAKN,QAAL,CAAcM,OAAd;AACA,WAAKR,EAAL,CAAQM,SAAR,CAAkBG,MAAlB,CAAyB,mBAAzB;AACD;;;WAOD,qBAAmB;AACjB,aAAO,KAAKR,QAAL,CAAcS,SAAd,MAA6B,KAAKR,QAAL,CAAcQ,SAAd,EAApC;AACD;;;WAOD,oBAAkB;AAChB,aAAO,KAAKT,QAAL,CAAcU,QAAd,MAA4B,KAAKT,QAAL,CAAcS,QAAd,EAAnC;AACD","sourcesContent":["import { MousePanHandler } from '../mouse/';\nimport { TouchPanHandler } from '../touch/';\n\nexport interface IDragPanOptions {\n  linearity?: number;\n  easing?: (t: number) => number;\n  deceleration?: number;\n  maxSpeed?: number;\n}\n\n/**\n * The `DragPanHandler` allows the user to pan the map by clicking and dragging\n * the cursor.\n */\nexport default class DragPanHandler {\n  public inertiaOptions: IDragPanOptions;\n  private el: HTMLElement;\n  private mousePan: MousePanHandler;\n  private touchPan: TouchPanHandler;\n  /**\n   * @private\n   */\n  constructor(\n    el: HTMLElement,\n    mousePan: MousePanHandler,\n    touchPan: TouchPanHandler,\n  ) {\n    this.el = el;\n    this.mousePan = mousePan;\n    this.touchPan = touchPan;\n  }\n\n  /**\n   * Enables the \"drag to pan\" interaction.\n   *\n   * @param {Object} [options] Options object\n   * @param {number} [options.linearity=0] factor used to scale the drag velocity\n   * @param {Function} [options.easing=bezier(0, 0, 0.3, 1)] easing function applled to `map.panTo` when applying the drag.\n   * @param {number} [options.maxSpeed=1400] the maximum value of the drag velocity.\n   * @param {number} [options.deceleration=2500] the rate at which the speed reduces after the pan ends.\n   *\n   * @example\n   *   map.dragPan.enable();\n   * @example\n   *   map.dragPan.enable({\n   *      linearity: 0.3,\n   *      easing: bezier(0, 0, 0.3, 1),\n   *      maxSpeed: 1400,\n   *      deceleration: 2500,\n   *   });\n   */\n  public enable(options?: IDragPanOptions) {\n    this.inertiaOptions = options || {};\n    this.mousePan.enable();\n    this.touchPan.enable();\n    this.el.classList.add('l7-touch-drag-pan');\n  }\n\n  /**\n   * Disables the \"drag to pan\" interaction.\n   *\n   * @example\n   * map.dragPan.disable();\n   */\n  public disable() {\n    this.mousePan.disable();\n    this.touchPan.disable();\n    this.el.classList.remove('l7-touch-drag-pan');\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pan\" interaction is enabled.\n   *\n   * @returns {boolean} `true` if the \"drag to pan\" interaction is enabled.\n   */\n  public isEnabled() {\n    return this.mousePan.isEnabled() && this.touchPan.isEnabled();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pan\" interaction is active, i.e. currently being used.\n   *\n   * @returns {boolean} `true` if the \"drag to pan\" interaction is active.\n   */\n  public isActive() {\n    return this.mousePan.isActive() || this.touchPan.isActive();\n  }\n}\n"],"file":"drag_pan.js"}