{"version":3,"sources":["../../../src/handler/shim/touch_zoom_rotate.ts"],"names":["TouchZoomRotateHandler","el","touchZoom","touchRotate","tapDragZoom","rotationDisabled","enabled","options","enable","classList","add","disable","remove","isEnabled","isActive"],"mappings":";;;;;;;;;;;;;IAUqBA,sB;AAWnB,kCACEC,EADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,WAJF,EAKE;AAAA;AAAA,SAfMH,EAeN;AAAA,SAdMC,SAcN;AAAA,SAbMC,WAaN;AAAA,SAZMC,WAYN;AAAA,SAXMC,gBAWN;AAAA,SAVMC,OAUN;AACA,SAAKL,EAAL,GAAUA,EAAV;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;;;WAaD,gBAAcC,OAAd,EAA8C;AAC5C,WAAKL,SAAL,CAAeM,MAAf,CAAsBD,OAAtB;;AACA,UAAI,CAAC,KAAKF,gBAAV,EAA4B;AAC1B,aAAKF,WAAL,CAAiBK,MAAjB,CAAwBD,OAAxB;AACD;;AACD,WAAKH,WAAL,CAAiBI,MAAjB;AACA,WAAKP,EAAL,CAAQQ,SAAR,CAAkBC,GAAlB,CAAsB,sBAAtB;AACD;;;WAQD,mBAAiB;AACf,WAAKR,SAAL,CAAeS,OAAf;AACA,WAAKR,WAAL,CAAiBQ,OAAjB;AACA,WAAKP,WAAL,CAAiBO,OAAjB;AACA,WAAKV,EAAL,CAAQQ,SAAR,CAAkBG,MAAlB,CAAyB,sBAAzB;AACD;;;WAOD,qBAAmB;AACjB,aACE,KAAKV,SAAL,CAAeW,SAAf,OACC,KAAKR,gBAAL,IAAyB,KAAKF,WAAL,CAAiBU,SAAjB,EAD1B,KAEA,KAAKT,WAAL,CAAiBS,SAAjB,EAHF;AAKD;;;WAOD,oBAAkB;AAChB,aACE,KAAKX,SAAL,CAAeY,QAAf,MACA,KAAKX,WAAL,CAAiBW,QAAjB,EADA,IAEA,KAAKV,WAAL,CAAiBU,QAAjB,EAHF;AAKD;;;WASD,2BAAyB;AACvB,WAAKT,gBAAL,GAAwB,IAAxB;AACA,WAAKF,WAAL,CAAiBQ,OAAjB;AACD;;;WASD,0BAAwB;AACtB,WAAKN,gBAAL,GAAwB,KAAxB;;AACA,UAAI,KAAKH,SAAL,CAAeW,SAAf,EAAJ,EAAgC;AAC9B,aAAKV,WAAL,CAAiBK,MAAjB;AACD;AACF","sourcesContent":["import TapDragZoomHandler from '../tap/tap_drag_zoom';\nimport { TouchRotateHandler, TouchZoomHandler } from '../touch';\n\n/**\n * The `TouchZoomRotateHandler` allows the user to zoom and rotate the map by\n * pinching on a touchscreen.\n *\n * They can zoom with one finger by double tapping and dragging. On the second tap,\n * hold the finger down and drag up or down to zoom in or out.\n */\nexport default class TouchZoomRotateHandler {\n  private el: HTMLElement;\n  private touchZoom: TouchZoomHandler;\n  private touchRotate: TouchRotateHandler;\n  private tapDragZoom: TapDragZoomHandler;\n  private rotationDisabled: boolean;\n  private enabled: boolean;\n\n  /**\n   * @private\n   */\n  constructor(\n    el: HTMLElement,\n    touchZoom: TouchZoomHandler,\n    touchRotate: TouchRotateHandler,\n    tapDragZoom: TapDragZoomHandler,\n  ) {\n    this.el = el;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.tapDragZoom = tapDragZoom;\n    this.rotationDisabled = false;\n    this.enabled = true;\n  }\n\n  /**\n   * Enables the \"pinch to rotate and zoom\" interaction.\n   *\n   * @param {Object} [options] Options object.\n   * @param {string} [options.around] If \"center\" is passed, map will zoom around the center\n   *\n   * @example\n   *   map.touchZoomRotate.enable();\n   * @example\n   *   map.touchZoomRotate.enable({ around: 'center' });\n   */\n  public enable(options: { around?: 'center' }) {\n    this.touchZoom.enable(options);\n    if (!this.rotationDisabled) {\n      this.touchRotate.enable(options);\n    }\n    this.tapDragZoom.enable();\n    this.el.classList.add('l7-touch-zoom-rotate');\n  }\n\n  /**\n   * Disables the \"pinch to rotate and zoom\" interaction.\n   *\n   * @example\n   *   map.touchZoomRotate.disable();\n   */\n  public disable() {\n    this.touchZoom.disable();\n    this.touchRotate.disable();\n    this.tapDragZoom.disable();\n    this.el.classList.remove('l7-touch-zoom-rotate');\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"pinch to rotate and zoom\" interaction is enabled.\n   *\n   * @returns {boolean} `true` if the \"pinch to rotate and zoom\" interaction is enabled.\n   */\n  public isEnabled() {\n    return (\n      this.touchZoom.isEnabled() &&\n      (this.rotationDisabled || this.touchRotate.isEnabled()) &&\n      this.tapDragZoom.isEnabled()\n    );\n  }\n\n  /**\n   * Returns true if the handler is enabled and has detected the start of a zoom/rotate gesture.\n   *\n   * @returns {boolean} //eslint-disable-line\n   */\n  public isActive() {\n    return (\n      this.touchZoom.isActive() ||\n      this.touchRotate.isActive() ||\n      this.tapDragZoom.isActive()\n    );\n  }\n\n  /**\n   * Disables the \"pinch to rotate\" interaction, leaving the \"pinch to zoom\"\n   * interaction enabled.\n   *\n   * @example\n   *   map.touchZoomRotate.disableRotation();\n   */\n  public disableRotation() {\n    this.rotationDisabled = true;\n    this.touchRotate.disable();\n  }\n\n  /**\n   * Enables the \"pinch to rotate\" interaction.\n   *\n   * @example\n   *   map.touchZoomRotate.enable();\n   *   map.touchZoomRotate.enableRotation();\n   */\n  public enableRotation() {\n    this.rotationDisabled = false;\n    if (this.touchZoom.isEnabled()) {\n      this.touchRotate.enable();\n    }\n  }\n}\n"],"file":"touch_zoom_rotate.js"}