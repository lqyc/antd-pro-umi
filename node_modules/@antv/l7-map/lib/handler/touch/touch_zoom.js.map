{"version":3,"sources":["../../../src/handler/touch/touch_zoom.ts"],"names":["ZOOM_THRESHOLD","getZoomDelta","distance","lastDistance","Math","log","LN2","TouchZoomHandler","startDistance","points","dist","pinchAround","active","abs","zoomDelta","TwoTouchHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;AAEA,IAAMA,cAAc,GAAG,GAAvB;;AACA,SAASC,YAAT,CAAsBC,QAAtB,EAAwCC,YAAxC,EAA8D;AAC5D,SAAOC,IAAI,CAACC,GAAL,CAASH,QAAQ,GAAGC,YAApB,IAAoCC,IAAI,CAACE,GAAhD;AACD;;IACoBC,gB;;;;;;;;;;;;;;;UACXL,Q;UACAM,a;;;;;;WAER,iBAAe;AACb;AACA,aAAO,KAAKN,QAAZ;AACA,aAAO,KAAKM,aAAZ;AACD;;;WAED,eAAaC,MAAb,EAAqC;AACnC,WAAKD,aAAL,GAAqB,KAAKN,QAAL,GAAgBO,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,CAAeD,MAAM,CAAC,CAAD,CAArB,CAArC;AACD;;;WAED,cAAYA,MAAZ,EAAoCE,WAApC,EAAwD;AACtD,UAAMR,YAAY,GAAG,KAAKD,QAA1B;AACA,WAAKA,QAAL,GAAgBO,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,CAAeD,MAAM,CAAC,CAAD,CAArB,CAAhB;;AACA,UACE,CAAC,KAAKG,MAAN,IACAR,IAAI,CAACS,GAAL,CAASZ,YAAY,CAAC,KAAKC,QAAN,EAAgB,KAAKM,aAArB,CAArB,IAA4DR,cAF9D,EAGE;AACA;AACD;;AACD,WAAKY,MAAL,GAAc,IAAd;AACA,aAAO;AACLE,QAAAA,SAAS,EAAEb,YAAY,CAAC,KAAKC,QAAN,EAAgBC,YAAhB,CADlB;AAELQ,QAAAA,WAAW,EAAXA;AAFK,OAAP;AAID;;;EA5B2CI,kB","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\nimport TwoTouchHandler from './two_touch';\n\nconst ZOOM_THRESHOLD = 0.1;\nfunction getZoomDelta(distance: number, lastDistance: number) {\n  return Math.log(distance / lastDistance) / Math.LN2;\n}\nexport default class TouchZoomHandler extends TwoTouchHandler {\n  private distance: number;\n  private startDistance: number;\n\n  public reset() {\n    super.reset();\n    delete this.distance;\n    delete this.startDistance;\n  }\n\n  public start(points: [Point, Point]) {\n    this.startDistance = this.distance = points[0].dist(points[1]);\n  }\n\n  public move(points: [Point, Point], pinchAround: Point) {\n    const lastDistance = this.distance;\n    this.distance = points[0].dist(points[1]);\n    if (\n      !this.active &&\n      Math.abs(getZoomDelta(this.distance, this.startDistance)) < ZOOM_THRESHOLD\n    ) {\n      return;\n    }\n    this.active = true;\n    return {\n      zoomDelta: getZoomDelta(this.distance, lastDistance),\n      pinchAround,\n    };\n  }\n}\n"],"file":"touch_zoom.js"}