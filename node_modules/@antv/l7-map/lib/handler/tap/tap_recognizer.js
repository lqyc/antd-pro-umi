"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _single_tap_recognizer = _interopRequireWildcard(require("./single_tap_recognizer"));

var TapRecognizer = function () {
  function TapRecognizer(options) {
    (0, _classCallCheck2.default)(this, TapRecognizer);
    this.singleTap = void 0;
    this.numTaps = void 0;
    this.lastTime = void 0;
    this.lastTap = void 0;
    this.count = void 0;
    this.singleTap = new _single_tap_recognizer.default(options);
    this.numTaps = options.numTaps;
    this.reset();
  }

  (0, _createClass2.default)(TapRecognizer, [{
    key: "reset",
    value: function reset() {
      this.lastTime = Infinity;
      delete this.lastTap;
      this.count = 0;
      this.singleTap.reset();
    }
  }, {
    key: "touchstart",
    value: function touchstart(e, points, mapTouches) {
      this.singleTap.touchstart(e, points, mapTouches);
    }
  }, {
    key: "touchmove",
    value: function touchmove(e, points, mapTouches) {
      this.singleTap.touchmove(e, points, mapTouches);
    }
  }, {
    key: "touchend",
    value: function touchend(e, points, mapTouches) {
      var tap = this.singleTap.touchend(e, points, mapTouches);

      if (tap) {
        var soonEnough = e.timeStamp - this.lastTime < _single_tap_recognizer.MAX_TAP_INTERVAL;

        var closeEnough = !this.lastTap || this.lastTap.dist(tap) < _single_tap_recognizer.MAX_DIST;

        if (!soonEnough || !closeEnough) {
          this.reset();
        }

        this.count++;
        this.lastTime = e.timeStamp;
        this.lastTap = tap;

        if (this.count === this.numTaps) {
          this.reset();
          return tap;
        }
      }
    }
  }]);
  return TapRecognizer;
}();

exports.default = TapRecognizer;
//# sourceMappingURL=tap_recognizer.js.map