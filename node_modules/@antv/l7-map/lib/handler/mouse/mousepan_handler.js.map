{"version":3,"sources":["../../../src/handler/mouse/mousepan_handler.ts"],"names":["MousePanHandler","e","point","lastPoint","active","around","panDelta","sub","button","LEFT_BUTTON","ctrlKey","MouseHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;;;;;;IACqBA,e;;;;;;;;;;;;WACnB,mBAAiBC,CAAjB,EAAgCC,KAAhC,EAA8C;AAC5C,iHAAgBD,CAAhB,EAAmBC,KAAnB;;AACA,UAAI,KAAKC,SAAT,EAAoB;AAClB,aAAKC,MAAL,GAAc,IAAd;AACD;AACF;;;WAED,cAAYD,SAAZ,EAA8BD,KAA9B,EAA4C;AAC1C,aAAO;AACLG,QAAAA,MAAM,EAAEH,KADH;AAELI,QAAAA,QAAQ,EAAEJ,KAAK,CAACK,GAAN,CAAUJ,SAAV;AAFL,OAAP;AAID;;;WACD,uBAAwBF,CAAxB,EAAuCO,MAAvC,EAAuD;AACrD,aAAOA,MAAM,KAAKC,iBAAX,IAA0B,CAACR,CAAC,CAACS,OAApC;AACD;;;EAhB0CC,sB","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\nimport MouseHandler from './mouse_handler';\nimport { buttonStillPressed, LEFT_BUTTON } from './util';\nexport default class MousePanHandler extends MouseHandler {\n  public mousedown(e: MouseEvent, point: Point) {\n    super.mousedown(e, point);\n    if (this.lastPoint) {\n      this.active = true;\n    }\n  }\n\n  public move(lastPoint: Point, point: Point) {\n    return {\n      around: point,\n      panDelta: point.sub(lastPoint),\n    };\n  }\n  protected correctButton(e: MouseEvent, button: number) {\n    return button === LEFT_BUTTON && !e.ctrlKey;\n  }\n}\n"],"file":"mousepan_handler.js"}