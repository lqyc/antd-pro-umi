"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _mouse_handler = _interopRequireDefault(require("./mouse_handler"));

var _util = require("./util");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var MousePanHandler = function (_MouseHandler) {
  (0, _inherits2.default)(MousePanHandler, _MouseHandler);

  var _super = _createSuper(MousePanHandler);

  function MousePanHandler() {
    (0, _classCallCheck2.default)(this, MousePanHandler);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(MousePanHandler, [{
    key: "mousedown",
    value: function mousedown(e, point) {
      (0, _get2.default)((0, _getPrototypeOf2.default)(MousePanHandler.prototype), "mousedown", this).call(this, e, point);

      if (this.lastPoint) {
        this.active = true;
      }
    }
  }, {
    key: "move",
    value: function move(lastPoint, point) {
      return {
        around: point,
        panDelta: point.sub(lastPoint)
      };
    }
  }, {
    key: "correctButton",
    value: function correctButton(e, button) {
      return button === _util.LEFT_BUTTON && !e.ctrlKey;
    }
  }]);
  return MousePanHandler;
}(_mouse_handler.default);

exports.default = MousePanHandler;
//# sourceMappingURL=mousepan_handler.js.map