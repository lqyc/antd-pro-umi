{"version":3,"sources":["../../src/transform/join.ts"],"names":["join","geoData","options","sourceField","targetField","data","dataObj","forEach","element","dataArray","map","item","joinName"],"mappings":";;;;;;AAaA,OAAO,SAASA,IAAT,CAAcC,OAAd,EAAoCC,OAApC,EAA0D;AAAA,MACvDC,WADuD,GACpBD,OADoB,CACvDC,WADuD;AAAA,MAC1CC,WAD0C,GACpBF,OADoB,CAC1CE,WAD0C;AAAA,MAC7BC,IAD6B,GACpBH,OADoB,CAC7BG,IAD6B;AAE/D,MAAMC,OAA+B,GAAG,EAAxC;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,OAAD,EAAqC;AAEhDF,IAAAA,OAAO,CAACE,OAAO,CAACL,WAAD,CAAR,CAAP,GAAgCK,OAAhC;AACD,GAHD;AAIAP,EAAAA,OAAO,CAACQ,SAAR,GAAoBR,OAAO,CAACQ,SAAR,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAA0B;AAClE,QAAMC,QAAQ,GAAGD,IAAI,CAACP,WAAD,CAArB;AACA,2CACKO,IADL,GAEKL,OAAO,CAACM,QAAD,CAFZ;AAID,GANmB,CAApB;AAOA,SAAOX,OAAP;AACD","sourcesContent":["import { IParseDataItem, IParserData } from '@antv/l7-core';\n\ninterface IJoinOption {\n  sourceField: string;\n  targetField: string;\n  data: any[];\n}\n\n/**\n *\n * @param data\n * @param options\n */\nexport function join(geoData: IParserData, options: IJoinOption) {\n  const { sourceField, targetField, data } = options;\n  const dataObj: { [key: string]: any } = {};\n  data.forEach((element: { [key: string]: any }) => {\n    // 属性数据\n    dataObj[element[sourceField]] = element;\n  });\n  geoData.dataArray = geoData.dataArray.map((item: IParseDataItem) => {\n    const joinName = item[targetField];\n    return {\n      ...item,\n      ...dataObj[joinName],\n    };\n  });\n  return geoData;\n}\n"],"file":"join.js"}