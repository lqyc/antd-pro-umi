export function BKDRHash(str) {
  var seed = 131;
  var seed2 = 137;
  var hash = 0;
  str += 'x';
  var MAX_SAFE_INTEGER = Math.floor(9007199254740991 / seed2);

  for (var i = 0; i < str.length; i++) {
    if (hash > MAX_SAFE_INTEGER) {
      hash = Math.floor(hash / seed2);
    }

    hash = hash * seed + str.charCodeAt(i);
  }

  return hash;
}
export function djb2hash(str) {
  str = str.toString();
  var hash = 5381;
  var i = str.length;

  while (i) {
    hash = hash * 33 ^ str.charCodeAt(--i);
  }

  return hash >>> 0;
}
//# sourceMappingURL=hash.js.map