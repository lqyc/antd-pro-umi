/**
 * LRU Cache class with limit
 *
 * Update order for each get/set operation
 * Delete oldest when reach given limit
 */
declare type callback = (...args: any[]) => void;
export declare class LRUCache {
    private limit;
    private cache;
    private destroy;
    private order;
    constructor(limit?: number, destroy?: callback);
    clear(): void;
    get(key: string): any;
    set(key: string, value: any): void;
    delete(key: string): void;
    private deleteCache;
    private deleteOrder;
    private appendOrder;
    private defaultDestroy;
}
export {};
