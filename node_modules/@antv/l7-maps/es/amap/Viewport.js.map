{"version":3,"sources":["../../src/amap/Viewport.ts"],"names":["mat4","vec3","DEGREES_TO_RADIANS","Math","PI","Viewport","projectionMatrix","create","viewMatrix","viewProjectionMatrix","ViewProjectionMatrixUncentered","viewUncenteredMatrix","zoom","center","mapCamera","pitch","bearing","offsetOrigin","cameraHeight","aspect","near","far","fov","pitchInRadians","rotationInRadians","perspective","eye","fromValues","sin","cos","up","lookAt","clone","translate","multiply","lng","lat","lngLat","scale","maxs","max","min","zoomScale","d","x","y","log","tan","a","b","c"],"mappings":"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","sourcesContent":["import { IMapCamera, IViewport } from '@antv/l7-core';\nimport { mat4, vec3 } from 'gl-matrix';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nexport default class Viewport implements IViewport {\n  private projectionMatrix: mat4 = mat4.create();\n  private viewMatrix: mat4 = mat4.create();\n  private viewProjectionMatrix: mat4 = mat4.create();\n  private ViewProjectionMatrixUncentered: mat4 = mat4.create();\n  private viewUncenteredMatrix: mat4 = mat4.create();\n  private zoom: number;\n  private center: number[];\n\n  public syncWithMapCamera(mapCamera: Partial<IMapCamera>) {\n    const {\n      zoom = 1,\n      pitch = 0,\n      bearing = 0,\n      center = [0, 0],\n      offsetOrigin = [0, 0],\n      cameraHeight = 1,\n      aspect = 1,\n      near = 0.1,\n      far = 1000,\n      fov = 0,\n    } = mapCamera;\n    this.zoom = zoom;\n    this.center = center;\n\n    const pitchInRadians = pitch * DEGREES_TO_RADIANS;\n    const rotationInRadians = (360 - bearing) * DEGREES_TO_RADIANS;\n\n    // 计算透视投影矩阵 projectionMatrix\n    mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n\n    // 计算相机矩阵 viewMatrix\n    const eye = vec3.fromValues(\n      cameraHeight * Math.sin(pitchInRadians) * Math.sin(rotationInRadians),\n      -cameraHeight * Math.sin(pitchInRadians) * Math.cos(rotationInRadians),\n      cameraHeight * Math.cos(pitchInRadians),\n    );\n    const up = vec3.fromValues(\n      -Math.cos(pitchInRadians) * Math.sin(rotationInRadians),\n      Math.cos(pitchInRadians) * Math.cos(rotationInRadians),\n      Math.sin(pitchInRadians),\n    );\n    mat4.lookAt(this.viewMatrix, eye, vec3.fromValues(0, 0, 0), up);\n\n    this.viewUncenteredMatrix = mat4.clone(this.viewMatrix);\n\n    // 移动相机位置\n    mat4.translate(\n      this.viewMatrix,\n      this.viewMatrix,\n      vec3.fromValues(-offsetOrigin[0], offsetOrigin[1], 0),\n    );\n\n    mat4.multiply(\n      this.viewProjectionMatrix,\n      this.projectionMatrix,\n      this.viewMatrix,\n    );\n    mat4.multiply(\n      this.ViewProjectionMatrixUncentered,\n      this.projectionMatrix,\n      this.viewMatrix,\n    );\n  }\n\n  public getZoom(): number {\n    return this.zoom;\n  }\n\n  public getZoomScale(): number {\n    // 512 尺寸下的缩放：2 ^ 19\n    return 524288;\n  }\n\n  public getCenter(): [number, number] {\n    const [lng, lat] = this.center;\n    return [lng, lat];\n  }\n\n  public getProjectionMatrix(): number[] {\n    // @ts-ignore\n    return this.projectionMatrix;\n  }\n\n  public getViewMatrix(): number[] {\n    // @ts-ignore\n    return this.viewMatrix;\n  }\n\n  public getViewMatrixUncentered(): number[] {\n    // @ts-ignore\n    return this.viewUncenteredMatrix;\n  }\n  public getViewProjectionMatrix(): number[] {\n    // @ts-ignore\n    return this.viewProjectionMatrix;\n  }\n\n  public getViewProjectionMatrixUncentered(): number[] {\n    // @ts-ignore\n    return this.ViewProjectionMatrixUncentered;\n  }\n\n  public getFocalDistance() {\n    return 1;\n  }\n\n  /**\n   * P20 坐标系，固定 scale\n   */\n  public projectFlat(\n    lngLat: [number, number],\n    scale?: number | undefined,\n  ): [number, number] {\n    const maxs = 85.0511287798;\n    const lat = Math.max(Math.min(maxs, lngLat[1]), -maxs);\n    // tslint:disable-next-line:no-bitwise\n    const zoomScale = 256 << 20;\n    let d = Math.PI / 180;\n    let x = lngLat[0] * d;\n    let y = lat * d;\n    y = Math.log(Math.tan(Math.PI / 4 + y / 2));\n    const a = 0.5 / Math.PI;\n    const b = 0.5;\n    const c = -0.5 / Math.PI;\n    d = 0.5;\n    x = zoomScale * (a * x + b) - 215440491;\n    y = -(zoomScale * (c * y + d) - 106744817);\n    return [x, y];\n  }\n}\n"],"file":"Viewport.js"}