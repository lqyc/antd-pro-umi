"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inversify = require("inversify");

var _BaseNormalPass2 = _interopRequireDefault(require("./BaseNormalPass"));

var _dec, _class;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ClearPass = (_dec = (0, _inversify.injectable)(), _dec(_class = function (_BaseNormalPass) {
  (0, _inherits2.default)(ClearPass, _BaseNormalPass);

  var _super = _createSuper(ClearPass);

  function ClearPass() {
    (0, _classCallCheck2.default)(this, ClearPass);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ClearPass, [{
    key: "getName",
    value: function getName() {
      return 'clear';
    }
  }, {
    key: "init",
    value: function init(layer, config) {
      (0, _get2.default)((0, _getPrototypeOf2.default)(ClearPass.prototype), "init", this).call(this, layer, config);
    }
  }, {
    key: "render",
    value: function render() {
      this.rendererService.clear({
        color: [0, 0, 0, 0],
        depth: 1,
        framebuffer: null
      });
    }
  }]);
  return ClearPass;
}(_BaseNormalPass2.default)) || _class);
exports.default = ClearPass;
//# sourceMappingURL=ClearPass.js.map