"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerDefineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));

var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerWarningHelper"));

var _inversify = require("inversify");

var _types = require("../../../types");

var _IMultiPassRenderer = require("../IMultiPassRenderer");

var _dec, _dec2, _class, _class2, _descriptor, _temp;

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var MultiPassRenderer = (_dec = (0, _inversify.injectable)(), _dec2 = (0, _inversify.inject)(_types.TYPES.IPostProcessor), _dec(_class = (_class2 = (_temp = function () {
  function MultiPassRenderer() {
    (0, _classCallCheck2.default)(this, MultiPassRenderer);
    this.passes = [];
    (0, _initializerDefineProperty2.default)(this, "postProcessor", _descriptor, this);
    this.layer = void 0;
    this.renderFlag = void 0;
    this.width = 0;
    this.height = 0;
  }

  (0, _createClass2.default)(MultiPassRenderer, [{
    key: "setLayer",
    value: function setLayer(layer) {
      this.layer = layer;
    }
  }, {
    key: "setRenderFlag",
    value: function setRenderFlag(renderFlag) {
      this.renderFlag = renderFlag;
    }
  }, {
    key: "getRenderFlag",
    value: function getRenderFlag() {
      return this.renderFlag;
    }
  }, {
    key: "getPostProcessor",
    value: function getPostProcessor() {
      return this.postProcessor;
    }
  }, {
    key: "render",
    value: function () {
      var _render = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {
        var _iterator, _step, pass;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _iterator = _createForOfIteratorHelper(this.passes);
                _context.prev = 1;

                _iterator.s();

              case 3:
                if ((_step = _iterator.n()).done) {
                  _context.next = 9;
                  break;
                }

                pass = _step.value;
                _context.next = 7;
                return pass.render(this.layer);

              case 7:
                _context.next = 3;
                break;

              case 9:
                _context.next = 14;
                break;

              case 11:
                _context.prev = 11;
                _context.t0 = _context["catch"](1);

                _iterator.e(_context.t0);

              case 14:
                _context.prev = 14;

                _iterator.f();

                return _context.finish(14);

              case 17:
                this.layer.renderModels();

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 11, 14, 17]]);
      }));

      function render() {
        return _render.apply(this, arguments);
      }

      return render;
    }()
  }, {
    key: "resize",
    value: function resize(width, height) {
      if (this.width !== width || this.height !== height) {
        this.width = width;
        this.height = height;
      }
    }
  }, {
    key: "add",
    value: function add(pass, config) {
      if (pass.getType() === _IMultiPassRenderer.PassType.PostProcessing) {
        this.postProcessor.add(pass, this.layer, config);
      } else {
        pass.init(this.layer, config);
        this.passes.push(pass);
      }
    }
  }, {
    key: "insert",
    value: function insert(pass, config, index) {
      pass.init(this.layer, config);
      this.passes.splice(index, 0, pass);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.passes.length = 0;
    }
  }]);
  return MultiPassRenderer;
}(), _temp), (_descriptor = (0, _applyDecoratedDescriptor2.default)(_class2.prototype, "postProcessor", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), _class2)) || _class);
exports.default = MultiPassRenderer;
//# sourceMappingURL=MultiPassRenderer.js.map