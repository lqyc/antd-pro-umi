{"version":3,"sources":["../../../../src/services/renderer/passes/BaseNormalPass.ts"],"names":["BaseNormalPass","TYPES","IShaderModuleService","rendererService","cameraService","mapService","interactionService","layerService","config","PassType","Normal","layer","getContainer","get","IRendererService","ICameraService","IMapService","IInteractionService","ILayerService"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AAIA;;;;IAMqBA,c,WADpB,4B,UAGE,uBAAOC,aAAMC,oBAAb,C;;;;SAGSC,e;SACAC,a;SACAC,U;SACAC,kB;SACAC,Y;SAEAC,M;;;;;WAEV,mBAAiB;AACf,aAAO,EAAP;AACD;;;WAED,mBAAiB;AACf,aAAOC,6BAASC,MAAhB;AACD;;;WAED,cAAYC,KAAZ,EAA2BH,MAA3B,EAAoE;AAClE,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKL,eAAL,GAAuBQ,KAAK,CACzBC,YADoB,GAEpBC,GAFoB,CAEEZ,aAAMa,gBAFR,CAAvB;AAGA,WAAKV,aAAL,GAAqBO,KAAK,CACvBC,YADkB,GAElBC,GAFkB,CAEEZ,aAAMc,cAFR,CAArB;AAGA,WAAKV,UAAL,GAAkBM,KAAK,CAACC,YAAN,GAAqBC,GAArB,CAAsCZ,aAAMe,WAA5C,CAAlB;AACA,WAAKV,kBAAL,GAA0BK,KAAK,CAC5BC,YADuB,GAEvBC,GAFuB,CAEEZ,aAAMgB,mBAFR,CAA1B;AAGA,WAAKV,YAAL,GAAoBI,KAAK,CACtBC,YADiB,GAEjBC,GAFiB,CAEEZ,aAAMiB,aAFR,CAApB;AAGD;;;WAED,gBAAcP,KAAd,EAA6B,CAE5B","sourcesContent":["import { inject, injectable } from 'inversify';\nimport {\n  IMapService,\n  IRendererService,\n  IShaderModuleService,\n} from '../../../index';\nimport { TYPES } from '../../../types';\nimport { ICameraService } from '../../camera/ICameraService';\nimport { IInteractionService } from '../../interaction/IInteractionService';\nimport { ILayer, ILayerService } from '../../layer/ILayerService';\nimport { IPass, PassType } from '../IMultiPassRenderer';\n\n/**\n * 常规 Pass 基类\n */\n@injectable()\nexport default class BaseNormalPass<InitializationOptions = {}>\n  implements IPass<InitializationOptions> {\n  @inject(TYPES.IShaderModuleService)\n  protected readonly shaderModuleService: IShaderModuleService;\n\n  protected rendererService: IRendererService;\n  protected cameraService: ICameraService;\n  protected mapService: IMapService;\n  protected interactionService: IInteractionService;\n  protected layerService: ILayerService;\n\n  protected config: Partial<InitializationOptions> | undefined;\n\n  public getName() {\n    return '';\n  }\n\n  public getType() {\n    return PassType.Normal;\n  }\n\n  public init(layer: ILayer, config?: Partial<InitializationOptions>) {\n    this.config = config;\n    this.rendererService = layer\n      .getContainer()\n      .get<IRendererService>(TYPES.IRendererService);\n    this.cameraService = layer\n      .getContainer()\n      .get<ICameraService>(TYPES.ICameraService);\n    this.mapService = layer.getContainer().get<IMapService>(TYPES.IMapService);\n    this.interactionService = layer\n      .getContainer()\n      .get<IInteractionService>(TYPES.IInteractionService);\n    this.layerService = layer\n      .getContainer()\n      .get<ILayerService>(TYPES.ILayerService);\n  }\n\n  public render(layer: ILayer) {\n    //\n  }\n}\n"],"file":"BaseNormalPass.js"}