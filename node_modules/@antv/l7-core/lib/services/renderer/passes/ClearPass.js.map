{"version":3,"sources":["../../../../src/services/renderer/passes/ClearPass.ts"],"names":["ClearPass","layer","config","rendererService","clear","color","depth","framebuffer","BaseNormalPass"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;IAMqBA,S,WADpB,4B;;;;;;;;;;;;WAIC,mBAAiB;AACf,aAAO,OAAP;AACD;;;WAED,cAAYC,KAAZ,EAA2BC,MAA3B,EAAoE;AAClE,sGAAWD,KAAX,EAAkBC,MAAlB;AACD;;;WAED,kBAAgB;AACd,WAAKC,eAAL,CAAqBC,KAArB,CAA2B;AACzBC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADkB;AAEzBC,QAAAA,KAAK,EAAE,CAFkB;AAGzBC,QAAAA,WAAW,EAAE;AAHY,OAA3B;AAKD;;;EAfOC,wB","sourcesContent":["import { injectable } from 'inversify';\nimport { ILayer } from '../../layer/ILayerService';\nimport BaseNormalPass from './BaseNormalPass';\n\n/**\n * ClearPass\n */\n@injectable()\nexport default class ClearPass<\n  InitializationOptions = {}\n> extends BaseNormalPass<InitializationOptions> {\n  public getName() {\n    return 'clear';\n  }\n\n  public init(layer: ILayer, config?: Partial<InitializationOptions>) {\n    super.init(layer, config);\n  }\n\n  public render() {\n    this.rendererService.clear({\n      color: [0, 0, 0, 0],\n      depth: 1,\n      framebuffer: null,\n    });\n  }\n}\n"],"file":"ClearPass.js"}