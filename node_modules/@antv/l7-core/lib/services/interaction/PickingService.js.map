{"version":3,"sources":["../../../src/services/interaction/PickingService.ts"],"names":["PickingService","TYPES","IRendererService","IGlobalConfigService","IInteractionService","ILayerService","pickingFBO","width","height","alreadyInPicking","pickBufferScale","pickFromPickingFBO","layer","x","y","lngLat","type","target","isPicked","rendererService","getViewportSize","readPixels","getContainer","getBoundingClientRect","DOM","DPR","getLayerConfig","enableHighlight","enableSelect","xInDevicePixel","yInDevicePixel","pickedColors","Math","floor","data","Uint8Array","framebuffer","pickedFeatureIdx","rawFeature","getSource","getFeatureById","getCurrentPickId","layerTarget","featureId","feature","setCurrentPickId","triggerHoverOnLayer","highlightPickedFeature","toString","selectedId","getCurrentSelectedId","selectFeature","setCurrentSelectedId","id","createTexture2D","createFramebuffer","configService","getSceneConfig","color","round","wrapS","gl","CLAMP_TO_EDGE","wrapT","interactionService","on","InteractionEvent","Hover","pickingAllLayer","bind","box","cb","useFramebuffer","clear","resizePickingFBO","stencil","depth","hooks","beforePickingEncode","call","renderModels","afterPickingEncode","features","pickBox","map","v","tmpV","xMin","yMin","xMax","yMax","w","min","h","featuresIdMap","i","length","slice","push","layerService","alreadyInRendering","pickingLayers","renderLayers","resize","layers","getLayers","filter","needPick","reverse","some","enablePropagation","emit","r","g","b","beforeHighlight","beforeSelect"],"mappings":"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","sourcesContent":["import { decodePickingColor, DOM, encodePickingColor } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport {\n  IMapService,\n  IRendererService,\n  IShaderModuleService,\n} from '../../index';\nimport { TYPES } from '../../types';\nimport { IGlobalConfigService, ISceneConfig } from '../config/IConfigService';\nimport {\n  IInteractionService,\n  IInteractionTarget,\n  InteractionEvent,\n} from '../interaction/IInteractionService';\nimport { ILayer, ILayerService } from '../layer/ILayerService';\nimport { ILngLat } from '../map/IMapService';\nimport { gl } from '../renderer/gl';\nimport { IFramebuffer } from '../renderer/IFramebuffer';\nimport { IPickingService } from './IPickingService';\n\n@injectable()\nexport default class PickingService implements IPickingService {\n  @inject(TYPES.IRendererService)\n  private rendererService: IRendererService;\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.IInteractionService)\n  private interactionService: IInteractionService;\n\n  @inject(TYPES.ILayerService)\n  private layerService: ILayerService;\n  private pickingFBO: IFramebuffer;\n\n  private width: number = 0;\n\n  private height: number = 0;\n\n  private alreadyInPicking: boolean = false;\n\n  private pickBufferScale: number = 1.0;\n\n  public init(id: string) {\n    const {\n      createTexture2D,\n      createFramebuffer,\n      getViewportSize,\n      getContainer,\n    } = this.rendererService;\n    let {\n      width,\n      height,\n    } = (getContainer() as HTMLElement).getBoundingClientRect();\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    this.pickBufferScale =\n      this.configService.getSceneConfig(id).pickBufferScale || 1;\n    // 创建 picking framebuffer，后续实时 resize\n    this.pickingFBO = createFramebuffer({\n      color: createTexture2D({\n        width: Math.round(width / this.pickBufferScale),\n        height: Math.round(height / this.pickBufferScale),\n        wrapS: gl.CLAMP_TO_EDGE,\n        wrapT: gl.CLAMP_TO_EDGE,\n      }),\n    });\n\n    // 监听 hover 事件\n    this.interactionService.on(\n      InteractionEvent.Hover,\n      this.pickingAllLayer.bind(this),\n    );\n  }\n\n  public async boxPickLayer(\n    layer: ILayer,\n    box: [number, number, number, number],\n    cb: (...args: any[]) => void,\n  ): Promise<any> {\n    const { useFramebuffer, clear, getContainer } = this.rendererService;\n    this.resizePickingFBO();\n    useFramebuffer(this.pickingFBO, () => {\n      clear({\n        framebuffer: this.pickingFBO,\n        color: [0, 0, 0, 0],\n        stencil: 0,\n        depth: 1,\n      });\n      layer.hooks.beforePickingEncode.call();\n      layer.renderModels();\n      layer.hooks.afterPickingEncode.call();\n      const features = this.pickBox(layer, box);\n      cb(features);\n    });\n  }\n\n  public pickBox(layer: ILayer, box: [number, number, number, number]): any[] {\n    const [xMin, yMin, xMax, yMax] = box.map((v) => {\n      const tmpV = v < 0 ? 0 : v;\n      return Math.floor((tmpV * DOM.DPR) / this.pickBufferScale);\n    });\n    const { getViewportSize, readPixels, getContainer } = this.rendererService;\n    let {\n      width,\n      height,\n    } = (getContainer() as HTMLElement).getBoundingClientRect();\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    if (\n      xMin > ((width - 1) * DOM.DPR) / this.pickBufferScale ||\n      xMax < 0 ||\n      yMin > ((height - 1) * DOM.DPR) / this.pickBufferScale ||\n      yMax < 0\n    ) {\n      return [];\n    }\n    let pickedColors: Uint8Array | undefined;\n    const w = Math.min(width / this.pickBufferScale, xMax) - xMin;\n    const h = Math.min(height / this.pickBufferScale, yMax) - yMin;\n    pickedColors = readPixels({\n      x: xMin,\n      // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n      y: Math.floor(height / this.pickBufferScale - (yMax + 1)),\n      width: w,\n      height: h,\n      data: new Uint8Array(w * h * 4),\n      framebuffer: this.pickingFBO,\n    });\n\n    const features = [];\n    const featuresIdMap: { [key: string]: boolean } = {};\n    for (let i = 0; i < pickedColors.length / 4; i = i + 1) {\n      const color = pickedColors.slice(i * 4, i * 4 + 4);\n      const pickedFeatureIdx = decodePickingColor(color);\n      if (pickedFeatureIdx !== -1 && !featuresIdMap[pickedFeatureIdx]) {\n        const rawFeature = layer.getSource().getFeatureById(pickedFeatureIdx);\n        features.push(rawFeature);\n        featuresIdMap[pickedFeatureIdx] = true;\n      }\n    }\n    return features;\n  }\n  private async pickingAllLayer(target: IInteractionTarget) {\n    if (this.alreadyInPicking || this.layerService.alreadyInRendering) {\n      return;\n    }\n    this.alreadyInPicking = true;\n    await this.pickingLayers(target);\n    this.layerService.renderLayers();\n    this.alreadyInPicking = false;\n  }\n\n  private resizePickingFBO() {\n    const { getContainer } = this.rendererService;\n    let {\n      width,\n      height,\n    } = (getContainer() as HTMLElement).getBoundingClientRect();\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    if (this.width !== width || this.height !== height) {\n      this.pickingFBO.resize({\n        width: Math.round(width / this.pickBufferScale),\n        height: Math.round(height / this.pickBufferScale),\n      });\n      this.width = width;\n      this.height = height;\n    }\n  }\n  private async pickingLayers(target: IInteractionTarget) {\n    const {\n      getViewportSize,\n      useFramebuffer,\n      clear,\n      getContainer,\n    } = this.rendererService;\n\n    this.resizePickingFBO();\n\n    useFramebuffer(this.pickingFBO, () => {\n      const layers = this.layerService.getLayers();\n      layers\n        .filter((layer) => layer.needPick(target.type))\n        .reverse()\n        .some((layer) => {\n          clear({\n            framebuffer: this.pickingFBO,\n            color: [0, 0, 0, 0],\n            stencil: 0,\n            depth: 1,\n          });\n          layer.hooks.beforePickingEncode.call();\n          layer.renderModels();\n          layer.hooks.afterPickingEncode.call();\n          const isPicked = this.pickFromPickingFBO(layer, target);\n          return isPicked && !layer.getLayerConfig().enablePropagation;\n        });\n    });\n  }\n\n  private pickFromPickingFBO = (\n    layer: ILayer,\n    { x, y, lngLat, type, target }: IInteractionTarget,\n  ) => {\n    let isPicked = false;\n    const { getViewportSize, readPixels, getContainer } = this.rendererService;\n    let {\n      width,\n      height,\n    } = (getContainer() as HTMLElement).getBoundingClientRect();\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    const { enableHighlight, enableSelect } = layer.getLayerConfig();\n\n    const xInDevicePixel = x * DOM.DPR;\n    const yInDevicePixel = y * DOM.DPR;\n    if (\n      xInDevicePixel > width - 1 * DOM.DPR ||\n      xInDevicePixel < 0 ||\n      yInDevicePixel > height - 1 * DOM.DPR ||\n      yInDevicePixel < 0\n    ) {\n      return false;\n    }\n    let pickedColors: Uint8Array | undefined;\n    pickedColors = readPixels({\n      x: Math.floor(xInDevicePixel / this.pickBufferScale),\n      // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n      y: Math.floor((height - (y + 1) * DOM.DPR) / this.pickBufferScale),\n      width: 1,\n      height: 1,\n      data: new Uint8Array(1 * 1 * 4),\n      framebuffer: this.pickingFBO,\n    });\n    if (\n      pickedColors[0] !== 0 ||\n      pickedColors[1] !== 0 ||\n      pickedColors[2] !== 0\n    ) {\n      const pickedFeatureIdx = decodePickingColor(pickedColors);\n      const rawFeature = layer.getSource().getFeatureById(pickedFeatureIdx);\n      if (\n        pickedFeatureIdx !== layer.getCurrentPickId() &&\n        type === 'mousemove'\n      ) {\n        type = 'mouseenter';\n      }\n\n      const layerTarget = {\n        x,\n        y,\n        type,\n        lngLat,\n        featureId: pickedFeatureIdx,\n        feature: rawFeature,\n        target,\n      };\n      if (!rawFeature) {\n        // this.logger.error(\n        //   '未找到颜色编码解码后的原始 feature，请检查 fragment shader 中末尾是否添加了 `gl_FragColor = filterColor(gl_FragColor);`',\n        // );\n      } else {\n        // trigger onHover/Click callback on layer\n        isPicked = true;\n        layer.setCurrentPickId(pickedFeatureIdx);\n        this.triggerHoverOnLayer(layer, layerTarget); // 触发拾取事件\n      }\n    } else {\n      // 未选中\n      const layerTarget = {\n        x,\n        y,\n        lngLat,\n        type:\n          layer.getCurrentPickId() !== null && type === 'mousemove'\n            ? 'mouseout'\n            : 'un' + type,\n        featureId: null,\n        target,\n        feature: null,\n      };\n      this.triggerHoverOnLayer(layer, {\n        ...layerTarget,\n        type: 'unpick',\n      });\n      this.triggerHoverOnLayer(layer, layerTarget);\n      layer.setCurrentPickId(null);\n    }\n\n    if (enableHighlight) {\n      this.highlightPickedFeature(layer, pickedColors);\n    }\n    if (\n      enableSelect &&\n      type === 'click' &&\n      pickedColors?.toString() !== [0, 0, 0, 0].toString()\n    ) {\n      const selectedId = decodePickingColor(pickedColors);\n      if (\n        layer.getCurrentSelectedId() === null ||\n        selectedId !== layer.getCurrentSelectedId()\n      ) {\n        this.selectFeature(layer, pickedColors);\n        layer.setCurrentSelectedId(selectedId);\n      } else {\n        this.selectFeature(layer, new Uint8Array([0, 0, 0, 0])); // toggle select\n        layer.setCurrentSelectedId(null);\n      }\n    }\n    return isPicked;\n  };\n  private triggerHoverOnLayer(\n    layer: ILayer,\n    target: {\n      x: number;\n      y: number;\n      type: string;\n      lngLat: ILngLat;\n      feature: unknown;\n      featureId: number | null;\n    },\n  ) {\n    layer.emit(target.type, target);\n  }\n\n  /**\n   * highlight 如果直接修改选中 feature 的 buffer，存在两个问题：\n   * 1. 鼠标移走时无法恢复\n   * 2. 无法实现高亮颜色与原始原色的 alpha 混合\n   * 因此高亮还是放在 shader 中做比较好\n   * @example\n   * this.layer.color('name', ['#000000'], {\n   *  featureRange: {\n   *    startIndex: pickedFeatureIdx,\n   *    endIndex: pickedFeatureIdx + 1,\n   *  },\n   * });\n   */\n  private highlightPickedFeature(\n    layer: ILayer,\n    pickedColors: Uint8Array | undefined,\n  ) {\n    const [r, g, b] = pickedColors;\n    layer.hooks.beforeHighlight.call([r, g, b]);\n  }\n\n  private selectFeature(layer: ILayer, pickedColors: Uint8Array | undefined) {\n    const [r, g, b] = pickedColors;\n    layer.hooks.beforeSelect.call([r, g, b]);\n  }\n}\n"],"file":"PickingService.js"}