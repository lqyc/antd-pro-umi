{"version":3,"sources":["../../../src/services/camera/ICameraService.ts"],"names":["CameraUniform","ProjectionMatrix","ViewMatrix","ViewProjectionMatrix","Zoom","ZoomScale","FocalDistance","CameraPosition"],"mappings":";;;;;;AAGO,IAAMA,aAAa,GAAG;AAC3BC,EAAAA,gBAAgB,EAAE,oBADS;AAE3BC,EAAAA,UAAU,EAAE,cAFe;AAG3BC,EAAAA,oBAAoB,EAAE,wBAHK;AAI3BC,EAAAA,IAAI,EAAE,QAJqB;AAK3BC,EAAAA,SAAS,EAAE,aALgB;AAM3BC,EAAAA,aAAa,EAAE,iBANY;AAO3BC,EAAAA,cAAc,EAAE;AAPW,CAAtB","sourcesContent":["import { IMapCamera } from '../map/IMapService';\n\n// 后续传入 Shader 的变量\nexport const CameraUniform = {\n  ProjectionMatrix: 'u_ProjectionMatrix',\n  ViewMatrix: 'u_ViewMatrix',\n  ViewProjectionMatrix: 'u_ViewProjectionMatrix',\n  Zoom: 'u_Zoom',\n  ZoomScale: 'u_ZoomScale',\n  FocalDistance: 'u_FocalDistance',\n  CameraPosition: 'u_CameraPosition',\n};\n\nexport interface IViewport {\n  syncWithMapCamera(mapCamera: Partial<IMapCamera>): void;\n  getProjectionMatrix(): number[];\n  getViewMatrix(): number[];\n  getViewMatrixUncentered(): number[];\n  getViewProjectionMatrixUncentered(): number[];\n  getViewProjectionMatrix(): number[];\n  getZoom(): number;\n  getZoomScale(): number;\n  getFocalDistance(): number;\n  getCenter(): [number, number];\n  projectFlat(\n    lngLat: [number, number],\n    scale?: number | undefined,\n  ): [number, number];\n}\n\nexport interface ICameraService extends Omit<IViewport, 'syncWithMapCamera'> {\n  init(): void;\n  update(viewport: IViewport): void;\n  getCameraPosition(): number[];\n  setViewProjectionMatrix(viewProjectionMatrix: number[] | undefined): void;\n  jitterProjectionMatrix(x: number, y: number): void;\n  clearJitterProjectionMatrix(): void;\n}\n"],"file":"ICameraService.js"}