{"version":3,"sources":["../../src/utils/vertex-compression.ts"],"names":["LEFT_SHIFT1","LEFT_SHIFT2","LEFT_SHIFT6","LEFT_SHIFT7","LEFT_SHIFT8","LEFT_SHIFT9","LEFT_SHIFT13","LEFT_SHIFT14","LEFT_SHIFT15","LEFT_SHIFT16","LEFT_SHIFT17","LEFT_SHIFT18","LEFT_SHIFT19","LEFT_SHIFT20","LEFT_SHIFT21","LEFT_SHIFT22","LEFT_SHIFT23","LEFT_SHIFT24","LEFT_SHIFT25","packUint8ToFloat","a","b","Math","floor","packCircleVertex","props","color","radius","tileX","tileY","shape","opacity","stroke","strokeWidth","strokeOpacity","packedBuffer","packedBuffer2","packedBuffer3","packedColor","packedStrokeColor","forEach","extrudeX","extrudeY","push","packOpacity","placed","targetBit","opacityBits"],"mappings":"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","sourcesContent":["/**\n * WebGL 中的顶点数据压缩\n * 使用 float-pack 技术，在 shader 中解压\n * @see https://zhuanlan.zhihu.com/p/67484498\n */\n\nimport { clamp } from 'lodash';\nimport { getShapeIndex } from './sdf-2d';\n\nexport interface ICircleVertex {\n  tileX: number;\n  tileY: number;\n  shape: string;\n  color: number[];\n  radius: number;\n  opacity: number;\n  stroke: number[];\n  strokeWidth: number;\n  strokeOpacity: number;\n}\n\nexport const LEFT_SHIFT1 = 2;\nexport const LEFT_SHIFT2 = 4;\nexport const LEFT_SHIFT6 = 64;\nexport const LEFT_SHIFT7 = 128;\nexport const LEFT_SHIFT8 = 256;\nexport const LEFT_SHIFT9 = 512;\nexport const LEFT_SHIFT13 = 8192;\nexport const LEFT_SHIFT14 = 16384;\nexport const LEFT_SHIFT15 = 32768;\nexport const LEFT_SHIFT16 = 32768 * 2;\nexport const LEFT_SHIFT17 = 131072.0;\nexport const LEFT_SHIFT18 = 262144.0;\nexport const LEFT_SHIFT19 = 524288.0;\nexport const LEFT_SHIFT20 = 1048576.0;\nexport const LEFT_SHIFT21 = 2097152.0;\nexport const LEFT_SHIFT22 = 4194304.0;\nexport const LEFT_SHIFT23 = 8388608.0;\nexport const LEFT_SHIFT24 = 16777216.0;\nexport const LEFT_SHIFT25 = 16777216.0 * 2;\n\n/**\n * encode 2 8-bit unsigned int into a 16-bit float\n * @param {number} a 8-bit int\n * @param {number} b 8-bit int\n * @return {number} float\n */\nexport function packUint8ToFloat(a: number, b: number): number {\n  a = clamp(Math.floor(a), 0, 255);\n  b = clamp(Math.floor(b), 0, 255);\n  return 256 * a + b;\n}\n\n/**\n * 为 SDF circle 压缩顶点数据\n */\nexport function packCircleVertex(\n  props: ICircleVertex,\n): {\n  packedBuffer: number[][];\n  packedBuffer2: number[][];\n  packedBuffer3: number[][];\n} {\n  const {\n    color,\n    radius,\n    tileX,\n    tileY,\n    shape,\n    opacity, // packed buffer1\n    stroke,\n    strokeWidth,\n    strokeOpacity, // packed buffer2\n  } = props;\n  const packedBuffer: number[][] = [];\n  const packedBuffer2: number[][] = [];\n  const packedBuffer3: number[][] = [];\n\n  const packedColor: [number, number] = [\n    packUint8ToFloat(color[0], color[1]),\n    packUint8ToFloat(color[2], color[3]),\n  ];\n  const packedStrokeColor: [number, number] = [\n    packUint8ToFloat(stroke[0], stroke[1]),\n    packUint8ToFloat(stroke[2], stroke[3]),\n  ];\n\n  [\n    [-1, -1],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n  ].forEach(([extrudeX, extrudeY]) => {\n    // vec4(\n    //   color,\n    //   color,\n    //   (4-bit extrude, 4-bit shape, 16-bit radius),\n    //   tileCoords\n    // )\n    packedBuffer.push([\n      ...packedColor,\n      (extrudeX + 1) * LEFT_SHIFT23 +\n        (extrudeY + 1) * LEFT_SHIFT21 +\n        getShapeIndex(shape) * LEFT_SHIFT17 +\n        radius,\n      (tileX + 512) * LEFT_SHIFT19 + (tileY + 512) * LEFT_SHIFT6,\n    ]);\n\n    // vec4(\n    //   strokeColor,\n    //   strokeColor,\n    //   strokeWidth,\n    //   strokeOpacity\n    // )\n    packedBuffer2.push([...packedStrokeColor, strokeWidth, strokeOpacity]);\n\n    packedBuffer3.push([opacity, 0, 0, 0]);\n  });\n\n  return {\n    packedBuffer,\n    packedBuffer2,\n    packedBuffer3,\n  };\n}\n\nexport function packOpacity(opacity: number, placed: boolean): number {\n  if (opacity === 0 && !placed) {\n    return 0;\n  } else if (opacity === 1 && placed) {\n    return 4294967295;\n  }\n  const targetBit = placed ? 1 : 0;\n  const opacityBits = Math.floor(opacity * 127);\n  return (\n    opacityBits * LEFT_SHIFT25 +\n    targetBit * LEFT_SHIFT24 +\n    opacityBits * LEFT_SHIFT17 +\n    targetBit * LEFT_SHIFT16 +\n    opacityBits * LEFT_SHIFT9 +\n    targetBit * LEFT_SHIFT8 +\n    opacityBits * LEFT_SHIFT1 +\n    targetBit\n  );\n}\n"],"file":"vertex-compression.js"}