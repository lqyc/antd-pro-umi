"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packUint8ToFloat = packUint8ToFloat;
exports.packCircleVertex = packCircleVertex;
exports.packOpacity = packOpacity;
exports.LEFT_SHIFT25 = exports.LEFT_SHIFT24 = exports.LEFT_SHIFT23 = exports.LEFT_SHIFT22 = exports.LEFT_SHIFT21 = exports.LEFT_SHIFT20 = exports.LEFT_SHIFT19 = exports.LEFT_SHIFT18 = exports.LEFT_SHIFT17 = exports.LEFT_SHIFT16 = exports.LEFT_SHIFT15 = exports.LEFT_SHIFT14 = exports.LEFT_SHIFT13 = exports.LEFT_SHIFT9 = exports.LEFT_SHIFT8 = exports.LEFT_SHIFT7 = exports.LEFT_SHIFT6 = exports.LEFT_SHIFT2 = exports.LEFT_SHIFT1 = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _clamp2 = _interopRequireDefault(require("lodash/clamp"));

var _sdf2d = require("./sdf-2d");

var LEFT_SHIFT1 = 2;
exports.LEFT_SHIFT1 = LEFT_SHIFT1;
var LEFT_SHIFT2 = 4;
exports.LEFT_SHIFT2 = LEFT_SHIFT2;
var LEFT_SHIFT6 = 64;
exports.LEFT_SHIFT6 = LEFT_SHIFT6;
var LEFT_SHIFT7 = 128;
exports.LEFT_SHIFT7 = LEFT_SHIFT7;
var LEFT_SHIFT8 = 256;
exports.LEFT_SHIFT8 = LEFT_SHIFT8;
var LEFT_SHIFT9 = 512;
exports.LEFT_SHIFT9 = LEFT_SHIFT9;
var LEFT_SHIFT13 = 8192;
exports.LEFT_SHIFT13 = LEFT_SHIFT13;
var LEFT_SHIFT14 = 16384;
exports.LEFT_SHIFT14 = LEFT_SHIFT14;
var LEFT_SHIFT15 = 32768;
exports.LEFT_SHIFT15 = LEFT_SHIFT15;
var LEFT_SHIFT16 = 32768 * 2;
exports.LEFT_SHIFT16 = LEFT_SHIFT16;
var LEFT_SHIFT17 = 131072.0;
exports.LEFT_SHIFT17 = LEFT_SHIFT17;
var LEFT_SHIFT18 = 262144.0;
exports.LEFT_SHIFT18 = LEFT_SHIFT18;
var LEFT_SHIFT19 = 524288.0;
exports.LEFT_SHIFT19 = LEFT_SHIFT19;
var LEFT_SHIFT20 = 1048576.0;
exports.LEFT_SHIFT20 = LEFT_SHIFT20;
var LEFT_SHIFT21 = 2097152.0;
exports.LEFT_SHIFT21 = LEFT_SHIFT21;
var LEFT_SHIFT22 = 4194304.0;
exports.LEFT_SHIFT22 = LEFT_SHIFT22;
var LEFT_SHIFT23 = 8388608.0;
exports.LEFT_SHIFT23 = LEFT_SHIFT23;
var LEFT_SHIFT24 = 16777216.0;
exports.LEFT_SHIFT24 = LEFT_SHIFT24;
var LEFT_SHIFT25 = 16777216.0 * 2;
exports.LEFT_SHIFT25 = LEFT_SHIFT25;

function packUint8ToFloat(a, b) {
  a = (0, _clamp2.default)(Math.floor(a), 0, 255);
  b = (0, _clamp2.default)(Math.floor(b), 0, 255);
  return 256 * a + b;
}

function packCircleVertex(props) {
  var color = props.color,
      radius = props.radius,
      tileX = props.tileX,
      tileY = props.tileY,
      shape = props.shape,
      opacity = props.opacity,
      stroke = props.stroke,
      strokeWidth = props.strokeWidth,
      strokeOpacity = props.strokeOpacity;
  var packedBuffer = [];
  var packedBuffer2 = [];
  var packedBuffer3 = [];
  var packedColor = [packUint8ToFloat(color[0], color[1]), packUint8ToFloat(color[2], color[3])];
  var packedStrokeColor = [packUint8ToFloat(stroke[0], stroke[1]), packUint8ToFloat(stroke[2], stroke[3])];
  [[-1, -1], [1, -1], [1, 1], [-1, 1]].forEach(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        extrudeX = _ref2[0],
        extrudeY = _ref2[1];

    packedBuffer.push([].concat(packedColor, [(extrudeX + 1) * LEFT_SHIFT23 + (extrudeY + 1) * LEFT_SHIFT21 + (0, _sdf2d.getShapeIndex)(shape) * LEFT_SHIFT17 + radius, (tileX + 512) * LEFT_SHIFT19 + (tileY + 512) * LEFT_SHIFT6]));
    packedBuffer2.push([].concat(packedStrokeColor, [strokeWidth, strokeOpacity]));
    packedBuffer3.push([opacity, 0, 0, 0]);
  });
  return {
    packedBuffer: packedBuffer,
    packedBuffer2: packedBuffer2,
    packedBuffer3: packedBuffer3
  };
}

function packOpacity(opacity, placed) {
  if (opacity === 0 && !placed) {
    return 0;
  } else if (opacity === 1 && placed) {
    return 4294967295;
  }

  var targetBit = placed ? 1 : 0;
  var opacityBits = Math.floor(opacity * 127);
  return opacityBits * LEFT_SHIFT25 + targetBit * LEFT_SHIFT24 + opacityBits * LEFT_SHIFT17 + targetBit * LEFT_SHIFT16 + opacityBits * LEFT_SHIFT9 + targetBit * LEFT_SHIFT8 + opacityBits * LEFT_SHIFT1 + targetBit;
}
//# sourceMappingURL=vertex-compression.js.map