{"version":3,"sources":["../../../src/services/camera/Camera.ts"],"names":["mat3","mat4","quat","vec3","vec4","createVec3","getAngle","CAMERA_TYPE","CAMERA_TRACKING_MODE","DEG_2_RAD","Math","PI","RAD_2_DEG","Camera","type","matrix","create","right","fromValues","up","forward","position","focalPoint","distanceVector","distance","azimuth","elevation","roll","relAzimuth","relElevation","relRoll","dollyingStep","rotateWorld","fov","near","far","aspect","perspective","following","undefined","EXPLORING","trackingMode","DEFAULT","setType","setWorldRotation","_getAngles","TRACKING","setTrackingMode","Error","flag","invert","_update","angle","updatePerspective","x","y","z","_setPosition","setFocalPoint","CINEMATIC","d","subtract","r","length","el","asin","az","atan2","m","rotateY","rotateX","transformMat4","lookAt","_getAxes","_getDistance","pos","n","f","setAzimuth","setElevation","rl","setRoll","computeMatrix","ORBITING","_getPosition","_getFocalPoint","rotX","setAxisAngle","rotY","rotZ","rotQ","multiply","rotMatrix","fromQuat","translate","abs","tx","ty","coords","clone","add","scale","value","step","identity","copy","normalize","transformMat3","fromMat4"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,WAA7C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AAGA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAMZ,WAAYC,oBAAZ;;WAAYA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;GAAAA,oB,KAAAA,oB;;AAOZ,IAAMC,SAAS,GAAGC,IAAI,CAACC,EAAL,GAAU,GAA5B;AACA,IAAMC,SAAS,GAAG,MAAMF,IAAI,CAACC,EAA7B;;IAUqBE,M;AAuFnB,kBAAYC,IAAZ,EAA+B;AAAA;;AAAA,SAnFxBC,MAmFwB,GAnFfd,IAAI,CAACe,MAAL,EAmFe;AAAA,SA7ExBC,KA6EwB,GA7EhBd,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CA6EgB;AAAA,SAxExBC,EAwEwB,GAxEnBhB,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAwEmB;AAAA,SAnExBE,OAmEwB,GAnEdjB,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAmEc;AAAA,SA9DxBG,QA8DwB,GA9DblB,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CA8Da;AAAA,SAzDxBI,UAyDwB,GAzDXnB,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAyDW;AAAA,SAnDxBK,cAmDwB,GAnDPpB,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAmDO;AAAA,SA7CxBM,QA6CwB,GA7Cb,CA6Ca;AAAA,SAxCxBC,OAwCwB,GAxCd,CAwCc;AAAA,SAvCxBC,SAuCwB,GAvCZ,CAuCY;AAAA,SAtCxBC,IAsCwB,GAtCjB,CAsCiB;AAAA,SArCxBC,UAqCwB,GArCX,CAqCW;AAAA,SApCxBC,YAoCwB,GApCT,CAoCS;AAAA,SAnCxBC,OAmCwB,GAnCd,CAmCc;AAAA,SA9BxBC,YA8BwB,GA9BT,CA8BS;AAAA,SAzBxBC,WAyBwB,GAzBV,KAyBU;AAAA,SAfvBC,GAeuB,GAfjB,EAeiB;AAAA,SAdvBC,IAcuB,GAdhB,GAcgB;AAAA,SAbvBC,GAauB,GAbjB,KAaiB;AAAA,SAZvBC,MAYuB,GAZd,CAYc;AAAA,SAPvBC,WAOuB,GAPTpC,IAAI,CAACe,MAAL,EAOS;AAAA,SALvBsB,SAKuB,GALXC,SAKW;AAAA,SAHvBzB,IAGuB,GAHhBP,WAAW,CAACiC,SAGI;AAAA,SAFvBC,YAEuB,GAFRjC,oBAAoB,CAACkC,OAEb;AAC7B,SAAKC,OAAL,CAAa7B,IAAb,EAAmByB,SAAnB;AACD;;;;WAED,iBACEzB,IADF,EAEE2B,YAFF,EAGE;AACA,WAAK3B,IAAL,GAAYA,IAAZ;;AACA,UAAI,KAAKA,IAAL,KAAcP,WAAW,CAACiC,SAA9B,EAAyC;AACvC,aAAKI,gBAAL,CAAsB,IAAtB;AACD,OAFD,MAEO;AACL,aAAKA,gBAAL,CAAsB,KAAtB;AACD;;AACD,WAAKC,UAAL;;AAEA,UAAI,KAAK/B,IAAL,KAAcP,WAAW,CAACuC,QAA1B,IAAsCL,YAAY,KAAKF,SAA3D,EAAsE;AACpE,aAAKQ,eAAL,CAAqBN,YAArB;AACD;AACF;;;WAED,yBAAuBA,YAAvB,EAA2D;AACzD,UAAI,KAAK3B,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AACtC,cAAM,IAAIE,KAAJ,CACJ,yEADI,CAAN;AAGD;;AACD,WAAKP,YAAL,GAAoBA,YAApB;AACD;;;WAcD,0BAAwBQ,IAAxB,EAAuC;AACrC,WAAKjB,WAAL,GAAmBiB,IAAnB;;AACA,WAAKJ,UAAL;AACD;;;WAKD,4BAAuC;AACrC,aAAO5C,IAAI,CAACiD,MAAL,CAAYjD,IAAI,CAACe,MAAL,EAAZ,EAA2B,KAAKD,MAAhC,CAAP;AACD;;;WAKD,mBAAiBA,MAAjB,EAA+B;AAC7B,WAAKA,MAAL,GAAcA,MAAd;;AACA,WAAKoC,OAAL;AACD;;;WAED,wBACEjB,IADF,EAEEC,GAFF,EAGEiB,KAHF,EAIEhB,MAJF,EAKE;AACA,WAAKH,GAAL,GAAWmB,KAAX;AACA,WAAKlB,IAAL,GAAYA,IAAZ;AACA,WAAKC,GAAL,GAAWA,GAAX;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKiB,iBAAL;AACD;;;WAED,6BAA2B;AACzBpD,MAAAA,IAAI,CAACoC,WAAL,CACE,KAAKA,WADP,EAEE,KAAKJ,GAAL,GAAWxB,SAFb,EAGE,KAAK2B,MAHP,EAIE,KAAKF,IAJP,EAKE,KAAKC,GALP;AAOD;;;WAKD,qBAAmBmB,CAAnB,EAA8BC,CAA9B,EAAyCC,CAAzC,EAAoD;AAClD,WAAKC,YAAL,CAAkBH,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB;;AACA,WAAKE,aAAL,CAAmB,KAAKpC,UAAxB;AACA,aAAO,IAAP;AACD;;;WAKD,uBAAqBgC,CAArB,EAAuCC,CAAvC,EAAmDC,CAAnD,EAA+D;AAC7D,UAAIrC,EAAE,GAAGhB,IAAI,CAACe,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAT;AACA,WAAKI,UAAL,GAAkBjB,UAAU,CAACiD,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAA5B;;AAEA,UAAI,KAAKf,YAAL,KAAsBjC,oBAAoB,CAACmD,SAA/C,EAA0D;AACxD,YAAMC,CAAC,GAAGzD,IAAI,CAAC0D,QAAL,CAAc1D,IAAI,CAACa,MAAL,EAAd,EAA6B,KAAKM,UAAlC,EAA8C,KAAKD,QAAnD,CAAV;AACAiC,QAAAA,CAAC,GAAGM,CAAC,CAAC,CAAD,CAAL;AACAL,QAAAA,CAAC,GAAGK,CAAC,CAAC,CAAD,CAAL;AACAJ,QAAAA,CAAC,GAAGI,CAAC,CAAC,CAAD,CAAL;AACA,YAAME,CAAC,GAAG3D,IAAI,CAAC4D,MAAL,CAAYH,CAAZ,CAAV;AACA,YAAMI,EAAE,GAAGtD,IAAI,CAACuD,IAAL,CAAUV,CAAC,GAAGO,CAAd,IAAmBlD,SAA9B;AACA,YAAMsD,EAAE,GAAG,KAAKxD,IAAI,CAACyD,KAAL,CAAWX,CAAX,EAAcF,CAAd,IAAmB1C,SAAnC;AACA,YAAMwD,CAAC,GAAGnE,IAAI,CAACe,MAAL,EAAV;AACAf,QAAAA,IAAI,CAACoE,OAAL,CAAaD,CAAb,EAAgBA,CAAhB,EAAmBF,EAAE,GAAGzD,SAAxB;AACAR,QAAAA,IAAI,CAACqE,OAAL,CAAaF,CAAb,EAAgBA,CAAhB,EAAmBJ,EAAE,GAAGvD,SAAxB;AACAU,QAAAA,EAAE,GAAGhB,IAAI,CAACoE,aAAL,CAAmBpE,IAAI,CAACa,MAAL,EAAnB,EAAkC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlC,EAA6CoD,CAA7C,CAAL;AACD;;AAEDnE,MAAAA,IAAI,CAACiD,MAAL,CACE,KAAKnC,MADP,EAEEd,IAAI,CAACuE,MAAL,CAAYvE,IAAI,CAACe,MAAL,EAAZ,EAA2B,KAAKK,QAAhC,EAA0C,KAAKC,UAA/C,EAA2DH,EAA3D,CAFF;;AAKA,WAAKsD,QAAL;;AACA,WAAKC,YAAL;;AACA,WAAK7B,UAAL;;AACA,aAAO,IAAP;AACD;;;WAKD,qBAAmBe,CAAnB,EAA8B;AAC5B,UAAI,KAAKpC,QAAL,KAAkBoC,CAAlB,IAAuBA,CAAC,GAAG,CAA/B,EAAkC;AAChC;AACD;;AAED,WAAKpC,QAAL,GAAgBoC,CAAhB;AACA,WAAK7B,YAAL,GAAoB,KAAKP,QAAL,GAAgB,GAApC;AAEA,UAAMmD,GAAG,GAAGxE,IAAI,CAACa,MAAL,EAAZ;AACA,UAAM4D,CAAC,GAAG,KAAKxD,OAAf;AACA,UAAMyD,CAAC,GAAG,KAAKvD,UAAf;AAEAqD,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASf,CAAC,GAAGgB,CAAC,CAAC,CAAD,CAAL,GAAWC,CAAC,CAAC,CAAD,CAArB;AACAF,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASf,CAAC,GAAGgB,CAAC,CAAC,CAAD,CAAL,GAAWC,CAAC,CAAC,CAAD,CAArB;AACAF,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASf,CAAC,GAAGgB,CAAC,CAAC,CAAD,CAAL,GAAWC,CAAC,CAAC,CAAD,CAArB;;AAEA,WAAKpB,YAAL,CAAkBkB,GAAlB;;AACA,aAAO,IAAP;AACD;;;WAKD,uBAAqBT,EAArB,EAAiC;AAC/B,WAAKY,UAAL,CAAgB,KAAKrD,OAAL,GAAeyC,EAA/B;AACA,aAAO,IAAP;AACD;;;WAKD,yBAAuBF,EAAvB,EAAmC;AACjC,WAAKe,YAAL,CAAkB,KAAKrD,SAAL,GAAiBsC,EAAnC;AACA,aAAO,IAAP;AACD;;;WAKD,oBAAkBgB,EAAlB,EAA8B;AAC5B,WAAKC,OAAL,CAAa,KAAKtD,IAAL,GAAYqD,EAAzB;AACA,aAAO,IAAP;AACD;;;WAMD,oBAAkBd,EAAlB,EAA8B;AAC5B,WAAKzC,OAAL,GAAenB,QAAQ,CAAC4D,EAAD,CAAvB;AACA,WAAKgB,aAAL;;AAEA,WAAKT,QAAL;;AACA,UACE,KAAK3D,IAAL,KAAcP,WAAW,CAAC4E,QAA1B,IACA,KAAKrE,IAAL,KAAcP,WAAW,CAACiC,SAF5B,EAGE;AACA,aAAK4C,YAAL;AACD,OALD,MAKO,IAAI,KAAKtE,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AAC7C,aAAKuC,cAAL;AACD;;AACD,aAAO,IAAP;AACD;;;WAED,sBAAoB;AAClB,aAAO,KAAK5D,OAAZ;AACD;;;WAMD,sBAAoBuC,EAApB,EAAgC;AAC9B,WAAKtC,SAAL,GAAiBpB,QAAQ,CAAC0D,EAAD,CAAzB;AACA,WAAKkB,aAAL;;AAEA,WAAKT,QAAL;;AACA,UACE,KAAK3D,IAAL,KAAcP,WAAW,CAAC4E,QAA1B,IACA,KAAKrE,IAAL,KAAcP,WAAW,CAACiC,SAF5B,EAGE;AACA,aAAK4C,YAAL;AACD,OALD,MAKO,IAAI,KAAKtE,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AAC7C,aAAKuC,cAAL;AACD;;AACD,aAAO,IAAP;AACD;;;WAMD,iBAAejC,KAAf,EAA8B;AAC5B,WAAKzB,IAAL,GAAYrB,QAAQ,CAAC8C,KAAD,CAApB;AACA,WAAK8B,aAAL;;AAEA,WAAKT,QAAL;;AACA,UACE,KAAK3D,IAAL,KAAcP,WAAW,CAAC4E,QAA1B,IACA,KAAKrE,IAAL,KAAcP,WAAW,CAACiC,SAF5B,EAGE;AACA,aAAK4C,YAAL;AACD,OALD,MAKO,IAAI,KAAKtE,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AAC7C,aAAKuC,cAAL;AACD;;AACD,aAAO,IAAP;AACD;;;WAQD,gBAAc5D,OAAd,EAA+BC,SAA/B,EAAkDC,IAAlD,EAAgE;AAC9D,UAAI,KAAKb,IAAL,KAAcP,WAAW,CAACiC,SAA9B,EAAyC;AACvCf,QAAAA,OAAO,GAAGnB,QAAQ,CAACmB,OAAD,CAAlB;AACAC,QAAAA,SAAS,GAAGpB,QAAQ,CAACoB,SAAD,CAApB;AACAC,QAAAA,IAAI,GAAGrB,QAAQ,CAACqB,IAAD,CAAf;AAEA,YAAM2D,IAAI,GAAGpF,IAAI,CAACqF,YAAL,CACXrF,IAAI,CAACc,MAAL,EADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW,EAGX,CAAC,KAAKgB,WAAL,GAAmB,CAAnB,GAAuB,CAAC,CAAzB,IAA8BN,SAA9B,GAA0CjB,SAH/B,CAAb;AAKA,YAAM+E,IAAI,GAAGtF,IAAI,CAACqF,YAAL,CACXrF,IAAI,CAACc,MAAL,EADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW,EAGX,CAAC,KAAKgB,WAAL,GAAmB,CAAnB,GAAuB,CAAC,CAAzB,IAA8BP,OAA9B,GAAwChB,SAH7B,CAAb;AAMA,YAAMgF,IAAI,GAAGvF,IAAI,CAACqF,YAAL,CACXrF,IAAI,CAACc,MAAL,EADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW,EAGXW,IAAI,GAAGlB,SAHI,CAAb;AAKA,YAAIiF,IAAI,GAAGxF,IAAI,CAACyF,QAAL,CAAczF,IAAI,CAACc,MAAL,EAAd,EAA6BwE,IAA7B,EAAmCF,IAAnC,CAAX;AACAI,QAAAA,IAAI,GAAGxF,IAAI,CAACyF,QAAL,CAAczF,IAAI,CAACc,MAAL,EAAd,EAA6B0E,IAA7B,EAAmCD,IAAnC,CAAP;AACA,YAAMG,SAAS,GAAG3F,IAAI,CAAC4F,QAAL,CAAc5F,IAAI,CAACe,MAAL,EAAd,EAA6B0E,IAA7B,CAAlB;AACAzF,QAAAA,IAAI,CAAC6F,SAAL,CAAe,KAAK/E,MAApB,EAA4B,KAAKA,MAAjC,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,KAAKS,QAAb,CAAzC;AACAvB,QAAAA,IAAI,CAAC0F,QAAL,CAAc,KAAK5E,MAAnB,EAA2B,KAAKA,MAAhC,EAAwC6E,SAAxC;AACA3F,QAAAA,IAAI,CAAC6F,SAAL,CAAe,KAAK/E,MAApB,EAA4B,KAAKA,MAAjC,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAKS,QAAZ,CAAzC;AACD,OA3BD,MA2BO;AACL,YAAId,IAAI,CAACqF,GAAL,CAAS,KAAKrE,SAAL,GAAiBA,SAA1B,IAAuC,EAA3C,EAA+C;AAC7C;AACD;;AACD,aAAKG,YAAL,GAAoBvB,QAAQ,CAACoB,SAAD,CAA5B;AACA,aAAKE,UAAL,GAAkBtB,QAAQ,CAACmB,OAAD,CAA1B;AACA,aAAKK,OAAL,GAAexB,QAAQ,CAACqB,IAAD,CAAvB;AACA,aAAKD,SAAL,IAAkB,KAAKG,YAAvB;AACA,aAAKJ,OAAL,IAAgB,KAAKG,UAArB;AACA,aAAKD,IAAL,IAAa,KAAKG,OAAlB;AAEA,aAAKoD,aAAL;AACD;;AAED,WAAKT,QAAL;;AACA,UACE,KAAK3D,IAAL,KAAcP,WAAW,CAAC4E,QAA1B,IACA,KAAKrE,IAAL,KAAcP,WAAW,CAACiC,SAF5B,EAGE;AACA,aAAK4C,YAAL;AACD,OALD,MAKO,IAAI,KAAKtE,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AAC7C,aAAKuC,cAAL;AACD;;AAED,WAAKlC,OAAL;;AACA,aAAO,IAAP;AACD;;;WAKD,aAAW6C,EAAX,EAAuBC,EAAvB,EAAmC;AACjC,UAAMC,MAAM,GAAG7F,UAAU,CAAC2F,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAzB;AACA,UAAMtB,GAAG,GAAGxE,IAAI,CAACgG,KAAL,CAAW,KAAK9E,QAAhB,CAAZ;AAEAlB,MAAAA,IAAI,CAACiG,GAAL,CAASzB,GAAT,EAAcA,GAAd,EAAmBxE,IAAI,CAACkG,KAAL,CAAWlG,IAAI,CAACa,MAAL,EAAX,EAA0B,KAAKC,KAA/B,EAAsCiF,MAAM,CAAC,CAAD,CAA5C,CAAnB;AACA/F,MAAAA,IAAI,CAACiG,GAAL,CAASzB,GAAT,EAAcA,GAAd,EAAmBxE,IAAI,CAACkG,KAAL,CAAWlG,IAAI,CAACa,MAAL,EAAX,EAA0B,KAAKG,EAA/B,EAAmC+E,MAAM,CAAC,CAAD,CAAzC,CAAnB;;AAEA,WAAKzC,YAAL,CAAkBkB,GAAlB;;AAEA,aAAO,IAAP;AACD;;;WAKD,eAAa2B,KAAb,EAA4B;AAC1B,UAAM1B,CAAC,GAAG,KAAKxD,OAAf;AACA,UAAMuD,GAAG,GAAGxE,IAAI,CAACgG,KAAL,CAAW,KAAK9E,QAAhB,CAAZ;AACA,UAAMkF,IAAI,GAAGD,KAAK,GAAG,KAAKvE,YAA1B;AACA4C,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAU4B,IAAI,GAAG3B,CAAC,CAAC,CAAD,CAAlB;AACAD,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAU4B,IAAI,GAAG3B,CAAC,CAAC,CAAD,CAAlB;AACAD,MAAAA,GAAG,CAAC,CAAD,CAAH,IAAU4B,IAAI,GAAG3B,CAAC,CAAC,CAAD,CAAlB;;AAEA,WAAKnB,YAAL,CAAkBkB,GAAlB;;AACA,UACE,KAAK7D,IAAL,KAAcP,WAAW,CAAC4E,QAA1B,IACA,KAAKrE,IAAL,KAAcP,WAAW,CAACiC,SAF5B,EAGE;AAEA,aAAKkC,YAAL;AACD,OAND,MAMO,IAAI,KAAK5D,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AAE7C3C,QAAAA,IAAI,CAACiG,GAAL,CAAS,KAAK9E,UAAd,EAA0BqD,GAA1B,EAA+B,KAAKpD,cAApC;AACD;;AACD,aAAO,IAAP;AACD;;;WASD,mBAAkB;AAChB,WAAKkD,QAAL;;AACA,WAAKW,YAAL;;AACA,WAAKV,YAAL;;AACA,WAAK7B,UAAL;AACD;;;WAKD,yBAAwB;AACtB,UAAIyC,IAAJ;AACA,UAAIE,IAAJ;AAGA,UAAMC,IAAI,GAAGvF,IAAI,CAACqF,YAAL,CACXrF,IAAI,CAACc,MAAL,EADW,EAEX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFW,EAGX,KAAKW,IAAL,GAAYlB,SAHD,CAAb;AAMAR,MAAAA,IAAI,CAACuG,QAAL,CAAc,KAAKzF,MAAnB;AAGAuE,MAAAA,IAAI,GAAGpF,IAAI,CAACqF,YAAL,CACLrF,IAAI,CAACc,MAAL,EADK,EAEL,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFK,EAGL,CAAC,KAAKgB,WAAL,IAAoB,KAAKlB,IAAL,KAAcP,WAAW,CAACuC,QAA9C,GAAyD,CAAzD,GAA6D,CAAC,CAA/D,IACE,KAAKpB,SADP,GAEEjB,SALG,CAAP;AAOA+E,MAAAA,IAAI,GAAGtF,IAAI,CAACqF,YAAL,CACLrF,IAAI,CAACc,MAAL,EADK,EAEL,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFK,EAGL,CAAC,KAAKgB,WAAL,GAAmB,CAAnB,GAAuB,CAAC,CAAzB,IAA8B,KAAKP,OAAnC,GAA6ChB,SAHxC,CAAP;AAMA,UAAIiF,IAAI,GAAGxF,IAAI,CAACyF,QAAL,CAAczF,IAAI,CAACc,MAAL,EAAd,EAA6BwE,IAA7B,EAAmCF,IAAnC,CAAX;AACAI,MAAAA,IAAI,GAAGxF,IAAI,CAACyF,QAAL,CAAczF,IAAI,CAACc,MAAL,EAAd,EAA6B0E,IAA7B,EAAmCD,IAAnC,CAAP;AACA,UAAMG,SAAS,GAAG3F,IAAI,CAAC4F,QAAL,CAAc5F,IAAI,CAACe,MAAL,EAAd,EAA6B0E,IAA7B,CAAlB;;AAEA,UACE,KAAK5E,IAAL,KAAcP,WAAW,CAAC4E,QAA1B,IACA,KAAKrE,IAAL,KAAcP,WAAW,CAACiC,SAF5B,EAGE;AACAvC,QAAAA,IAAI,CAAC6F,SAAL,CAAe,KAAK/E,MAApB,EAA4B,KAAKA,MAAjC,EAAyC,KAAKO,UAA9C;AACArB,QAAAA,IAAI,CAAC0F,QAAL,CAAc,KAAK5E,MAAnB,EAA2B,KAAKA,MAAhC,EAAwC6E,SAAxC;AACA3F,QAAAA,IAAI,CAAC6F,SAAL,CAAe,KAAK/E,MAApB,EAA4B,KAAKA,MAAjC,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAKS,QAAZ,CAAzC;AACD,OAPD,MAOO,IAAI,KAAKV,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AAC7C7C,QAAAA,IAAI,CAAC6F,SAAL,CAAe,KAAK/E,MAApB,EAA4B,KAAKA,MAAjC,EAAyC,KAAKM,QAA9C;AACApB,QAAAA,IAAI,CAAC0F,QAAL,CAAc,KAAK5E,MAAnB,EAA2B,KAAKA,MAAhC,EAAwC6E,SAAxC;AACD;AACF;;;WAKD,sBAAqBtC,CAArB,EAAuCC,CAAvC,EAAmDC,CAAnD,EAA+D;AAC7D,WAAKnC,QAAL,GAAgBhB,UAAU,CAACiD,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAA1B;AACA,UAAMY,CAAC,GAAG,KAAKrD,MAAf;AACAqD,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK/C,QAAL,CAAc,CAAd,CAAR;AACA+C,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK/C,QAAL,CAAc,CAAd,CAAR;AACA+C,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK/C,QAAL,CAAc,CAAd,CAAR;AACA+C,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAAR;AACD;;;WAKD,oBAAmB;AACjBjE,MAAAA,IAAI,CAACsG,IAAL,CACE,KAAKxF,KADP,EAEEZ,UAAU,CAACD,IAAI,CAACmE,aAAL,CAAmBnE,IAAI,CAACY,MAAL,EAAnB,EAAkC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlC,EAAgD,KAAKD,MAArD,CAAD,CAFZ;AAIAZ,MAAAA,IAAI,CAACsG,IAAL,CACE,KAAKtF,EADP,EAEEd,UAAU,CAACD,IAAI,CAACmE,aAAL,CAAmBnE,IAAI,CAACY,MAAL,EAAnB,EAAkC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlC,EAAgD,KAAKD,MAArD,CAAD,CAFZ;AAIAZ,MAAAA,IAAI,CAACsG,IAAL,CACE,KAAKrF,OADP,EAEEf,UAAU,CAACD,IAAI,CAACmE,aAAL,CAAmBnE,IAAI,CAACY,MAAL,EAAnB,EAAkC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlC,EAAgD,KAAKD,MAArD,CAAD,CAFZ;AAIAZ,MAAAA,IAAI,CAACuG,SAAL,CAAe,KAAKzF,KAApB,EAA2B,KAAKA,KAAhC;AACAd,MAAAA,IAAI,CAACuG,SAAL,CAAe,KAAKvF,EAApB,EAAwB,KAAKA,EAA7B;AACAhB,MAAAA,IAAI,CAACuG,SAAL,CAAe,KAAKtF,OAApB,EAA6B,KAAKA,OAAlC;AACD;;;WAKD,sBAAqB;AAEnB,UAAMkC,CAAC,GAAG,KAAK/B,cAAL,CAAoB,CAApB,CAAV;AACA,UAAMgC,CAAC,GAAG,KAAKhC,cAAL,CAAoB,CAApB,CAAV;AACA,UAAMiC,CAAC,GAAG,KAAKjC,cAAL,CAAoB,CAApB,CAAV;AACA,UAAMuC,CAAC,GAAG3D,IAAI,CAAC4D,MAAL,CAAY,KAAKxC,cAAjB,CAAV;;AAGA,UAAIuC,CAAC,KAAK,CAAV,EAAa;AACX,aAAKpC,SAAL,GAAiB,CAAjB;AACA,aAAKD,OAAL,GAAe,CAAf;AACA;AACD;;AAED,UAAI,KAAKX,IAAL,KAAcP,WAAW,CAACuC,QAA9B,EAAwC;AACtC,aAAKpB,SAAL,GAAiBhB,IAAI,CAACuD,IAAL,CAAUV,CAAC,GAAGO,CAAd,IAAmBlD,SAApC;AACA,aAAKa,OAAL,GAAef,IAAI,CAACyD,KAAL,CAAW,CAACb,CAAZ,EAAe,CAACE,CAAhB,IAAqB5C,SAApC;AACD,OAHD,MAGO;AACL,YAAI,KAAKoB,WAAT,EAAsB;AACpB,eAAKN,SAAL,GAAiBhB,IAAI,CAACuD,IAAL,CAAUV,CAAC,GAAGO,CAAd,IAAmBlD,SAApC;AACA,eAAKa,OAAL,GAAef,IAAI,CAACyD,KAAL,CAAW,CAACb,CAAZ,EAAe,CAACE,CAAhB,IAAqB5C,SAApC;AACD,SAHD,MAGO;AACL,eAAKc,SAAL,GAAiB,CAAChB,IAAI,CAACuD,IAAL,CAAUV,CAAC,GAAGO,CAAd,CAAD,GAAoBlD,SAArC;AACA,eAAKa,OAAL,GAAe,CAACf,IAAI,CAACyD,KAAL,CAAW,CAACb,CAAZ,EAAe,CAACE,CAAhB,CAAD,GAAsB5C,SAArC;AACD;AACF;AACF;;;WAKD,wBAAuB;AACrBT,MAAAA,IAAI,CAACsG,IAAL,CACE,KAAKpF,QADP,EAEEhB,UAAU,CAACD,IAAI,CAACmE,aAAL,CAAmBnE,IAAI,CAACY,MAAL,EAAnB,EAAkC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlC,EAAgD,KAAKD,MAArD,CAAD,CAFZ;;AAMA,WAAK2D,YAAL;AACD;;;WAKD,0BAAyB;AACvBvE,MAAAA,IAAI,CAACwG,aAAL,CACE,KAAKpF,cADP,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,KAAKC,QAAb,CAFF,EAGExB,IAAI,CAAC4G,QAAL,CAAc5G,IAAI,CAACgB,MAAL,EAAd,EAA6B,KAAKD,MAAlC,CAHF;AAKAZ,MAAAA,IAAI,CAACiG,GAAL,CAAS,KAAK9E,UAAd,EAA0B,KAAKD,QAA/B,EAAyC,KAAKE,cAA9C;;AAGA,WAAKmD,YAAL;AACD;;;WAKD,wBAAuB;AACrB,WAAKnD,cAAL,GAAsBpB,IAAI,CAAC0D,QAAL,CACpB1D,IAAI,CAACa,MAAL,EADoB,EAEpB,KAAKM,UAFe,EAGpB,KAAKD,QAHe,CAAtB;AAKA,WAAKG,QAAL,GAAgBrB,IAAI,CAAC4D,MAAL,CAAY,KAAKxC,cAAjB,CAAhB;AACA,WAAKQ,YAAL,GAAoB,KAAKP,QAAL,GAAgB,GAApC;AACD;;;;;;SA9kBkBX,M","sourcesContent":["import { mat3, mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { createVec3, getAngle } from '../../utils/math';\n// import Landmark from './Landmark';\n\nexport enum CAMERA_TYPE {\n  ORBITING = 'ORBITING',\n  EXPLORING = 'EXPLORING',\n  TRACKING = 'TRACKING',\n}\n\nexport enum CAMERA_TRACKING_MODE {\n  DEFAULT = 'DEFAULT',\n  ROTATIONAL = 'ROTATIONAL',\n  TRANSLATIONAL = 'TRANSLATIONAL',\n  CINEMATIC = 'CINEMATIC',\n}\n\nconst DEG_2_RAD = Math.PI / 180;\nconst RAD_2_DEG = 180 / Math.PI;\n\n/**\n * 参考「WebGL Insights - 23.Designing Cameras for WebGL Applications」，基于 Responsible Camera 思路设计\n * 保存相机参数，定义相机动作：\n * 1. dolly 沿 n 轴移动\n * 2. pan 沿 u v 轴移动\n * 3. rotate 以方位角旋转\n * 4. 移动到 Landmark，具有平滑的动画效果，其间禁止其他用户交互\n */\nexport default class Camera {\n  /**\n   * 相机矩阵\n   */\n  public matrix = mat4.create();\n\n  /**\n   * u 轴\n   * @see http://learnwebgl.brown37.net/07_cameras/camera_introduction.html#a-camera-definition\n   */\n  public right = vec3.fromValues(1, 0, 0);\n\n  /**\n   * v 轴\n   */\n  public up = vec3.fromValues(0, 1, 0);\n\n  /**\n   * n 轴\n   */\n  public forward = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 相机位置\n   */\n  public position = vec3.fromValues(0, 0, 1);\n\n  /**\n   * 视点位置\n   */\n  public focalPoint = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点向量\n   * focalPoint - position\n   */\n  public distanceVector = vec3.fromValues(0, 0, 0);\n\n  /**\n   * 相机位置到视点距离\n   * length(focalPoint - position)\n   */\n  public distance = 1;\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Azimuth\n   */\n  public azimuth = 0;\n  public elevation = 0;\n  public roll = 0;\n  public relAzimuth = 0;\n  public relElevation = 0;\n  public relRoll = 0;\n\n  /**\n   * 沿 n 轴移动时，保证移动速度从快到慢\n   */\n  public dollyingStep = 0;\n\n  /**\n   * invert the horizontal coordinate system HCS\n   */\n  public rotateWorld = false;\n\n  /**\n   * 投影矩阵参数\n   */\n\n  /**\n   * field of view [0-360]\n   * @see http://en.wikipedia.org/wiki/Angle_of_view\n   */\n  private fov = 30;\n  private near = 0.1;\n  private far = 10000;\n  private aspect = 1;\n\n  /**\n   * 投影矩阵\n   */\n  private perspective = mat4.create();\n\n  private following = undefined;\n\n  private type = CAMERA_TYPE.EXPLORING;\n  private trackingMode = CAMERA_TRACKING_MODE.DEFAULT;\n\n  constructor(type: CAMERA_TYPE) {\n    this.setType(type, undefined);\n  }\n\n  public setType(\n    type: CAMERA_TYPE,\n    trackingMode: CAMERA_TRACKING_MODE | undefined,\n  ) {\n    this.type = type;\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      this.setWorldRotation(true);\n    } else {\n      this.setWorldRotation(false);\n    }\n    this._getAngles();\n\n    if (this.type === CAMERA_TYPE.TRACKING && trackingMode !== undefined) {\n      this.setTrackingMode(trackingMode);\n    }\n  }\n\n  public setTrackingMode(trackingMode: CAMERA_TRACKING_MODE) {\n    if (this.type !== CAMERA_TYPE.TRACKING) {\n      throw new Error(\n        'Impossible to set a tracking mode if the camera is not of tracking type',\n      );\n    }\n    this.trackingMode = trackingMode;\n  }\n\n  /**\n   * If flag is true, it reverses the azimuth and elevation angles.\n   * Subsequent calls to rotate, setAzimuth, setElevation,\n   * changeAzimuth or changeElevation will cause the inverted effect.\n   * setRoll or changeRoll is not affected by this method.\n   *\n   * This inversion is useful when one wants to simulate that the world\n   * is moving, instead of the camera.\n   *\n   * By default the camera angles are not reversed.\n   * @param {Boolean} flag the boolean flag to reverse the angles.\n   */\n  public setWorldRotation(flag: boolean) {\n    this.rotateWorld = flag;\n    this._getAngles();\n  }\n\n  /**\n   * 计算 MV 矩阵，为相机矩阵的逆矩阵\n   */\n  public getViewTransform(): mat4 | null {\n    return mat4.invert(mat4.create(), this.matrix);\n  }\n\n  /**\n   * 设置相机矩阵\n   */\n  public setMatrix(matrix: mat4) {\n    this.matrix = matrix;\n    this._update();\n  }\n\n  public setPerspective(\n    near: number,\n    far: number,\n    angle: number,\n    aspect: number,\n  ) {\n    this.fov = angle;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    this.updatePerspective();\n  }\n\n  public updatePerspective() {\n    mat4.perspective(\n      this.perspective,\n      this.fov * DEG_2_RAD,\n      this.aspect,\n      this.near,\n      this.far,\n    );\n  }\n\n  /**\n   * 设置相机位置\n   */\n  public setPosition(x: number, y: number, z: number) {\n    this._setPosition(x, y, z);\n    this.setFocalPoint(this.focalPoint);\n    return this;\n  }\n\n  /**\n   * 设置视点位置\n   */\n  public setFocalPoint(x: number | vec3, y?: number, z?: number) {\n    let up = vec3.fromValues(0, 1, 0);\n    this.focalPoint = createVec3(x, y, z);\n\n    if (this.trackingMode === CAMERA_TRACKING_MODE.CINEMATIC) {\n      const d = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n      x = d[0];\n      y = d[1] as number;\n      z = d[2] as number;\n      const r = vec3.length(d);\n      const el = Math.asin(y / r) * RAD_2_DEG;\n      const az = 90 + Math.atan2(z, x) * RAD_2_DEG;\n      const m = mat4.create();\n      mat4.rotateY(m, m, az * DEG_2_RAD);\n      mat4.rotateX(m, m, el * DEG_2_RAD);\n      up = vec3.transformMat4(vec3.create(), [0, 1, 0], m);\n    }\n\n    mat4.invert(\n      this.matrix,\n      mat4.lookAt(mat4.create(), this.position, this.focalPoint, up),\n    );\n\n    this._getAxes();\n    this._getDistance();\n    this._getAngles();\n    return this;\n  }\n\n  /**\n   * 固定当前视点，按指定距离放置相机\n   */\n  public setDistance(d: number) {\n    if (this.distance === d || d < 0) {\n      return;\n    }\n\n    this.distance = d;\n    this.dollyingStep = this.distance / 100;\n\n    const pos = vec3.create();\n    const n = this.forward;\n    const f = this.focalPoint;\n\n    pos[0] = d * n[0] + f[0];\n    pos[1] = d * n[1] + f[1];\n    pos[2] = d * n[2] + f[2];\n\n    this._setPosition(pos);\n    return this;\n  }\n\n  /**\n   * Changes the initial azimuth of the camera\n   */\n  public changeAzimuth(az: number) {\n    this.setAzimuth(this.azimuth + az);\n    return this;\n  }\n\n  /**\n   * Changes the initial elevation of the camera\n   */\n  public changeElevation(el: number) {\n    this.setElevation(this.elevation + el);\n    return this;\n  }\n\n  /**\n   * Changes the initial roll of the camera\n   */\n  public changeRoll(rl: number) {\n    this.setRoll(this.roll + rl);\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the azimuth in degrees\n   */\n  public setAzimuth(az: number) {\n    this.azimuth = getAngle(az);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  public getAzimuth() {\n    return this.azimuth;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} el the elevation in degrees\n   */\n  public setElevation(el: number) {\n    this.elevation = getAngle(el);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * @param {Number} angle the roll angle\n   */\n  public setRoll(angle: number) {\n    this.roll = getAngle(angle);\n    this.computeMatrix();\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n    return this;\n  }\n\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n  public rotate(azimuth: number, elevation: number, roll: number) {\n    if (this.type === CAMERA_TYPE.EXPLORING) {\n      azimuth = getAngle(azimuth);\n      elevation = getAngle(elevation);\n      roll = getAngle(roll);\n\n      const rotX = quat.setAxisAngle(\n        quat.create(),\n        [1, 0, 0],\n        (this.rotateWorld ? 1 : -1) * elevation * DEG_2_RAD,\n      );\n      const rotY = quat.setAxisAngle(\n        quat.create(),\n        [0, 1, 0],\n        (this.rotateWorld ? 1 : -1) * azimuth * DEG_2_RAD,\n      );\n\n      const rotZ = quat.setAxisAngle(\n        quat.create(),\n        [0, 0, 1],\n        roll * DEG_2_RAD,\n      );\n      let rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation + elevation) > 90) {\n        return;\n      }\n      this.relElevation = getAngle(elevation);\n      this.relAzimuth = getAngle(azimuth);\n      this.relRoll = getAngle(roll);\n      this.elevation += this.relElevation;\n      this.azimuth += this.relAzimuth;\n      this.roll += this.relRoll;\n\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n    return this;\n  }\n\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n  public pan(tx: number, ty: number) {\n    const coords = createVec3(tx, ty, 0);\n    const pos = vec3.clone(this.position);\n\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    return this;\n  }\n\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n  public dolly(value: number) {\n    const n = this.forward;\n    const pos = vec3.clone(this.position);\n    const step = value * this.dollyingStep;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n    return this;\n  }\n\n  // public createLandmark(name: string): Landmark {\n  //   return new Landmark(name, this);\n  // }\n\n  /**\n   * 根据相机矩阵重新计算各种相机参数\n   */\n  private _update() {\n    this._getAxes();\n    this._getPosition();\n    this._getDistance();\n    this._getAngles();\n  }\n\n  /**\n   * 计算相机矩阵\n   */\n  private computeMatrix() {\n    let rotX;\n    let rotY;\n    // 使用四元数描述 3D 旋转\n    // @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n    const rotZ = quat.setAxisAngle(\n      quat.create(),\n      [0, 0, 1],\n      this.roll * DEG_2_RAD,\n    );\n\n    mat4.identity(this.matrix);\n\n    // only consider HCS for EXPLORING and ORBITING cameras\n    rotX = quat.setAxisAngle(\n      quat.create(),\n      [1, 0, 0],\n      (this.rotateWorld || this.type === CAMERA_TYPE.TRACKING ? 1 : -1) *\n        this.elevation *\n        DEG_2_RAD,\n    );\n    rotY = quat.setAxisAngle(\n      quat.create(),\n      [0, 1, 0],\n      (this.rotateWorld ? 1 : -1) * this.azimuth * DEG_2_RAD,\n    );\n\n    let rotQ = quat.multiply(quat.create(), rotY, rotX);\n    rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n    const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n\n    if (\n      this.type === CAMERA_TYPE.ORBITING ||\n      this.type === CAMERA_TYPE.EXPLORING\n    ) {\n      mat4.translate(this.matrix, this.matrix, this.focalPoint);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else if (this.type === CAMERA_TYPE.TRACKING) {\n      mat4.translate(this.matrix, this.matrix, this.position);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n    }\n  }\n\n  /**\n   * Sets the camera position in the camera matrix\n   */\n  private _setPosition(x: number | vec3, y?: number, z?: number) {\n    this.position = createVec3(x, y, z);\n    const m = this.matrix;\n    m[12] = this.position[0];\n    m[13] = this.position[1];\n    m[14] = this.position[2];\n    m[15] = 1;\n  }\n\n  /**\n   * Recalculates axes based on the current matrix\n   */\n  private _getAxes() {\n    vec3.copy(\n      this.right,\n      createVec3(vec4.transformMat4(vec4.create(), [1, 0, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.up,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 1, 0, 0], this.matrix)),\n    );\n    vec3.copy(\n      this.forward,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 1, 0], this.matrix)),\n    );\n    vec3.normalize(this.right, this.right);\n    vec3.normalize(this.up, this.up);\n    vec3.normalize(this.forward, this.forward);\n  }\n\n  /**\n   * Recalculates euler angles based on the current state\n   */\n  private _getAngles() {\n    // Recalculates angles\n    const x = this.distanceVector[0];\n    const y = this.distanceVector[1];\n    const z = this.distanceVector[2];\n    const r = vec3.length(this.distanceVector);\n\n    // FAST FAIL: If there is no distance we cannot compute angles\n    if (r === 0) {\n      this.elevation = 0;\n      this.azimuth = 0;\n      return;\n    }\n\n    if (this.type === CAMERA_TYPE.TRACKING) {\n      this.elevation = Math.asin(y / r) * RAD_2_DEG;\n      this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n    } else {\n      if (this.rotateWorld) {\n        this.elevation = Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n      } else {\n        this.elevation = -Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = -Math.atan2(-x, -z) * RAD_2_DEG;\n      }\n    }\n  }\n\n  /**\n   * 重新计算相机位置，只有 ORBITING 模式相机位置才会发生变化\n   */\n  private _getPosition() {\n    vec3.copy(\n      this.position,\n      createVec3(vec4.transformMat4(vec4.create(), [0, 0, 0, 1], this.matrix)),\n    );\n\n    // 相机位置变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视点，只有 TRACKING 模式视点才会发生变化\n   */\n  private _getFocalPoint() {\n    vec3.transformMat3(\n      this.distanceVector,\n      [0, 0, -this.distance],\n      mat3.fromMat4(mat3.create(), this.matrix),\n    );\n    vec3.add(this.focalPoint, this.position, this.distanceVector);\n\n    // 视点变化，需要重新计算视距\n    this._getDistance();\n  }\n\n  /**\n   * 重新计算视距\n   */\n  private _getDistance() {\n    this.distanceVector = vec3.subtract(\n      vec3.create(),\n      this.focalPoint,\n      this.position,\n    );\n    this.distance = vec3.length(this.distanceVector);\n    this.dollyingStep = this.distance / 100;\n  }\n}\n"],"file":"Camera.js"}