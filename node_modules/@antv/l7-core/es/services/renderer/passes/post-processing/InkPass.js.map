{"version":3,"sources":["../../../../../src/services/renderer/passes/post-processing/InkPass.ts"],"names":["injectable","BasePostProcessingPass","InkPass","shaderModuleService","registerModule","vs","quad","fs","ink","getModule","uniforms","rendererService","getViewportSize","width","height","u_ViewportSize"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;;;AAGA,OAAOC,sBAAP,MAAmC,2BAAnC;IAOqBC,O,WADpBF,UAAU,E;;;;;;;;;;;;;WAET,wBAAyB;AACvB,WAAKG,mBAAL,CAAyBC,cAAzB,CAAwC,UAAxC,EAAoD;AAClDC,QAAAA,EAAE,EAAEC,IAD8C;AAElDC,QAAAA,EAAE,EAAEC;AAF8C,OAApD;;AADuB,kCAMM,KAAKL,mBAAL,CAAyBM,SAAzB,CAAmC,UAAnC,CANN;AAAA,UAMfJ,EANe,yBAMfA,EANe;AAAA,UAMXE,EANW,yBAMXA,EANW;AAAA,UAMPG,QANO,yBAMPA,QANO;;AAAA,kCAOG,KAAKC,eAAL,CAAqBC,eAArB,EAPH;AAAA,UAOfC,KAPe,yBAOfA,KAPe;AAAA,UAORC,MAPQ,yBAORA,MAPQ;;AASvB,aAAO;AACLT,QAAAA,EAAE,EAAFA,EADK;AAELE,QAAAA,EAAE,EAAFA,EAFK;AAGLG,QAAAA,QAAQ,kCACHA,QADG;AAENK,UAAAA,cAAc,EAAE,CAACF,KAAD,EAAQC,MAAR;AAFV;AAHH,OAAP;AAQD;;;;EAlBkCb,sB;SAAhBC,O","sourcesContent":["import { injectable } from 'inversify';\nimport ink from '../../../../shaders/post-processing/ink.glsl';\nimport quad from '../../../../shaders/post-processing/quad.glsl';\nimport BasePostProcessingPass from '../BasePostProcessingPass';\n\nexport interface IInkPassConfig {\n  strength: number;\n}\n\n@injectable()\nexport default class InkPass extends BasePostProcessingPass<IInkPassConfig> {\n  protected setupShaders() {\n    this.shaderModuleService.registerModule('ink-pass', {\n      vs: quad,\n      fs: ink,\n    });\n\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule('ink-pass');\n    const { width, height } = this.rendererService.getViewportSize();\n\n    return {\n      vs,\n      fs,\n      uniforms: {\n        ...uniforms,\n        u_ViewportSize: [width, height],\n      },\n    };\n  }\n}\n"],"file":"InkPass.js"}