{"version":3,"sources":["../../../../../src/services/renderer/passes/post-processing/BlurVPass.ts"],"names":["injectable","BasePostProcessingPass","BlurVPass","shaderModuleService","registerModule","vs","quad","fs","blur","getModule","uniforms","rendererService","getViewportSize","width","height","u_ViewportSize","options","blurRadius","u_BlurDir"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;;;AAKA,OAAOC,sBAAP,MAAmC,2BAAnC;IAOqBC,S,WADpBF,UAAU,E;;;;;;;;;;;;;WAIT,wBAAsB;AACpB,WAAKG,mBAAL,CAAyBC,cAAzB,CAAwC,WAAxC,EAAqD;AACnDC,QAAAA,EAAE,EAAEC,IAD+C;AAEnDC,QAAAA,EAAE,EAAEC;AAF+C,OAArD;;AADoB,kCAMS,KAAKL,mBAAL,CAAyBM,SAAzB,CAC3B,WAD2B,CANT;AAAA,UAMZJ,EANY,yBAMZA,EANY;AAAA,UAMRE,EANQ,yBAMRA,EANQ;AAAA,UAMJG,QANI,yBAMJA,QANI;;AAAA,kCASM,KAAKC,eAAL,CAAqBC,eAArB,EATN;AAAA,UASZC,KATY,yBASZA,KATY;AAAA,UASLC,MATK,yBASLA,MATK;;AAWpB,aAAO;AACLT,QAAAA,EAAE,EAAFA,EADK;AAELE,QAAAA,EAAE,EAAFA,EAFK;AAGLG,QAAAA,QAAQ,kCACHA,QADG;AAENK,UAAAA,cAAc,EAAE,CAACF,KAAD,EAAQC,MAAR;AAFV;AAHH,OAAP;AAQD;;;WAED,kCACEE,OADF,EAIS;AACP,UAAMN,QAEL,GAAG,EAFJ;;AAIA,UAAI,CAAC,OAAMM,OAAO,CAACC,UAAd,CAAL,EAAgC;AAC9BP,QAAAA,QAAQ,CAACQ,SAAT,GAAqB,CAAC,CAAD,EAAIF,OAAO,CAACC,UAAZ,CAArB;AACD;;AAED,aAAOP,QAAP;AACD;;;;EAtCoCT,sB;SAAlBC,S","sourcesContent":["import { injectable } from 'inversify';\nimport { isNil } from 'lodash';\nimport blur from '../../../../shaders/post-processing/blur.glsl';\nimport quad from '../../../../shaders/post-processing/quad.glsl';\nimport { IUniform } from '../../IUniform';\nimport BasePostProcessingPass from '../BasePostProcessingPass';\n\nexport interface IBlurVPassConfig {\n  blurRadius: number;\n}\n\n@injectable()\nexport default class BlurVPass extends BasePostProcessingPass<\n  IBlurVPassConfig\n> {\n  public setupShaders() {\n    this.shaderModuleService.registerModule('blur-pass', {\n      vs: quad,\n      fs: blur,\n    });\n\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule(\n      'blur-pass',\n    );\n    const { width, height } = this.rendererService.getViewportSize();\n\n    return {\n      vs,\n      fs,\n      uniforms: {\n        ...uniforms,\n        u_ViewportSize: [width, height],\n      },\n    };\n  }\n\n  protected convertOptionsToUniforms(\n    options: Partial<IBlurVPassConfig>,\n  ): {\n    [uniformName: string]: IUniform;\n  } | void {\n    const uniforms: {\n      [key: string]: IUniform;\n    } = {};\n\n    if (!isNil(options.blurRadius)) {\n      uniforms.u_BlurDir = [0, options.blurRadius];\n    }\n\n    return uniforms;\n  }\n}\n"],"file":"BlurVPass.js"}