{"version":3,"sources":["../../../../../src/services/renderer/passes/post-processing/HexagonalPixelatePass.ts"],"names":["injectable","BasePostProcessingPass","HexagonalPixelatePass","shaderModuleService","registerModule","vs","quad","fs","hexagonalPixelate","getModule","uniforms","rendererService","getViewportSize","width","height","u_ViewportSize"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;;;AAGA,OAAOC,sBAAP,MAAmC,2BAAnC;IAQqBC,qB,WADpBF,UAAU,E;;;;;;;;;;;;;WAIT,wBAAyB;AACvB,WAAKG,mBAAL,CAAyBC,cAAzB,CAAwC,wBAAxC,EAAkE;AAChEC,QAAAA,EAAE,EAAEC,IAD4D;AAEhEC,QAAAA,EAAE,EAAEC;AAF4D,OAAlE;;AADuB,kCAMM,KAAKL,mBAAL,CAAyBM,SAAzB,CAC3B,wBAD2B,CANN;AAAA,UAMfJ,EANe,yBAMfA,EANe;AAAA,UAMXE,EANW,yBAMXA,EANW;AAAA,UAMPG,QANO,yBAMPA,QANO;;AAAA,kCASG,KAAKC,eAAL,CAAqBC,eAArB,EATH;AAAA,UASfC,KATe,yBASfA,KATe;AAAA,UASRC,MATQ,yBASRA,MATQ;;AAWvB,aAAO;AACLT,QAAAA,EAAE,EAAFA,EADK;AAELE,QAAAA,EAAE,EAAFA,EAFK;AAGLG,QAAAA,QAAQ,kCACHA,QADG;AAENK,UAAAA,cAAc,EAAE,CAACF,KAAD,EAAQC,MAAR;AAFV;AAHH,OAAP;AAQD;;;;EAtBgDb,sB;SAA9BC,qB","sourcesContent":["import { injectable } from 'inversify';\nimport hexagonalPixelate from '../../../../shaders/post-processing/hexagonalpixelate.glsl';\nimport quad from '../../../../shaders/post-processing/quad.glsl';\nimport BasePostProcessingPass from '../BasePostProcessingPass';\n\nexport interface IHexagonalPixelatePassConfig {\n  center: [number, number];\n  scale: number;\n}\n\n@injectable()\nexport default class HexagonalPixelatePass extends BasePostProcessingPass<\n  IHexagonalPixelatePassConfig\n> {\n  protected setupShaders() {\n    this.shaderModuleService.registerModule('hexagonalpixelate-pass', {\n      vs: quad,\n      fs: hexagonalPixelate,\n    });\n\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule(\n      'hexagonalpixelate-pass',\n    );\n    const { width, height } = this.rendererService.getViewportSize();\n\n    return {\n      vs,\n      fs,\n      uniforms: {\n        ...uniforms,\n        u_ViewportSize: [width, height],\n      },\n    };\n  }\n}\n"],"file":"HexagonalPixelatePass.js"}