import { IMapService, IRendererService, IShaderModuleService } from '../../../index';
import { ICameraService } from '../../camera/ICameraService';
import { IInteractionService } from '../../interaction/IInteractionService';
import { ILayer, ILayerService } from '../../layer/ILayerService';
import { IPass, PassType } from '../IMultiPassRenderer';
/**
 * 常规 Pass 基类
 */
export default class BaseNormalPass<InitializationOptions = {}> implements IPass<InitializationOptions> {
    protected readonly shaderModuleService: IShaderModuleService;
    protected rendererService: IRendererService;
    protected cameraService: ICameraService;
    protected mapService: IMapService;
    protected interactionService: IInteractionService;
    protected layerService: ILayerService;
    protected config: Partial<InitializationOptions> | undefined;
    getName(): string;
    getType(): PassType;
    init(layer: ILayer, config?: Partial<InitializationOptions>): void;
    render(layer: ILayer): void;
}
