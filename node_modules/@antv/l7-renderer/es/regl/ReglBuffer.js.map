{"version":3,"sources":["../../src/regl/ReglBuffer.ts"],"names":["gl","dataTypeMap","usageMap","ReglBuffer","reGl","options","buffer","data","usage","type","STATIC_DRAW","UNSIGNED_BYTE","destroy","offset","subdata"],"mappings":";;AAAA,SAASA,EAAT,QAA0D,eAA1D;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;;IAMqBC,U;AAGnB,sBAAYC,IAAZ,EAA6BC,OAA7B,EAAoE;AAAA;;AAAA,SAF5DC,MAE4D;AAAA,QAC1DC,IAD0D,GACpCF,OADoC,CAC1DE,IAD0D;AAAA,QACpDC,KADoD,GACpCH,OADoC,CACpDG,KADoD;AAAA,QAC7CC,IAD6C,GACpCJ,OADoC,CAC7CI,IAD6C;AAElE,SAAKH,MAAL,GAAcF,IAAI,CAACE,MAAL,CAAY;AACxBC,MAAAA,IAAI,EAAJA,IADwB;AAExBC,MAAAA,KAAK,EAAEN,QAAQ,CAACM,KAAK,IAAIR,EAAE,CAACU,WAAb,CAFS;AAGxBD,MAAAA,IAAI,EAAER,WAAW,CAACQ,IAAI,IAAIT,EAAE,CAACW,aAAZ;AAHO,KAAZ,CAAd;AAMD;;;;WAED,eAAa;AACX,aAAO,KAAKL,MAAZ;AACD;;;WAED,mBAAiB;AACf,WAAKA,MAAL,CAAYM,OAAZ;AACD;;;WAED,uBAMG;AAAA,UALDL,IAKC,QALDA,IAKC;AAAA,UAJDM,MAIC,QAJDA,MAIC;AACD,WAAKP,MAAL,CAAYQ,OAAZ,CAAoBP,IAApB,EAA0BM,MAA1B;AACD;;;;;;SA7BkBV,U","sourcesContent":["import { gl, IBuffer, IBufferInitializationOptions } from '@antv/l7-core';\nimport regl from 'regl';\nimport { dataTypeMap, usageMap } from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglBuffer implements IBuffer {\n  private buffer: regl.Buffer;\n\n  constructor(reGl: regl.Regl, options: IBufferInitializationOptions) {\n    const { data, usage, type } = options;\n    this.buffer = reGl.buffer({\n      data,\n      usage: usageMap[usage || gl.STATIC_DRAW],\n      type: dataTypeMap[type || gl.UNSIGNED_BYTE],\n      // length: 0,\n    });\n  }\n\n  public get() {\n    return this.buffer;\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n\n  public subData({\n    data,\n    offset,\n  }: {\n    data: number[] | number[][] | Uint8Array | Uint16Array | Uint32Array;\n    offset: number;\n  }) {\n    this.buffer.subdata(data, offset);\n  }\n}\n"],"file":"ReglBuffer.js"}