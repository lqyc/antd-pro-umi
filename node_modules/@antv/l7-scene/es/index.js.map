{"version":3,"sources":["../src/index.ts"],"names":["Logo","createLayerContainer","createSceneContainer","SceneEventList","TYPES","ReglRendererService","DOM","Scene","config","sceneService","mapService","controlService","layerService","iconService","markerService","popupService","fontService","interactionService","container","id","map","sceneContainer","setContainer","bind","IRendererService","to","inSingletonScope","get","ISceneService","IMapService","IIconService","IFontService","IControlService","ILayerService","IMarkerService","IInteractionService","IPopupService","initComponent","init","initControl","getSize","getMinZoom","getMaxZoom","getType","getMapContainer","getMapCanvasContainer","type","exportPng","render","loaded","renderSerivce","on","layer","layerContainer","addLayer","getLayers","getLayer","name","getLayerByName","remove","removeAllLayers","img","addImage","hasImage","removeImage","fontFamily","glyphs","addIconGlyphs","ctr","addControl","removeControl","getControlByName","marker","addMarker","addMarkerLayer","removeMarkerLayer","removeAllMarkers","popup","addPopup","handle","indexOf","off","getZoom","getCenter","center","setCenter","getPitch","pitch","setPitch","getRotation","getBounds","rotation","setRotation","zoomIn","zoomOut","p","panTo","pixel","panBy","getContainer","zoom","setZoom","bound","options","getSceneConfig","fitBoundsOptions","animate","fitBounds","setZoomAndCenter","style","setMapStyle","setMapStatus","pixelToLngLat","lnglat","lngLatToPixel","containerToLngLat","lngLatToContainer","destroy","constructor","IPostProcessingPass","whenTargetNamed","logoVisible","logoPosition","position"],"mappings":"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","sourcesContent":["import { Logo } from '@antv/l7-component';\nimport {\n  Bounds,\n  createLayerContainer,\n  createSceneContainer,\n  IControl,\n  IControlService,\n  IFontService,\n  IIconFontGlyph,\n  IIconService,\n  IImage,\n  IInteractionService,\n  ILayer,\n  ILayerService,\n  ILngLat,\n  IMapService,\n  IMarker,\n  IMarkerLayer,\n  IMarkerService,\n  IPoint,\n  IPopup,\n  IPopupService,\n  IPostProcessingPass,\n  IRendererService,\n  ISceneConfig,\n  ISceneService,\n  IStatusOptions,\n  Point,\n  SceneEventList,\n  TYPES,\n} from '@antv/l7-core';\nimport { ReglRendererService } from '@antv/l7-renderer';\nimport { DOM } from '@antv/l7-utils';\nimport { Container } from 'inversify';\nimport ILayerManager from './ILayerManager';\nimport IMapController from './IMapController';\nimport IPostProcessingPassPluggable from './IPostProcessingPassPluggable';\n\n/**\n * 暴露 Scene API\n *\n * @example\n * import { Scene } from 'l7/scene';\n * import { PointLayer } from 'l7/layers';\n *\n * const scene = new Scene();\n * const pointLayer = new PointLayer();\n * scene.addLayer(pointLayer);\n *\n */\nclass Scene\n  implements IPostProcessingPassPluggable, IMapController, ILayerManager {\n  private sceneService: ISceneService;\n  private mapService: IMapService<unknown>;\n  private controlService: IControlService;\n  private layerService: ILayerService;\n  private iconService: IIconService;\n  private markerService: IMarkerService;\n  private popupService: IPopupService;\n  private fontService: IFontService;\n  private interactionService: IInteractionService;\n  private container: Container;\n\n  public constructor(config: ISceneConfig) {\n    const { id, map } = config;\n    // 创建场景容器\n    const sceneContainer = createSceneContainer();\n    this.container = sceneContainer;\n    // 绑定地图服务\n    map.setContainer(sceneContainer, id);\n\n    // 绑定渲染引擎服务\n    sceneContainer\n      .bind<IRendererService>(TYPES.IRendererService)\n      .to(ReglRendererService)\n      .inSingletonScope();\n\n    // 依赖注入\n    this.sceneService = sceneContainer.get<ISceneService>(TYPES.ISceneService);\n    this.mapService = sceneContainer.get<IMapService<unknown>>(\n      TYPES.IMapService,\n    );\n    this.iconService = sceneContainer.get<IIconService>(TYPES.IIconService);\n    this.fontService = sceneContainer.get<IFontService>(TYPES.IFontService);\n    this.controlService = sceneContainer.get<IControlService>(\n      TYPES.IControlService,\n    );\n    this.layerService = sceneContainer.get<ILayerService>(TYPES.ILayerService);\n\n    this.markerService = sceneContainer.get<IMarkerService>(\n      TYPES.IMarkerService,\n    );\n    this.interactionService = sceneContainer.get<IInteractionService>(\n      TYPES.IInteractionService,\n    );\n    this.popupService = sceneContainer.get<IPopupService>(TYPES.IPopupService);\n\n    this.initComponent(id);\n\n    // 初始化 scene\n    this.sceneService.init(config);\n    // TODO: 初始化组件\n\n    this.initControl();\n  }\n  public getServiceContainer(): Container {\n    return this.container;\n  }\n  public getSize(): [number, number] {\n    return this.mapService.getSize();\n  }\n  public getMinZoom(): number {\n    return this.mapService.getMinZoom();\n  }\n  public getMaxZoom(): number {\n    return this.mapService.getMaxZoom();\n  }\n  public getType(): string {\n    return this.mapService.getType();\n  }\n  public getMapContainer(): HTMLElement | null {\n    return this.mapService.getMapContainer();\n  }\n  public getMapCanvasContainer(): HTMLElement {\n    return this.mapService.getMapCanvasContainer() as HTMLElement;\n  }\n\n  public getMapService(): IMapService<unknown> {\n    return this.mapService;\n  }\n  public exportPng(type?: 'png' | 'jpg'): string {\n    return this.sceneService.exportPng(type);\n  }\n\n  public exportMap(type?: 'png' | 'jpg'): string {\n    return this.sceneService.exportPng(type);\n  }\n\n  public registerRenderService(render: any) {\n    if (this.sceneService.loaded) {\n      const renderSerivce = new render(this);\n      renderSerivce.init();\n    } else {\n      this.on('loaded', () => {\n        const renderSerivce = new render(this);\n        renderSerivce.init();\n      });\n    }\n  }\n\n  public get map() {\n    return this.mapService.map;\n  }\n\n  // layer 管理\n  public addLayer(layer: ILayer): void {\n    // 为当前图层创建一个容器\n    // TODO: 初始化的时候设置 容器\n    const layerContainer = createLayerContainer(this.container);\n    layer.setContainer(layerContainer);\n    this.sceneService.addLayer(layer);\n  }\n\n  public getLayers(): ILayer[] {\n    return this.layerService.getLayers();\n  }\n\n  public getLayer(id: string): ILayer | undefined {\n    return this.layerService.getLayer(id);\n  }\n\n  public getLayerByName(name: string): ILayer | undefined {\n    return this.layerService.getLayerByName(name);\n  }\n\n  public removeLayer(layer: ILayer): void {\n    this.layerService.remove(layer);\n  }\n\n  public removeAllLayer(): void {\n    this.layerService.removeAllLayers();\n  }\n\n  public render(): void {\n    this.sceneService.render();\n  }\n\n  // asset method\n  public addImage(id: string, img: IImage) {\n    this.iconService.addImage(id, img);\n  }\n\n  public hasImage(id: string) {\n    return this.iconService.hasImage(id);\n  }\n\n  public removeImage(id: string) {\n    this.iconService.removeImage(id);\n  }\n\n  public addIconFontGlyphs(fontFamily: string, glyphs: IIconFontGlyph[]) {\n    this.fontService.addIconGlyphs(glyphs);\n  }\n\n  // map control method\n  public addControl(ctr: IControl) {\n    this.controlService.addControl(ctr, this.container);\n  }\n\n  public removeControl(ctr: IControl) {\n    this.controlService.removeControl(ctr);\n  }\n\n  public getControlByName(name: string) {\n    return this.controlService.getControlByName(name);\n  }\n\n  // marker\n  public addMarker(marker: IMarker) {\n    this.markerService.addMarker(marker);\n  }\n\n  public addMarkerLayer(layer: IMarkerLayer) {\n    this.markerService.addMarkerLayer(layer);\n  }\n\n  public removeMarkerLayer(layer: IMarkerLayer) {\n    this.markerService.removeMarkerLayer(layer);\n  }\n\n  public removeAllMakers() {\n    this.markerService.removeAllMarkers();\n  }\n\n  public addPopup(popup: IPopup) {\n    this.popupService.addPopup(popup);\n  }\n\n  public on(type: string, handle: (...args: any[]) => void): void {\n    SceneEventList.indexOf(type) === -1\n      ? this.mapService.on(type, handle)\n      : this.sceneService.on(type, handle);\n  }\n\n  public off(type: string, handle: (...args: any[]) => void): void {\n    SceneEventList.indexOf(type) === -1\n      ? this.mapService.off(type, handle)\n      : this.sceneService.off(type, handle);\n  }\n\n  // implements IMapController\n\n  public getZoom(): number {\n    return this.mapService.getZoom();\n  }\n\n  public getCenter(): ILngLat {\n    return this.mapService.getCenter();\n  }\n\n  public setCenter(center: [number, number]) {\n    return this.mapService.setCenter(center);\n  }\n\n  public getPitch(): number {\n    return this.mapService.getPitch();\n  }\n\n  public setPitch(pitch: number) {\n    return this.mapService.setPitch(pitch);\n  }\n\n  public getRotation(): number {\n    return this.mapService.getRotation();\n  }\n\n  public getBounds(): Bounds {\n    return this.mapService.getBounds();\n  }\n\n  public setRotation(rotation: number): void {\n    this.mapService.setRotation(rotation);\n  }\n  public zoomIn(): void {\n    this.mapService.zoomIn();\n  }\n\n  public zoomOut(): void {\n    this.mapService.zoomOut();\n  }\n\n  public panTo(p: Point): void {\n    this.mapService.panTo(p);\n  }\n\n  public panBy(pixel: Point): void {\n    this.mapService.panBy(pixel);\n  }\n\n  public getContainer() {\n    return this.mapService.getContainer();\n  }\n  public setZoom(zoom: number): void {\n    this.mapService.setZoom(zoom);\n  }\n  public fitBounds(bound: Bounds, options?: unknown): void {\n    const { fitBoundsOptions, animate } = this.sceneService.getSceneConfig();\n    this.mapService.fitBounds(\n      bound,\n      // 选项优先级：用户传入，覆盖animate直接配置，覆盖Scene配置项传入\n      options || {\n        ...(fitBoundsOptions as object),\n        animate,\n      },\n    );\n  }\n\n  public setZoomAndCenter(zoom: number, center: Point): void {\n    this.mapService.setZoomAndCenter(zoom, center);\n  }\n\n  public setMapStyle(style: any): void {\n    this.mapService.setMapStyle(style);\n  }\n\n  public setMapStatus(options: Partial<IStatusOptions>) {\n    this.mapService.setMapStatus(options);\n  }\n\n  // conversion Method\n  public pixelToLngLat(pixel: Point): ILngLat {\n    return this.mapService.pixelToLngLat(pixel);\n  }\n\n  public lngLatToPixel(lnglat: Point): IPoint {\n    return this.mapService.lngLatToPixel(lnglat);\n  }\n\n  public containerToLngLat(pixel: Point): ILngLat {\n    return this.mapService.containerToLngLat(pixel);\n  }\n\n  public lngLatToContainer(lnglat: Point): IPoint {\n    return this.mapService.lngLatToContainer(lnglat);\n  }\n\n  public destroy() {\n    this.sceneService.destroy();\n    // TODO: 清理其他 Service 例如 IconService\n  }\n\n  public registerPostProcessingPass(\n    constructor: new (...args: any[]) => IPostProcessingPass<unknown>,\n    name: string,\n  ) {\n    this.container\n      .bind<IPostProcessingPass<unknown>>(TYPES.IPostProcessingPass)\n      .to(constructor)\n      .whenTargetNamed(name);\n  }\n\n  private initComponent(id: string | HTMLDivElement) {\n    this.controlService.init(\n      {\n        container: DOM.getContainer(id),\n      },\n      this.container,\n    );\n    this.markerService.init(this.container);\n    this.popupService.init(this.container);\n  }\n\n  private initControl() {\n    const { logoVisible, logoPosition } = this.sceneService.getSceneConfig();\n    if (logoVisible) {\n      this.addControl(new Logo({ position: logoPosition }));\n    }\n  }\n  // 资源管理\n}\n\nexport { Scene };\n"],"file":"index.js"}