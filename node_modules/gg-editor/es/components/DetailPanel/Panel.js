import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React from 'react';
import { pick } from "../../utils";

var Panel =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Panel, _React$Component);

  function Panel(props, type) {
    var _this;

    _classCallCheck(this, Panel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));
    _this.type = type;
    return _this;
  }

  _createClass(Panel, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          status = _this$props.status,
          children = _this$props.children;
      var type = this.type;

      if ("".concat(type, "-selected") !== status) {
        return null;
      }

      return React.createElement("div", pick(this.props, ['style', 'className']), children);
    }
  }]);

  return Panel;
}(React.Component);

Panel.create = function (type) {
  return (
    /*#__PURE__*/
    function (_Panel) {
      _inherits(TypedPanel, _Panel);

      function TypedPanel(props) {
        _classCallCheck(this, TypedPanel);

        return _possibleConstructorReturn(this, _getPrototypeOf(TypedPanel).call(this, props, type));
      }

      return TypedPanel;
    }(Panel)
  );
};

export default Panel;