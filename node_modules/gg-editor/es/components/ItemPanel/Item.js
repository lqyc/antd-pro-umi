import _objectSpread from "@babel/runtime/helpers/objectSpread";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React from 'react';
import withGGEditorContext from "../../common/context/GGEditorContext/withGGEditorContext";

var Item =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Item, _React$Component);

  function Item(props) {
    var _this;

    _classCallCheck(this, Item);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this, props));

    _this.handleMouseDown = function () {
      var _this$props = _this.props,
          type = _this$props.type,
          size = _this$props.size,
          shape = _this$props.shape,
          model = _this$props.model;

      if (_this.page) {
        _this.page.beginAdd(type, _objectSpread({
          type: type,
          size: size,
          shape: shape
        }, model));
      }
    };

    _this.bindEvent();

    return _this;
  }

  _createClass(Item, [{
    key: "bindEvent",
    value: function bindEvent() {
      var _this2 = this;

      var onAfterAddPage = this.props.onAfterAddPage;
      onAfterAddPage(function (_ref) {
        var page = _ref.page;
        _this2.page = page;
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          src = _this$props2.src,
          shape = _this$props2.shape,
          children = _this$props2.children;
      return React.createElement("div", {
        style: {
          cursor: 'pointer'
        },
        onMouseDown: this.handleMouseDown
      }, src ? React.createElement("img", {
        src: src,
        alt: shape,
        draggable: false
      }) : children);
    }
  }]);

  return Item;
}(React.Component);

export default withGGEditorContext(Item);