'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _g2PluginSlider = require('@antv/g2-plugin-slider');

var _g2PluginSlider2 = _interopRequireDefault(_g2PluginSlider);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _errorBoundary = require('./error-boundary');

var _errorBoundary2 = _interopRequireDefault(_errorBoundary);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SliderAttrs = ['width', 'height', 'padding', 'xAis', 'yAxis', 'start', 'end', 'fillerStyle', 'backgroundStyle', 'scales', 'textStyle', 'handleStyle', 'backgroundChart'];

function sliderNeedRebuild(props, nextProps) {
  if (props.onChange !== nextProps.onChange) {
    return true;
  }

  for (var i = 0; i < SliderAttrs.length; i += 1) {
    var attr = SliderAttrs[i];
    if (!window.G2.Util.isEqual(props[attr], nextProps[attr])) {
      return true;
    }
  }

  return false;
}

var Slider = function (_Component) {
  _inherits(Slider, _Component);

  function Slider() {
    _classCallCheck(this, Slider);

    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this));

    _this.refHandle = function (cw) {
      // chart container wrap for reset operation
      if (!_this.container) {
        _this.container = cw;
      }
    };

    _this.reBuild = false;
    return _this;
  }

  _createClass(Slider, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var slider = this.createG2Instance();
      slider.render();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _props = this.props,
          data = _props.data,
          others = _objectWithoutProperties(_props, ['data']);

      var nextData = nextProps.data,
          nextOthers = _objectWithoutProperties(nextProps, ['data']);
      // refrence compare


      if (data !== nextData) {
        this.slider.changeData(nextData);
        this.slider.repaint();
      }

      if (sliderNeedRebuild(others, nextOthers)) {
        this.reBuild = true;
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (!this.reBuild) {
        return;
      }

      this.slider.destroy();
      var slider = this.createG2Instance();
      slider.render();
      this.reBuild = false;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.slider.destroy();
    }
  }, {
    key: 'createG2Instance',
    value: function createG2Instance() {
      this.slider = new _g2PluginSlider2.default(_extends({ container: this.container }, this.props));
      return this.slider;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement('div', { ref: this.refHandle });
    }
  }]);

  return Slider;
}(_react.Component);

var BSlider = function (_Component2) {
  _inherits(BSlider, _Component2);

  function BSlider() {
    _classCallCheck(this, BSlider);

    return _possibleConstructorReturn(this, (BSlider.__proto__ || Object.getPrototypeOf(BSlider)).apply(this, arguments));
  }

  _createClass(BSlider, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _errorBoundary2.default,
        null,
        _react2.default.createElement(Slider, this.props)
      );
    }
  }]);

  return BSlider;
}(_react.Component);

exports.default = BSlider;
module.exports = exports['default'];